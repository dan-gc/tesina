(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2819377,      49419]
NotebookOptionsPosition[   2808385,      49252]
NotebookOutlinePosition[   2809392,      49280]
CellTagsIndexPosition[   2809349,      49277]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Section 5A", "Title",
 CellChangeTimes->{{3.903260036448679*^9, 3.9032600373556557`*^9}, {
  3.904480132085465*^9, 3.9044801484697857`*^9}, {3.9047443823005037`*^9, 
  3.904744386179234*^9}, {3.906054426397975*^9, 3.906054428745187*^9}, {
  3.9062255023828583`*^9, 3.906225507281196*^9}, {3.9062255655931053`*^9, 
  3.906225565776046*^9}, {3.906233498648278*^9, 3.906233498994379*^9}, {
  3.906233558746325*^9, 
  3.906233559069531*^9}},ExpressionUUID->"7340ae0c-826c-49d3-becc-\
8da37739b689"],

Cell[TextData[StyleBox["This is the first part of three notebooks in which \
the figures in Section 5 were created. To make any changes first Evaluate \
Initialization Cells.",
 FontSize->13,
 FontColor->RGBColor[0., 0., 0.]]], "Text",
 CellChangeTimes->{{3.9039100620984592`*^9, 3.90391006433148*^9}, {
  3.904744391068102*^9, 3.904744463022229*^9}, {3.904824676786264*^9, 
  3.9048247257983418`*^9}, {3.9060543984932337`*^9, 3.906054416122662*^9}, {
  3.90622306867927*^9, 3.906223110357787*^9}, {3.906225482262166*^9, 
  3.90622554797069*^9}, {3.906233500819489*^9, 3.906233508325132*^9}, {
  3.906233539224455*^9, 
  3.9062335401709547`*^9}},ExpressionUUID->"93898a2b-b86a-4f61-8936-\
63701c3b1671"],

Cell[CellGroupData[{

Cell["3-dimensional analogue", "Chapter",
 CellChangeTimes->{{3.90404658630053*^9, 3.9040466184502172`*^9}, {
  3.9062335529453697`*^9, 
  3.906233557270689*^9}},ExpressionUUID->"f766e778-1c1b-47a3-83fd-\
0b8626fe6242"],

Cell["Let\[CloseCurlyQuote]s make a pentagram", "Text",
 CellChangeTimes->{{3.903910154375659*^9, 3.903910177085216*^9}, {
  3.903910637058494*^9, 
  3.903910651359002*^9}},ExpressionUUID->"133cf86c-7347-49b3-aa28-\
1414ee455218"],

Cell[BoxData[{
 RowBox[{"VPgm", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"\[Pi]", "/", "2"}], ",", 
      RowBox[{
       RowBox[{"4", "\[Pi]"}], "+", 
       RowBox[{"\[Pi]", "/", "2"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", "\[Pi]"}], ")"}], "/", "5"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"EPgm", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"VPgm", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"VPgm", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"flagPgm", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"VPgm", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"Midpoint", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"VPgm", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"VPgm", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphPgmedg", ":=", 
  RowBox[{"Graphics", "[", "EPgm", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphPgm", ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", "EPgm", ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Darker", "[", "Yellow", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Polygon", "[", "VPgm", "]"}]}], "}"}], "]"}]}], "\n", 
 RowBox[{"gphflagPgm", ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flagPgm", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Blue", ",", "Green"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Cyan"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", "flagPgm", "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.903910147153236*^9, 3.903910149429285*^9}, {
  3.9039101816871634`*^9, 3.903910295140266*^9}, {3.9039103899975243`*^9, 
  3.9039104218669643`*^9}, {3.9039105381697474`*^9, 3.903910545875771*^9}, {
  3.9039117078257*^9, 3.903911727342539*^9}, {3.90391176285655*^9, 
  3.9039118317825317`*^9}, {3.904046383060495*^9, 3.904046388134843*^9}, {
  3.90404651574094*^9, 3.9040465189534607`*^9}, {3.904046636327373*^9, 
  3.904046636910967*^9}, {3.904065640436784*^9, 3.9040656460951557`*^9}, {
  3.904245456191354*^9, 3.9042455400542173`*^9}, {3.904245587148446*^9, 
  3.904245632259903*^9}, {3.904246257939961*^9, 3.90424629313058*^9}, {
  3.9042466945526*^9, 3.90424674063306*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"a57f7d85-c048-4bd6-95a8-3dd672edc10a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "gphPgm", "]"}]], "Input",
 CellChangeTimes->{{3.903910260589409*^9, 3.903910266126514*^9}, {
   3.903910328860882*^9, 3.903910382080595*^9}, {3.903910415851961*^9, 
   3.9039106285361433`*^9}, 3.903910745478462*^9, {3.903911711254203*^9, 
   3.903911718879303*^9}, {3.9039117850849447`*^9, 3.9039117902008944`*^9}, {
   3.903911834068419*^9, 3.903911841717342*^9}, {3.90407997688155*^9, 
   3.904079977268455*^9}, {3.904245521302753*^9, 3.9042455214789467`*^9}, {
   3.904246697654491*^9, 3.9042466978078403`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"cd053ff9-bb2d-423e-9c7c-05cce96ebaf2"],

Cell[BoxData[
 GraphicsBox[
  {Thickness[
   Large], {LineBox[
     NCache[{{0, 
       1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{0, 
       1}, {-0.5877852522924731, -0.8090169943749475}}]], 
    LineBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 + 
         5^Rational[1, 2])}}, {{-0.5877852522924731, -0.8090169943749475}, {
      0.9510565162951535, 0.30901699437494745`}}]], 
    LineBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2], 
        Rational[1, 4] (-1 + 
         5^Rational[1, 2])}, {-(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{0.9510565162951535, 
      0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}}]], 
    LineBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{-0.9510565162951535, 
      0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}]], 
    LineBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{
       0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}, 
   {RGBColor[
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[7, 9], 0.7777777777777778], 
     NCache[
      Rational[1, 3], 0.3333333333333333]], Opacity[1], 
    PolygonBox[
     NCache[{{0, 
       1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 + 
         5^Rational[1, 2])}, {-(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{0, 
       1}, {-0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
       0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}, {
       0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}}]], "Output",
 CellChangeTimes->{{3.90391033944847*^9, 3.9039103822914762`*^9}, {
   3.903910416298267*^9, 3.9039105068376293`*^9}, {3.9039105492657833`*^9, 
   3.903910563067444*^9}, {3.903910602309518*^9, 3.9039106289841948`*^9}, 
   3.90391074595212*^9, 3.9039117409652033`*^9, 3.903911844285722*^9, {
   3.90404663160392*^9, 3.9040466396746893`*^9}, 3.90407997798041*^9, {
   3.9042454805278063`*^9, 3.904245541607809*^9}, {3.904245594097765*^9, 
   3.9042456335472918`*^9}, {3.904246261066638*^9, 3.904246294863223*^9}, {
   3.904246698117606*^9, 3.9042467432559423`*^9}},
 CellLabel->
  "Out[311]=",ExpressionUUID->"52363608-9ad3-4d02-8beb-99be6054d434"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "EPgm", ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"VPgm", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"VPgm", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", "Magenta", ",", 
      RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{
        RowBox[{"flagPgm", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sqrt", "[", "5", "]"}], "-", "2"}], ")"}], "/", "2"}], 
         "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"VPgm", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"VPgm", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], "]"}]}], "}"}], 
    "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "I", " ", "find", " ", "a", " ", "vertex", " ", "of", " ", 
    "the", " ", "pentagon"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.903910260589409*^9, 3.903910266126514*^9}, {
   3.903910328860882*^9, 3.903910382080595*^9}, {3.903910415851961*^9, 
   3.9039106285361433`*^9}, {3.903910742778983*^9, 3.903910791227077*^9}, {
   3.903910821456789*^9, 3.9039108432005987`*^9}, 3.903910978172719*^9, {
   3.903911498435473*^9, 3.90391153285609*^9}, {3.903911576629911*^9, 
   3.903911593787241*^9}, {3.903911729210371*^9, 3.903911737675962*^9}, {
   3.903911859646093*^9, 3.9039118626107473`*^9}, {3.9040464670714083`*^9, 
   3.904046482935565*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"79fcf677-b935-47f9-8c41-dacab4f77a8b"],

Cell["Look at that pentagon in there:", "Text",
 CellChangeTimes->{{3.904065244989699*^9, 3.904065251952345*^9}, 
   3.904065433200926*^9},ExpressionUUID->"d08b6c72-60ef-4f55-8ef8-\
7ced94463eb0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"u0", ":=", 
  RowBox[{
   RowBox[{"flagPgm", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "+", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sqrt", "[", "5", "]"}], "-", "2"}], ")"}], "/", "2"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"VPgm", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "-", 
      RowBox[{"VPgm", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}]}], "\n", 
 RowBox[{"VPgn", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RotationTransform", "[", 
      RowBox[{"2", "*", "k", "*", 
       RowBox[{"\[Pi]", "/", "5"}]}], "]"}], "[", "u0", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"EPgn", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"VPgn", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"VPgn", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphPgn", ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Blue"}], "]"}], ",", 
     RowBox[{"Polygon", "[", "VPgn", "]"}]}], "}"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.903911628483193*^9, 3.903911641030521*^9}, {
   3.903911676868038*^9, 3.903911702541827*^9}, {3.903911745598281*^9, 
   3.903911750194577*^9}, {3.9039118703223047`*^9, 3.9039119240725594`*^9}, 
   3.9039521347735577`*^9, {3.903993748664077*^9, 3.903993798437243*^9}, {
   3.904046321560166*^9, 3.904046441459857*^9}, {3.904046504106304*^9, 
   3.9040465340523653`*^9}, {3.904046643551486*^9, 3.904046644101672*^9}, {
   3.904057236008334*^9, 3.904057252086253*^9}, {3.9040573032450867`*^9, 
   3.9040573250609913`*^9}, {3.904057376155945*^9, 3.904057416377789*^9}, {
   3.9040575295550117`*^9, 3.9040575332947598`*^9}, {3.90405764804206*^9, 
   3.9040576873843527`*^9}, 3.904057809415551*^9, {3.904057986292632*^9, 
   3.904058038001691*^9}, {3.904058077599284*^9, 3.904058078424317*^9}, {
   3.9040581121512003`*^9, 3.9040581273835163`*^9}, {3.904061625846805*^9, 
   3.9040616279249763`*^9}, {3.904065128605225*^9, 3.904065130044701*^9}, {
   3.904065161896804*^9, 3.90406520275644*^9}, {3.904065260804467*^9, 
   3.904065272487027*^9}, {3.90408107910039*^9, 3.904081082933823*^9}, {
   3.9042454197240677`*^9, 
   3.904245446712945*^9}},ExpressionUUID->"bbd9ff95-8d9b-485e-b9c6-\
384d15931dd7"],

Cell[BoxData["gphP"], "Output",
 CellChangeTimes->{3.904245426616613*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"48fec413-0640-4ef1-aeff-81af7c7a06f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphPgn", ",", "gphPgm"}], "]"}]], "Input",
 CellChangeTimes->{{3.904065279657447*^9, 3.9040652802227793`*^9}, {
  3.904245527689028*^9, 3.904245527951664*^9}, {3.9042467355169992`*^9, 
  3.9042467357332773`*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"b42a391b-b80a-4c07-9659-ea085404f6ea"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Opacity[0.7], 
    PolygonBox[
     NCache[{{(
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 + 
           5^Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 + 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 - 5^
           Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 - 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 - 5^
           Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 - 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 + 
           5^Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 + 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (-2 + 
           5^Rational[1, 2])) (-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
           Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
        Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
          Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
          Rational[1, 4] (1 - 5^Rational[1, 2]))}}, {{
      0.3632712640026805, -0.11803398874989496`}, {0.22451398828979277`, 
      0.30901699437494745`}, {-0.22451398828979266`, 
      0.30901699437494756`}, {-0.3632712640026805, -0.11803398874989479`}, \
{-8.326672684688674*^-17, -0.3819660112501052}}]]}, 
   {Thickness[
    Large], {LineBox[
      NCache[{{0, 
        1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{0, 
        1}, {-0.5877852522924731, -0.8090169943749475}}]], 
     LineBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}}, {{-0.5877852522924731, -0.8090169943749475}, {
       0.9510565162951535, 0.30901699437494745`}}]], 
     LineBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{0.9510565162951535, 
       0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}}]], 
     LineBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{-0.9510565162951535, 
       0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}]], 
     LineBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{
        0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}, 
    {RGBColor[
      NCache[
       Rational[7, 9], 0.7777777777777778], 
      NCache[
       Rational[7, 9], 0.7777777777777778], 
      NCache[
       Rational[1, 3], 0.3333333333333333]], Opacity[1], 
     PolygonBox[
      NCache[{{0, 
        1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{0, 
        1}, {-0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
        0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}, {
        0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}}}]], "Output",
 CellChangeTimes->{{3.9040652771087933`*^9, 3.9040652808852987`*^9}, {
   3.904245511204763*^9, 3.904245544618334*^9}, 3.904245603157515*^9, 
   3.9042456369936047`*^9, {3.904246254704358*^9, 3.9042462701860037`*^9}, 
   3.904246300933077*^9, {3.9042467164273376`*^9, 3.9042467458603077`*^9}},
 CellLabel->
  "Out[312]=",ExpressionUUID->"b5793956-63c3-420a-949d-51bd298a164b"]
}, Open  ]],

Cell["\<\
Can you imagine it is the vertex figure of some vertex in an icosahedron?\
\>", "Text",
 CellChangeTimes->{{3.904065295688293*^9, 
  3.9040653252915993`*^9}},ExpressionUUID->"0ca83fe2-1f37-48ff-bac5-\
4fe6eac01977"],

Cell[BoxData[{
 RowBox[{"ico2", ":=", 
  RowBox[{"Icosahedron", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"V2", ":=", 
  RowBox[{"PolyhedronData", "[", 
   RowBox[{"\"\<Icosahedron\>\"", ",", "\"\<VertexCoordinates\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphico2", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0", "]"}], ",", "ico2"}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}], "\n", 
 RowBox[{"gphedgPgm", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "11", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "12", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"verfig", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"V2", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"V2", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"V2", "[", 
     RowBox[{"[", "6", "]"}], "]"}], ",", 
    RowBox[{"V2", "[", 
     RowBox[{"[", "9", "]"}], "]"}], ",", 
    RowBox[{"V2", "[", 
     RowBox[{"[", "10", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphvertfig", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Blue"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"gphPgmico", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Yellow"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "12", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "11", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphedgPgm", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "11", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "8", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "7", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "10", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "12", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.904080132615943*^9, 3.904080150368959*^9}, {
  3.9040808247354717`*^9, 3.904080849362767*^9}, {3.904080931075243*^9, 
  3.904080946984844*^9}, {3.904245718864829*^9, 3.90424572594881*^9}, {
  3.9042457604742117`*^9, 3.9042457740928373`*^9}, {3.90424581062193*^9, 
  3.904245969146941*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"876d5295-0553-413a-9b81-9e8a4ec95050"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphico2", ",", "gphvertfig", ",", "gphedgPgm", ",", "gphPgmico"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904065341545869*^9, 3.904065398172942*^9}, {
  3.9042459622464733`*^9, 3.904245962435061*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"1a41ea19-7c53-440d-a482-7d4692508992"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0], 
    InterpretationBox[
     PolyhedronBox[
      NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
        0, 0, 5 (50 - 10 5^Rational[1, 2])^
          Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
         0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
          Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), Rational[
         1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
        0, 0, -0.9510565162951536}, {
        0, 0, 0.9510565162951536}, {-0.85065080835204, 
         0, -0.42532540417601994`}, {
        0.85065080835204, 0, 0.42532540417601994`}, {
        0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868,
         0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
        0.42532540417601994`}, {-0.6881909602355868, 0.5, 
        0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
        0.8090169943749475, -0.42532540417601994`}, {
        0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
        0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], {{2, 
      12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5,
       1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
      11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
      10}, {9, 7, 3}}],
     Icosahedron[]]}, 
   {RGBColor[0, 0, 1], Opacity[0.7], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]]}, 
   {Thickness[Large], 
    Line3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
         Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0.6881909602355868, -0.5, -0.42532540417601994`}, {
       0.2628655560595668, -0.8090169943749475, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}, \
{-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.2628655560595668, 
       0.8090169943749475, 0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}}]]}, 
   {RGBColor[1, 1, 0], Opacity[0.7], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
      0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}, {
      0.6881909602355868, 0.5, -0.42532540417601994`}, {-0.2628655560595668, 
      0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0.85065080835204, 0, 0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 
         5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}}, {{-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 0, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 
         5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}}, {{-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
      0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
      0.6881909602355868, -0.5, -0.42532540417601994`}, {-0.2628655560595668, \
-0.8090169943749475, -0.42532540417601994`}}]]}},
  Boxed->False,
  ImageSize->{359.4484161760289, 361.98097722538563`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.8883026912854703`, 2.133490061669183, -1.8255226930506452`},
  ViewVertical->{-0.5075157903839446, -0.24041393464685742`, \
-0.8274230251440773}]], "Output",
 CellChangeTimes->{{3.904065342128455*^9, 3.904065398690268*^9}, {
   3.9042459627448273`*^9, 3.9042459715448723`*^9}, 3.904246272557789*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"cf3f3b31-82ab-487a-a715-a95b87ae3889"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gphp1", ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Green", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"V2", "[", 
        RowBox[{"[", "12", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "are", " ", "the", " ", "other", " ", "vertices", " ", "in", 
    " ", "the", " ", "pentagon"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphp2", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Blue", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"V2", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphp3", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Red", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"V2", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphp4", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Yellow", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"V2", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphp5", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Pink", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"V2", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphp6", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Purple", ",", 
     RowBox[{"Point", "[", 
      RowBox[{"V2", "[", 
       RowBox[{"[", "10", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "gphico2", ",", "gphp1", ",", "gphp2", ",", "gphp3", ",", "gphp4", ",", 
   "gphp5", ",", "gphp6", ",", "gphvertfig", ",", "gphedgPgm"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.904058697928831*^9, 3.9040591645369596`*^9}, {
   3.90405920709229*^9, 3.9040592245132732`*^9}, {3.9040592801607227`*^9, 
   3.9040597853019876`*^9}, {3.904060990085162*^9, 3.9040614342242126`*^9}, {
   3.904061485583959*^9, 3.904061613672608*^9}, 3.904061652573955*^9, {
   3.904061949528549*^9, 3.9040620295987864`*^9}, {3.9040620997048798`*^9, 
   3.904062106480157*^9}, {3.9040623946814327`*^9, 3.9040624513856773`*^9}, {
   3.904062627228895*^9, 3.904062637242593*^9}, {3.904062675169042*^9, 
   3.904062712830123*^9}, {3.904062754547133*^9, 3.904062794860778*^9}, {
   3.904062963836627*^9, 3.9040630364254303`*^9}, {3.9040649821525517`*^9, 
   3.904064994195403*^9}, {3.9040650405506973`*^9, 3.904065100142578*^9}, {
   3.904079935401868*^9, 3.904079947939314*^9}, {3.9040801121609*^9, 
   3.904080253687662*^9}, {3.904080984043089*^9, 3.904080985695359*^9}, {
   3.904245788645514*^9, 3.9042458034627333`*^9}, {3.904245834465301*^9, 
   3.904245918624611*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"0f8cbbd3-2dc0-4bd2-b59d-e02709e9c455"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0], 
    InterpretationBox[
     PolyhedronBox[
      NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
        0, 0, 5 (50 - 10 5^Rational[1, 2])^
          Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
         0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
          Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), Rational[
         1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
        0, 0, -0.9510565162951536}, {
        0, 0, 0.9510565162951536}, {-0.85065080835204, 
         0, -0.42532540417601994`}, {
        0.85065080835204, 0, 0.42532540417601994`}, {
        0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868,
         0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
        0.42532540417601994`}, {-0.6881909602355868, 0.5, 
        0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
        0.8090169943749475, -0.42532540417601994`}, {
        0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
        0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], {{2, 
      12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5,
       1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
      11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
      10}, {9, 7, 3}}],
     Icosahedron[]]}, 
   {RGBColor[0, 1, 0], PointSize[0.04], 
    Point3DBox[
     NCache[{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
        5^Rational[1, 2]), 
       Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
        Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
      0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}]]}, 
   {RGBColor[0, 0, 1], PointSize[0.04], 
    Point3DBox[
     NCache[{-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
       0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {-0.85065080835204, 
       0, -0.42532540417601994`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.04], 
    Point3DBox[
     NCache[{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
        5^Rational[1, 2]), 
       Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
      0.6881909602355868, -0.5, -0.42532540417601994`}]]}, 
   {RGBColor[1, 1, 0], PointSize[0.04], 
    Point3DBox[
     NCache[{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
        5^Rational[1, 2]), Rational[
       1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
      0.6881909602355868, 0.5, -0.42532540417601994`}]]}, 
   {RGBColor[1, 0.5, 0.5], PointSize[0.04], 
    Point3DBox[
     NCache[{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 
        5^Rational[1, 2]), 
       Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
        Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
        Rational[-1, 
          2]}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}]]}, 
   {RGBColor[0.5, 0, 0.5], PointSize[0.04], 
    Point3DBox[
     NCache[{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 
        5^Rational[1, 2]), 
       Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
        Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-0.2628655560595668, 
      0.8090169943749475, -0.42532540417601994`}]]}, 
   {RGBColor[0, 0, 1], Opacity[0.7], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]]}, 
   {Thickness[Large], 
    Line3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
         Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0.6881909602355868, -0.5, -0.42532540417601994`}, {
       0.2628655560595668, -0.8090169943749475, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}, \
{-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.2628655560595668, 
       0.8090169943749475, 0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}}]]}},
  Boxed->False,
  ImageSize->{356.44779592565834`, 356.7712489350562},
  ImageSizeRaw->Automatic,
  ViewPoint->{-0.655682769957469, 3.057897337558011, -1.2920309509204992`},
  ViewVertical->{-0.46929845394749414`, 
   0.21553369524964547`, -0.8563318208116085}]], "Output",
 CellChangeTimes->{
  3.904080986276539*^9, {3.904245782383974*^9, 3.904245803820754*^9}, {
   3.9042458394151077`*^9, 3.9042459189397373`*^9}},
 CellLabel->
  "Out[209]=",ExpressionUUID->"e3b6083b-3338-4582-91e3-9c3b3c9909c3"]
}, Closed]],

Cell["Try to think of a flag that will generate that icosahedron:", "Text",
 CellChangeTimes->{{3.904065451276186*^9, 
  3.904065461973949*^9}},ExpressionUUID->"f665dcab-94e4-4c66-ba34-\
3ff256b0c86c"],

Cell[BoxData[{
 RowBox[{"flagPgnIco", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"V2", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", 
    RowBox[{"Midpoint", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"V2", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{"V2", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"RegionCentroid", "[", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"V2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"V2", "[", 
         RowBox[{"[", "9", "]"}], "]"}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"gphflagPgnIco", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flagPgnIco", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Blue", ",", "Green", ",", "Yellow"}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Magenta"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", "flagPgnIco", "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.904080951453121*^9, 3.904080952103318*^9}, {
  3.904081002675076*^9, 3.904081045914403*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"7c5e9705-d690-4b4b-8f67-a34e464abf86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphico2", ",", "gphPgmico", ",", "gphvertfig", ",", "gphedgPgm", ",", 
   "gphflagPgnIco"}], "]"}]], "Input",
 CellChangeTimes->{{3.9040654782104073`*^9, 3.9040654790296993`*^9}, {
  3.904246417349657*^9, 3.904246418165169*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"46d63295-45ce-40a9-abff-a28e456b512a"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0], 
    InterpretationBox[
     PolyhedronBox[
      NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
        0, 0, 5 (50 - 10 5^Rational[1, 2])^
          Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
         0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
          Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), Rational[
         1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
        0, 0, -0.9510565162951536}, {
        0, 0, 0.9510565162951536}, {-0.85065080835204, 
         0, -0.42532540417601994`}, {
        0.85065080835204, 0, 0.42532540417601994`}, {
        0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868,
         0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
        0.42532540417601994`}, {-0.6881909602355868, 0.5, 
        0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
        0.8090169943749475, -0.42532540417601994`}, {
        0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
        0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], {{2, 
      12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5,
       1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
      11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
      10}, {9, 7, 3}}],
     Icosahedron[]]}, 
   {RGBColor[1, 1, 0], Opacity[0.7], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
      0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}, {
      0.6881909602355868, 0.5, -0.42532540417601994`}, {-0.2628655560595668, 
      0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0.85065080835204, 0, 0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 
         5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}}, {{-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 0, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 
         5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}}, {{-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
      0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
      0.6881909602355868, -0.5, -0.42532540417601994`}, {-0.2628655560595668, \
-0.8090169943749475, -0.42532540417601994`}}]]}, 
   {RGBColor[0, 0, 1], Opacity[0.7], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]]}, 
   {Thickness[Large], 
    Line3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
         Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0.6881909602355868, -0.5, -0.42532540417601994`}, {
       0.2628655560595668, -0.8090169943749475, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}, \
{-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.2628655560595668, 
       0.8090169943749475, 0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}}]]}, 
   {PointSize[0.04], 
    Point3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2], 
        Rational[1, 8] (-2 - (2 (3 + 5^Rational[1, 2]))^
         Rational[1, 2]), -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {((
           Rational[
            1, 3] ((Rational[1, 2]/(120 - 40 5^Rational[1, 2])) (5 - 5^
              Rational[1, 2]))^Rational[1, 2]) (1 + 5^Rational[1, 2])) (
          Rational[
           1, 4] + (3 (5/(120 - 40 5^Rational[1, 2]))^Rational[1, 2]) (-1 + 
            5^Rational[1, 2]) + ((
             Rational[1, 2] (1 - 5^
              Rational[
               1, 2])) (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
            5^Rational[1, 2]) + (
            Rational[
             1, 2] (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
             5^Rational[1, 2])^2 + 
          Rational[1, 4] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
            Rational[1, 2] + (
            Rational[-5, 
              2] ((50 - 10 5^Rational[1, 2]) (5 - 5^Rational[1, 2]))^
             Rational[-1, 2]) (-2^Rational[1, 2] + 
            10^Rational[1, 2]) - ((10 - 2 5^Rational[1, 2]) (5 - 5^
             Rational[1, 2]))^Rational[-1, 2] (-2^Rational[1, 2] + 
           10^Rational[1, 2])) + ((((Rational[1, 12]/(-3 + 
             5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
             24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))) (-20 + 
            10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
              5^Rational[1, 2]))^
            Rational[
             1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2])) ((2 (5 - 5^Rational[1, 2])) (25280 - 10560 
             5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2]))^
           Rational[-1, 
             2]) (((((Rational[-3, 160]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^
              Rational[1, 2]) ((-5 + 5^Rational[1, 2])/(-128640 + 
              56960 5^Rational[1, 2] + 
              16000 (5 - 5^Rational[1, 2]) - (7296 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) - 
              4608 (5 - 5^Rational[1, 2])^2 + (2048 
                5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 - 
              67200 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              30080 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] + 
              30080 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              13440 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 16]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((50 - 10 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 40]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((10 - 2 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^Rational[1, 2])^(-1) ((5 + 
               5^Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])^
            Rational[-1, 2] + ((((Rational[1, 8] (1 - 5^Rational[1, 2]))/(-3 + 
              5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^
            Rational[-1, 
              2] + ((((Rational[1, 8]/(-3 + 5^Rational[1, 2])) (1 + 
               5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^Rational[-1, 2]), 
        Rational[1, 6] (
          Rational[-1, 4] - (
           3 (5/(120 - 40 5^Rational[1, 2]))^Rational[1, 2]) (-1 + 
           5^Rational[1, 2]) + ((
             Rational[-1, 2] (1 - 5^
              Rational[
               1, 2])) (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
            5^Rational[1, 2]) + (
            Rational[-1, 
              2] (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
             5^Rational[1, 2])^2 + 
          Rational[-1, 
             4] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
            Rational[1, 2] + (
            Rational[
             5, 2] ((50 - 10 5^Rational[1, 2]) (5 - 5^Rational[1, 2]))^
             Rational[-1, 2]) (-2^Rational[1, 2] + 
            10^Rational[1, 2]) + ((10 - 2 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))^Rational[-1, 2] (-2^Rational[1, 2] + 
            10^Rational[1, 2])) + ((((Rational[1, 24]/(-3 + 
             5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
             24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
            9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
            3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
            2880 (5 - 5^
             Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^Rational[1, 2]) + 
            896 (5 - 5^Rational[1, 2])^2 - (384 
             5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
            12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
            5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] - 
            5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] + 
            2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])^
           Rational[-1, 
             2]) (((((Rational[-3, 160]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^
              Rational[1, 2]) ((-5 + 5^Rational[1, 2])/(-128640 + 
              56960 5^Rational[1, 2] + 
              16000 (5 - 5^Rational[1, 2]) - (7296 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) - 
              4608 (5 - 5^Rational[1, 2])^2 + (2048 
                5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 - 
              67200 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              30080 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] + 
              30080 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              13440 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 16]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((50 - 10 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 40]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((10 - 2 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^Rational[1, 2])^(-1) ((5 + 
               5^Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])^
            Rational[-1, 2] + ((((Rational[1, 8] (1 - 5^Rational[1, 2]))/(-3 + 
              5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^
            Rational[-1, 
              2] + ((((Rational[1, 8]/(-3 + 5^Rational[1, 2])) (1 + 
               5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^Rational[-1, 2]), -(Rational[5, 2]/(5 - 5^
           Rational[1, 2]))^
          Rational[1, 2] + ((
           Rational[1, 6] (5 - 5^Rational[1, 2])^
            Rational[-1, 2]) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
          Rational[
           1, 4] + (3 (5/(120 - 40 5^Rational[1, 2]))^Rational[1, 2]) (-1 + 
            5^Rational[1, 2]) + ((
             Rational[1, 2] (1 - 5^
              Rational[
               1, 2])) (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
            5^Rational[1, 2]) + (
            Rational[
             1, 2] (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
             5^Rational[1, 2])^2 + 
          Rational[1, 4] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
            Rational[1, 2] + (
            Rational[-5, 
              2] ((50 - 10 5^Rational[1, 2]) (5 - 5^Rational[1, 2]))^
             Rational[-1, 2]) (-2^Rational[1, 2] + 
            10^Rational[1, 2]) - ((10 - 2 5^Rational[1, 2]) (5 - 5^
             Rational[1, 2]))^Rational[-1, 2] (-2^Rational[1, 2] + 
           10^Rational[
             1, 2])) + (((((Rational[-1, 240]/(-3 + 
              5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (80 - 
             16 5^Rational[1, 2] + 
             24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))) (10 - 
            5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2])) ((5 - 5^Rational[1, 2])/(25280 - 10560 
            5^Rational[1, 2] - 
            2880 (5 - 5^
             Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^Rational[1, 2]) + 
            896 (5 - 5^Rational[1, 2])^2 - (384 
             5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
            12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
            5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] - 
            5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] + 
            2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2]))^
           Rational[
            1, 2]) (((((Rational[-3, 160]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^
              Rational[1, 2]) ((-5 + 5^Rational[1, 2])/(-128640 + 
              56960 5^Rational[1, 2] + 
              16000 (5 - 5^Rational[1, 2]) - (7296 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) - 
              4608 (5 - 5^Rational[1, 2])^2 + (2048 
                5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 - 
              67200 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              30080 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] + 
              30080 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              13440 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 16]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((50 - 10 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 40]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((10 - 2 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^Rational[1, 2])^(-1) ((5 + 
               5^Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])^
            Rational[-1, 2] + ((((Rational[1, 8] (1 - 5^Rational[1, 2]))/(-3 + 
              5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^
            Rational[-1, 
              2] + ((((Rational[1, 8]/(-3 + 5^Rational[1, 2])) (1 + 
               5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^Rational[-1, 2])}, {0, 0, 0}}, {{
       0.6881909602355868, -0.5, -0.42532540417601994`}, {
       0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
       0.14177513472533873`, -0.4363389981249837, -0.6005691082157305}, {0, 0,
        0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{
         0.6881909602355868, -0.5, -0.42532540417601994`}, {
         0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
         0.14177513472533873`, -0.4363389981249837, -0.6005691082157305}, {0.,
          0., 0.}}, {
          Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 4244837990213017946}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{
         0.6881909602355868, -0.5, -0.42532540417601994`}, {
         0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
         0.14177513472533873`, -0.4363389981249837, -0.6005691082157305}, {0.,
          0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{352.843607182487, 364.0097983424219},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.7327446477469275`, -1.4865626835161097`, -2.4975442686130243`},
  ViewVertical->{-0.17517562716732812`, 
   0.13805642193449977`, -0.9748096860460388}]], "Output",
 CellChangeTimes->{
  3.904065479678628*^9, 3.9040810511633797`*^9, {3.904246420844949*^9, 
   3.9042464222858143`*^9}},
 CellLabel->
  "Out[266]=",ExpressionUUID->"5132b7d4-d365-4136-a081-4d3fc98c32aa"]
}, Open  ]],

Cell["And how it would look in the 2D picture:", "Text",
 CellChangeTimes->{{3.904065497773108*^9, 
  3.904065508423901*^9}},ExpressionUUID->"2bf068da-4e73-4483-b006-\
382be355e226"],

Cell[BoxData[{
 RowBox[{"flagPgn", ":=", 
  RowBox[{"{", 
   RowBox[{"u0", ",", 
    RowBox[{"flagPgm", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"RegionCentroid", "[", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "u0", ",", 
        RowBox[{
         RowBox[{"RotationTransform", "[", 
          RowBox[{"2", "*", "1", "*", 
           RowBox[{"\[Pi]", "/", "5"}]}], "]"}], "[", "u0", "]"}]}], "}"}], 
      "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphflagPgn", ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{"u0", ",", 
        RowBox[{"flagPgm", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"RegionCentroid", "[", 
         RowBox[{"Polygon", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "u0", ",", 
            RowBox[{
             RowBox[{"RotationTransform", "[", 
              RowBox[{"2", "*", "1", "*", 
               RowBox[{"\[Pi]", "/", "5"}]}], "]"}], "[", "u0", "]"}]}], 
           "}"}], "]"}], "]"}], ",", "u0"}], "}"}], "]"}], ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Magenta"}], "]"}], ",", 
     RowBox[{"Polygon", "[", "flagPgn", "]"}], ",", 
     RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flagPgn", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Blue", ",", "Green"}], "}"}]}]}], "]"}], 
     ","}], "}"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.903911628483193*^9, 3.903911641030521*^9}, {
   3.903911676868038*^9, 3.903911702541827*^9}, {3.903911745598281*^9, 
   3.903911750194577*^9}, {3.9039118703223047`*^9, 3.9039119240725594`*^9}, 
   3.9039521347735577`*^9, {3.903993748664077*^9, 3.903993798437243*^9}, {
   3.904046321560166*^9, 3.904046441459857*^9}, {3.904046504106304*^9, 
   3.9040465340523653`*^9}, {3.904046643551486*^9, 3.904046644101672*^9}, {
   3.904057236008334*^9, 3.904057252086253*^9}, {3.9040573032450867`*^9, 
   3.9040573250609913`*^9}, {3.904057376155945*^9, 3.904057416377789*^9}, {
   3.9040575295550117`*^9, 3.9040575332947598`*^9}, {3.90405764804206*^9, 
   3.9040576873843527`*^9}, 3.904057809415551*^9, {3.904057986292632*^9, 
   3.904058038001691*^9}, {3.904058077599284*^9, 3.904058078424317*^9}, {
   3.9040581121512003`*^9, 3.9040581273835163`*^9}, {3.904061625846805*^9, 
   3.9040616279249763`*^9}, {3.904065128605225*^9, 3.904065130044701*^9}, {
   3.904065161896804*^9, 3.90406520275644*^9}, {3.904065415483951*^9, 
   3.904065421462558*^9}, 3.9040811039522343`*^9, {3.9040812043717937`*^9, 
   3.904081224202437*^9}, {3.90424647689045*^9, 3.904246584677463*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"0cdfb512-f0fe-44f3-8d40-bf9fbfa2a5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphPgn", ",", "gphPgm", ",", "gphflagPgn"}], "]"}]], "Input",
 CellChangeTimes->{{3.904046444012786*^9, 3.904046459213702*^9}, {
   3.904046491007641*^9, 3.9040465384355993`*^9}, {3.904057260475039*^9, 
   3.9040572610519667`*^9}, {3.904058427124084*^9, 3.9040584315691338`*^9}, {
   3.90406181030142*^9, 3.904061812934979*^9}, {3.9040811160916643`*^9, 
   3.90408117104212*^9}, 3.904081234259242*^9, {3.904246487510652*^9, 
   3.90424648938571*^9}, 3.904246659277931*^9},
 CellLabel->
  "In[313]:=",ExpressionUUID->"6e79b2b3-5415-4bff-b5a7-a8ff5968010b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], Opacity[0.7], 
    PolygonBox[
     NCache[{{(
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 + 
           5^Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 + 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 - 5^
           Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 - 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 - 5^
           Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 - 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 + 
           5^Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 + 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (-2 + 
           5^Rational[1, 2])) (-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
           Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
        Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
          Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
          Rational[1, 4] (1 - 5^Rational[1, 2]))}}, {{
      0.3632712640026805, -0.11803398874989496`}, {0.22451398828979277`, 
      0.30901699437494745`}, {-0.22451398828979266`, 
      0.30901699437494756`}, {-0.3632712640026805, -0.11803398874989479`}, \
{-8.326672684688674*^-17, -0.3819660112501052}}]]}, 
   {Thickness[
    Large], {LineBox[
      NCache[{{0, 
        1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{0, 
        1}, {-0.5877852522924731, -0.8090169943749475}}]], 
     LineBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}}, {{-0.5877852522924731, -0.8090169943749475}, {
       0.9510565162951535, 0.30901699437494745`}}]], 
     LineBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{0.9510565162951535, 
       0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}}]], 
     LineBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{-0.9510565162951535, 
       0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}]], 
     LineBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{
        0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}, 
    {RGBColor[
      NCache[
       Rational[7, 9], 0.7777777777777778], 
      NCache[
       Rational[7, 9], 0.7777777777777778], 
      NCache[
       Rational[1, 3], 0.3333333333333333]], Opacity[1], 
     PolygonBox[
      NCache[{{0, 
        1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{0, 
        1}, {-0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
        0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}, {
        0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}}, {
    LineBox[NCache[{{(
          Rational[1, 2] (-2 + 
           5^Rational[1, 2])) (-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
           Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
        Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
          Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
          Rational[1, 4] (1 - 5^Rational[1, 2]))}, {
       Rational[
         1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
           2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {
       Rational[
         1, 3] ((Rational[1, 2] (-2 + 
            5^Rational[1, 2])) (-(Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
         Rational[
           1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
             2 (5 + 5^Rational[1, 2]))^Rational[1, 2]) + (
           Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]) (
           Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
             Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
             Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
           Rational[1, 4] (-1 + 
            5^Rational[1, 2])) ((
             Rational[1, 2] (-2 + 
              5^Rational[1, 2])) (-(Rational[5, 8] + 
                Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
              Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
             Rational[1, 2]) + 
           Rational[
             1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
               2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))), 
        Rational[1, 3] (
         Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
           Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
           Rational[1, 4] (1 - 5^Rational[1, 2])) + (
           Rational[1, 4] (-1 + 5^Rational[1, 2])) (
           Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
             Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
             Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
           Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]) ((
             Rational[1, 2] (-2 + 
              5^Rational[1, 2])) (-(Rational[5, 8] + 
                Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
              Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
             Rational[1, 2]) + 
           Rational[
             1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
               2 (5 + 5^Rational[1, 2]))^Rational[1, 2])))}, {(
          Rational[1, 2] (-2 + 
           5^Rational[1, 2])) (-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
           Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
        Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
          Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
          Rational[1, 4] (1 - 5^
            Rational[
             1, 2]))}}, {{-8.326672684688674*^-17, -0.3819660112501052}, {
      0.1816356320013402, -0.25}, {
      0.12109042133422679`, -0.16666666666666674`}, {-8.326672684688674*^-17, \
-0.3819660112501052}}]], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     PolygonBox[
      NCache[{{(
           Rational[1, 2] (-2 + 
            5^Rational[1, 2])) (-(Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
         Rational[
           1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
             2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
         Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
           Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
           Rational[1, 4] (1 - 5^Rational[1, 2]))}, {
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {
        Rational[
          1, 3] ((Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]) + (
            Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2]) (
            Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
              Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
              Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
            Rational[1, 4] (-1 + 
             5^Rational[1, 2])) ((
              Rational[1, 2] (-2 + 
               5^Rational[1, 2])) (-(Rational[5, 8] + 
                 Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
               Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
              Rational[1, 2]) + 
            Rational[
              1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))), 
         Rational[1, 3] (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2])) + (
            Rational[1, 4] (-1 + 5^Rational[1, 2])) (
            Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
              Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
              Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
            Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2]) ((
              Rational[1, 2] (-2 + 
               5^Rational[1, 2])) (-(Rational[5, 8] + 
                 Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
               Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
              Rational[1, 2]) + 
            Rational[
              1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                2 (5 + 5^Rational[1, 2]))^
               Rational[
                1, 2])))}}, {{-8.326672684688674*^-17, -0.3819660112501052}, {
       0.1816356320013402, -0.25}, {
       0.12109042133422679`, -0.16666666666666674`}}]], 
     {PointSize[0.02], 
      PointBox[NCache[{{(
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))}, {
         Rational[
           1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
             2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {
         Rational[
           1, 3] ((Rational[1, 2] (-2 + 
              5^Rational[1, 2])) (-(Rational[5, 8] + 
                Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
              Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
             Rational[1, 2]) + 
           Rational[
             1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
               2 (5 + 5^Rational[1, 2]))^Rational[1, 2]) + (
             Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
              Rational[1, 2]) (
             Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
               Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
               Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
             Rational[1, 4] (-1 + 
              5^Rational[1, 2])) ((
               Rational[1, 2] (-2 + 
                5^Rational[1, 2])) (-(Rational[5, 8] + 
                  Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
                Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
               Rational[1, 2]) + 
             Rational[
               1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                 2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))), 
          Rational[1, 3] (
           Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
             Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
             Rational[1, 4] (1 - 5^Rational[1, 2])) + (
             Rational[1, 4] (-1 + 5^Rational[1, 2])) (
             Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
               Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
               Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
             Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
              Rational[1, 2]) ((
               Rational[1, 2] (-2 + 
                5^Rational[1, 2])) (-(Rational[5, 8] + 
                  Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
                Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
               Rational[1, 2]) + 
             Rational[
               1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                 2 (5 + 5^Rational[1, 2]))^
                Rational[
                 1, 2])))}}, {{-8.326672684688674*^-17, -0.3819660112501052}, \
{0.1816356320013402, -0.25}, {0.12109042133422679`, -0.16666666666666674`}}],
       VertexColors->{
         RGBColor[1, 0, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[0, 1, 0]}]}}}}]], "Output",
 CellChangeTimes->{
  3.9040464598556967`*^9, {3.90404649619998*^9, 3.904046538744692*^9}, 
   3.904046645638332*^9, 3.9040572616064053`*^9, 3.904057300478889*^9, 
   3.904058082439211*^9, 3.904058129600072*^9, 3.904058431973673*^9, 
   3.904061630485313*^9, 3.9040618135379143`*^9, {3.904065181058607*^9, 
   3.9040652067590847`*^9}, {3.904081145470995*^9, 3.90408117182165*^9}, {
   3.9040812279286003`*^9, 3.904081234640258*^9}, {3.904246478500937*^9, 
   3.904246489784457*^9}, {3.904246558053206*^9, 3.9042465885152407`*^9}, 
   3.904246752444557*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"e45f656d-5d6a-4c13-b0e1-79f38a1cd5ad"]
}, Open  ]],

Cell["And a flag for the pentagram down there", "Text",
 CellChangeTimes->{{3.904065528070675*^9, 
  3.904065534011323*^9}},ExpressionUUID->"8a240d73-daf7-4755-940b-\
93d15f8181fb"],

Cell[BoxData[{
 RowBox[{"flagPgm2", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"VPgm", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"Midpoint", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"VPgm", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"VPgm", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphflagPgm2", ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"flagPgm2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"flagPgm2", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"flagPgm2", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"flagPgm2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flagPgm2", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Blue", ",", "Green"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Cyan"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", "flagPgm2", "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.904065668806761*^9, 3.904065712888649*^9}, {
  3.90424678992747*^9, 3.904246836922495*^9}, {3.904246894872169*^9, 
  3.9042468978866453`*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"1a6c5fd0-5f38-4532-82cd-88c32c6080ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphPgm", ",", "gphPgn", ",", "gphflagPgm2", ",", "gphflagPgn"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904065537684086*^9, 3.904065544824944*^9}, 
   3.904065670870363*^9, {3.904065728009288*^9, 3.904065776083547*^9}, 
   3.904065809335672*^9, {3.904246647465659*^9, 3.9042466550369797`*^9}, {
   3.904246869391386*^9, 3.904246870344636*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"0b430804-4e9f-4562-bdc7-bc047a6d260d"],

Cell[BoxData[
 GraphicsBox[{
   {Thickness[
    Large], {LineBox[
      NCache[{{0, 
        1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{0, 
        1}, {-0.5877852522924731, -0.8090169943749475}}]], 
     LineBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}}, {{-0.5877852522924731, -0.8090169943749475}, {
       0.9510565162951535, 0.30901699437494745`}}]], 
     LineBox[NCache[{{(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}}, {{0.9510565162951535, 
       0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}}]], 
     LineBox[NCache[{{-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{-0.9510565162951535, 
       0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}]], 
     LineBox[NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{
        0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}, 
    {RGBColor[
      NCache[
       Rational[7, 9], 0.7777777777777778], 
      NCache[
       Rational[7, 9], 0.7777777777777778], 
      NCache[
       Rational[1, 3], 0.3333333333333333]], Opacity[1], 
     PolygonBox[
      NCache[{{0, 
        1}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 
          5^Rational[1, 2])}, {-(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 + 5^Rational[1, 2])}, {(Rational[5, 8] + 
          Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
         Rational[1, 4] (-1 - 5^Rational[1, 2])}, {0, 1}}, {{0, 
        1}, {-0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
        0.30901699437494745`}, {-0.9510565162951535, 0.30901699437494745`}, {
        0.5877852522924731, -0.8090169943749475}, {0, 1}}]]}}, 
   {RGBColor[0, 0, 1], Opacity[0.7], 
    PolygonBox[
     NCache[{{(
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 + 
           5^Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 + 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 - 5^
           Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 - 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 - 5^
           Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 - 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[-1, 2] (Rational[1, 2] (5 - 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[1, 4] (-1 + 
           5^Rational[1, 2])) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2])), (
          Rational[1, 4] (-1 + 5^Rational[1, 2])) (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
          Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
           Rational[1, 2]) ((
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))}, {(
          Rational[1, 2] (-2 + 
           5^Rational[1, 2])) (-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
           Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
        Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
          Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
          Rational[1, 4] (1 - 5^Rational[1, 2]))}}, {{
      0.3632712640026805, -0.11803398874989496`}, {0.22451398828979277`, 
      0.30901699437494745`}, {-0.22451398828979266`, 
      0.30901699437494756`}, {-0.3632712640026805, -0.11803398874989479`}, \
{-8.326672684688674*^-17, -0.3819660112501052}}]]}, {
    LineBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
       Rational[
         1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
           2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {0, 
       0}, {-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
         Rational[1, 2], 
        Rational[1, 4] (-1 - 5^
         Rational[1, 2])}}, {{-0.5877852522924731, -0.8090169943749475}, {
       0.1816356320013402, -0.25}, {0, 
       0}, {-0.5877852522924731, -0.8090169943749475}}]], 
    {PointSize[0.02], 
     PointBox[NCache[{{-(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {0, 
        0}}, {{-0.5877852522924731, -0.8090169943749475}, {
        0.1816356320013402, -0.25}, {0, 0}}],
      VertexColors->{
        RGBColor[1, 0, 0], 
        RGBColor[0, 0, 1], 
        RGBColor[0, 1, 0]}], 
     {RGBColor[0, 1, 1], Opacity[0.7], 
      TagBox[
       DynamicModuleBox[{Typeset`mesh = HoldComplete[
         BoundaryMeshRegion[{{-0.5877852522924731, -0.8090169943749475}, {
          0.1816356320013402, -0.25}, {0., 0.}}, {
           Line[{{1, 2}, {2, 3}, {3, 1}}]}, 
          Method -> {
           "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
            Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
            Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
            Automatic, "CheckIntersections" -> Automatic, 
            "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
            "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
            Automatic, "Hash" -> 1646912592941477925}, {PlotTheme -> None}]]}, 
        TagBox[
         GraphicsComplexBox[{{-0.5877852522924731, -0.8090169943749475}, {
          0.1816356320013402, -0.25}, {0., 0.}}, {{}, 
           TagBox[PolygonBox[{{1, 2, 3}}],
            Annotation[#, "Geometry"]& ]}],
         MouseAppearanceTag["LinkHand"]],
        AllowKernelInitialization->False],
       "BoundaryMeshRegion"]}}}, {
    LineBox[NCache[{{(
          Rational[1, 2] (-2 + 
           5^Rational[1, 2])) (-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
           Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
        Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
          Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
          Rational[1, 4] (1 - 5^Rational[1, 2]))}, {
       Rational[
         1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
           2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {
       Rational[
         1, 3] ((Rational[1, 2] (-2 + 
            5^Rational[1, 2])) (-(Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
         Rational[
           1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
             2 (5 + 5^Rational[1, 2]))^Rational[1, 2]) + (
           Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]) (
           Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
             Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
             Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
           Rational[1, 4] (-1 + 
            5^Rational[1, 2])) ((
             Rational[1, 2] (-2 + 
              5^Rational[1, 2])) (-(Rational[5, 8] + 
                Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
              Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
             Rational[1, 2]) + 
           Rational[
             1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
               2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))), 
        Rational[1, 3] (
         Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
           Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
           Rational[1, 4] (1 - 5^Rational[1, 2])) + (
           Rational[1, 4] (-1 + 5^Rational[1, 2])) (
           Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
             Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
             Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
           Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
            Rational[1, 2]) ((
             Rational[1, 2] (-2 + 
              5^Rational[1, 2])) (-(Rational[5, 8] + 
                Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
              Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
             Rational[1, 2]) + 
           Rational[
             1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
               2 (5 + 5^Rational[1, 2]))^Rational[1, 2])))}, {(
          Rational[1, 2] (-2 + 
           5^Rational[1, 2])) (-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
           Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
        Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
          Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
          Rational[1, 4] (1 - 5^
            Rational[
             1, 2]))}}, {{-8.326672684688674*^-17, -0.3819660112501052}, {
      0.1816356320013402, -0.25}, {
      0.12109042133422679`, -0.16666666666666674`}, {-8.326672684688674*^-17, \
-0.3819660112501052}}]], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     PolygonBox[
      NCache[{{(
           Rational[1, 2] (-2 + 
            5^Rational[1, 2])) (-(Rational[5, 8] + 
              Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
            Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]) + 
         Rational[
           1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
             2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
         Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
           Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
           Rational[1, 4] (1 - 5^Rational[1, 2]))}, {
        Rational[
          1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
            2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {
        Rational[
          1, 3] ((Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]) + (
            Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2]) (
            Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
              Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
              Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
            Rational[1, 4] (-1 + 
             5^Rational[1, 2])) ((
              Rational[1, 2] (-2 + 
               5^Rational[1, 2])) (-(Rational[5, 8] + 
                 Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
               Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
              Rational[1, 2]) + 
            Rational[
              1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))), 
         Rational[1, 3] (
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2])) + (
            Rational[1, 4] (-1 + 5^Rational[1, 2])) (
            Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
              Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
              Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
            Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
             Rational[1, 2]) ((
              Rational[1, 2] (-2 + 
               5^Rational[1, 2])) (-(Rational[5, 8] + 
                 Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
               Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
              Rational[1, 2]) + 
            Rational[
              1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                2 (5 + 5^Rational[1, 2]))^
               Rational[
                1, 2])))}}, {{-8.326672684688674*^-17, -0.3819660112501052}, {
       0.1816356320013402, -0.25}, {
       0.12109042133422679`, -0.16666666666666674`}}]], 
     {PointSize[0.02], 
      PointBox[NCache[{{(
            Rational[1, 2] (-2 + 
             5^Rational[1, 2])) (-(Rational[5, 8] + 
               Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2]) + 
          Rational[
            1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
              2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), 
          Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
            Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
            Rational[1, 4] (1 - 5^Rational[1, 2]))}, {
         Rational[
           1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
             2 (5 + 5^Rational[1, 2]))^Rational[1, 2]), Rational[-1, 4]}, {
         Rational[
           1, 3] ((Rational[1, 2] (-2 + 
              5^Rational[1, 2])) (-(Rational[5, 8] + 
                Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
              Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
             Rational[1, 2]) + 
           Rational[
             1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
               2 (5 + 5^Rational[1, 2]))^Rational[1, 2]) + (
             Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
              Rational[1, 2]) (
             Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
               Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
               Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
             Rational[1, 4] (-1 + 
              5^Rational[1, 2])) ((
               Rational[1, 2] (-2 + 
                5^Rational[1, 2])) (-(Rational[5, 8] + 
                  Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
                Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
               Rational[1, 2]) + 
             Rational[
               1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                 2 (5 + 5^Rational[1, 2]))^Rational[1, 2]))), 
          Rational[1, 3] (
           Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
             Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
             Rational[1, 4] (1 - 5^Rational[1, 2])) + (
             Rational[1, 4] (-1 + 5^Rational[1, 2])) (
             Rational[-1, 4] + (Rational[1, 2] (-2 + 5^Rational[1, 2])) (
               Rational[1, 4] (-1 - 5^Rational[1, 2]) + 
               Rational[1, 4] (1 - 5^Rational[1, 2]))) + (
             Rational[1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
              Rational[1, 2]) ((
               Rational[1, 2] (-2 + 
                5^Rational[1, 2])) (-(Rational[5, 8] + 
                  Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2] - (
                Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
               Rational[1, 2]) + 
             Rational[
               1, 8] (-(10 - 2 5^Rational[1, 2])^Rational[1, 2] + (
                 2 (5 + 5^Rational[1, 2]))^
                Rational[
                 1, 2])))}}, {{-8.326672684688674*^-17, -0.3819660112501052}, \
{0.1816356320013402, -0.25}, {0.12109042133422679`, -0.16666666666666674`}}],
       VertexColors->{
         RGBColor[1, 0, 0], 
         RGBColor[0, 0, 1], 
         RGBColor[0, 1, 0]}]}}}}]], "Output",
 CellChangeTimes->{{3.904065535838808*^9, 3.904065545469948*^9}, 
   3.904065683882453*^9, {3.904065715311064*^9, 3.904065776509017*^9}, 
   3.904065809871695*^9, 3.9042466444535837`*^9, 3.9042467666745768`*^9, {
   3.904246816231267*^9, 3.904246839365666*^9}, {3.90424688096881*^9, 
   3.904246901303545*^9}},
 CellLabel->
  "Out[329]=",ExpressionUUID->"0a4d5dbc-a556-42c7-a2a7-412b720c5e56"]
}, Open  ]],

Cell["And up there", "Text",
 CellChangeTimes->{{3.904065550421629*^9, 
  3.904065553088912*^9}},ExpressionUUID->"fc893946-651c-4670-bf54-\
0a6889bd368e"],

Cell[BoxData[{
 RowBox[{"flagPgmIco", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"V2", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", 
    RowBox[{"flagPgnIco", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"V2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphflagPgmIco", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flagPgmIco", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Blue", ",", "Green", ",", "Yellow"}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Cyan"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", "flagPgmIco", "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.904062045101346*^9, 3.904062077370783*^9}, {
  3.904062115667878*^9, 3.904062155677392*^9}, {3.904062196391654*^9, 
  3.904062196600033*^9}, {3.904062229851241*^9, 3.904062329264008*^9}, {
  3.9040624635480757`*^9, 3.904062465856204*^9}, {3.9040630600897818`*^9, 
  3.904063063387638*^9}, {3.904065890261434*^9, 3.904065908040071*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"01e91fc9-f3ac-4763-90aa-948bc90d2091"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphico2", ",", "gphPgmico", ",", "gphvertfig", ",", "gphedgPgm", ",", 
   "gphflagPgnIco", ",", "gphflagPgmIco"}], "]"}]], "Input",
 CellChangeTimes->{{3.904138544068811*^9, 3.904138544200658*^9}, {
  3.904246985696472*^9, 3.9042469890686893`*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"a732af91-ed58-4849-976d-00d6682edc37"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0], 
    InterpretationBox[
     PolyhedronBox[
      NCache[{{0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {
        0, 0, 5 (50 - 10 5^Rational[1, 2])^
          Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
         0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
          Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
          5^Rational[1, 2]), Rational[
         1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
          Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
          Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {(
          Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
          5^Rational[1, 2]), 
         Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
          Rational[1, 2], (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
        0, 0, -0.9510565162951536}, {
        0, 0, 0.9510565162951536}, {-0.85065080835204, 
         0, -0.42532540417601994`}, {
        0.85065080835204, 0, 0.42532540417601994`}, {
        0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868,
         0.5, -0.42532540417601994`}, {-0.6881909602355868, -0.5, 
        0.42532540417601994`}, {-0.6881909602355868, 0.5, 
        0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.2628655560595668, 
        0.8090169943749475, -0.42532540417601994`}, {
        0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
        0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}}], {{2, 
      12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5,
       1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
      11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
      10}, {9, 7, 3}}],
     Icosahedron[]]}, 
   {RGBColor[1, 1, 0], Opacity[0.7], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
      0.2628655560595668, 0.8090169943749475, 0.42532540417601994`}, {
      0.6881909602355868, 0.5, -0.42532540417601994`}, {-0.2628655560595668, 
      0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0.85065080835204, 0, 0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 
         5^Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}}, {{-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 0, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 
         5^Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}}, {{-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
      0.2628655560595668, -0.8090169943749475, 0.42532540417601994`}, {
      0.6881909602355868, -0.5, -0.42532540417601994`}, {-0.2628655560595668, \
-0.8090169943749475, -0.42532540417601994`}}]]}, 
   {RGBColor[0, 0, 1], Opacity[0.7], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}}]], 
    Polygon3DBox[
     NCache[{{0, 
        0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0, 0, -0.9510565162951536}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}}]]}, 
   {Thickness[Large], 
    Line3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(2/(5 - 5^
         Rational[1, 2]))^Rational[1, 2], 0, (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[-1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 - 5^
         Rational[1, 2]), Rational[-1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {-(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 - 5^
         Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (-1 + 
         5^Rational[1, 2]), 
        Rational[1, 2] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
         Rational[1, 2], (10 - 2 5^Rational[1, 2])^
        Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), Rational[
        1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {(
         Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}}, {{
       0.6881909602355868, -0.5, -0.42532540417601994`}, {
       0.2628655560595668, -0.8090169943749475, 
       0.42532540417601994`}, {-0.2628655560595668, -0.8090169943749475, \
-0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.6881909602355868, 0.5, 
       0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}, \
{-0.2628655560595668, -0.8090169943749475, -0.42532540417601994`}, \
{-0.6881909602355868, -0.5, 
       0.42532540417601994`}, {-0.85065080835204, 
        0, -0.42532540417601994`}, {-0.2628655560595668, 
       0.8090169943749475, -0.42532540417601994`}, {0.2628655560595668, 
       0.8090169943749475, 0.42532540417601994`}, {0.6881909602355868, 
       0.5, -0.42532540417601994`}, {
       0.6881909602355868, -0.5, -0.42532540417601994`}}]]}, 
   {PointSize[0.04], 
    Point3DBox[
     NCache[{{(Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2]) (1 + 
         5^Rational[1, 2]), 
        Rational[-1, 2], -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2], 
        Rational[1, 8] (-2 - (2 (3 + 5^Rational[1, 2]))^
         Rational[1, 2]), -(10 - 2 5^Rational[1, 2])^
         Rational[-1, 2]}, {((
           Rational[
            1, 3] ((Rational[1, 2]/(120 - 40 5^Rational[1, 2])) (5 - 5^
              Rational[1, 2]))^Rational[1, 2]) (1 + 5^Rational[1, 2])) (
          Rational[
           1, 4] + (3 (5/(120 - 40 5^Rational[1, 2]))^Rational[1, 2]) (-1 + 
            5^Rational[1, 2]) + ((
             Rational[1, 2] (1 - 5^
              Rational[
               1, 2])) (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
            5^Rational[1, 2]) + (
            Rational[
             1, 2] (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
             5^Rational[1, 2])^2 + 
          Rational[1, 4] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
            Rational[1, 2] + (
            Rational[-5, 
              2] ((50 - 10 5^Rational[1, 2]) (5 - 5^Rational[1, 2]))^
             Rational[-1, 2]) (-2^Rational[1, 2] + 
            10^Rational[1, 2]) - ((10 - 2 5^Rational[1, 2]) (5 - 5^
             Rational[1, 2]))^Rational[-1, 2] (-2^Rational[1, 2] + 
           10^Rational[1, 2])) + ((((Rational[1, 12]/(-3 + 
             5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
             24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))) (-20 + 
            10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
              5^Rational[1, 2]))^
            Rational[
             1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2])) ((2 (5 - 5^Rational[1, 2])) (25280 - 10560 
             5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2]))^
           Rational[-1, 
             2]) (((((Rational[-3, 160]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^
              Rational[1, 2]) ((-5 + 5^Rational[1, 2])/(-128640 + 
              56960 5^Rational[1, 2] + 
              16000 (5 - 5^Rational[1, 2]) - (7296 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) - 
              4608 (5 - 5^Rational[1, 2])^2 + (2048 
                5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 - 
              67200 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              30080 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] + 
              30080 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              13440 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 16]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((50 - 10 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 40]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((10 - 2 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^Rational[1, 2])^(-1) ((5 + 
               5^Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])^
            Rational[-1, 2] + ((((Rational[1, 8] (1 - 5^Rational[1, 2]))/(-3 + 
              5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^
            Rational[-1, 
              2] + ((((Rational[1, 8]/(-3 + 5^Rational[1, 2])) (1 + 
               5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^Rational[-1, 2]), 
        Rational[1, 6] (
          Rational[-1, 4] - (
           3 (5/(120 - 40 5^Rational[1, 2]))^Rational[1, 2]) (-1 + 
           5^Rational[1, 2]) + ((
             Rational[-1, 2] (1 - 5^
              Rational[
               1, 2])) (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
            5^Rational[1, 2]) + (
            Rational[-1, 
              2] (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
             5^Rational[1, 2])^2 + 
          Rational[-1, 
             4] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
            Rational[1, 2] + (
            Rational[
             5, 2] ((50 - 10 5^Rational[1, 2]) (5 - 5^Rational[1, 2]))^
             Rational[-1, 2]) (-2^Rational[1, 2] + 
            10^Rational[1, 2]) + ((10 - 2 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))^Rational[-1, 2] (-2^Rational[1, 2] + 
            10^Rational[1, 2])) + ((((Rational[1, 24]/(-3 + 
             5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
             24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
            9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
            3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
            2880 (5 - 5^
             Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^Rational[1, 2]) + 
            896 (5 - 5^Rational[1, 2])^2 - (384 
             5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
            12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
            5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] - 
            5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] + 
            2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])^
           Rational[-1, 
             2]) (((((Rational[-3, 160]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^
              Rational[1, 2]) ((-5 + 5^Rational[1, 2])/(-128640 + 
              56960 5^Rational[1, 2] + 
              16000 (5 - 5^Rational[1, 2]) - (7296 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) - 
              4608 (5 - 5^Rational[1, 2])^2 + (2048 
                5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 - 
              67200 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              30080 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] + 
              30080 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              13440 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 16]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((50 - 10 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 40]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((10 - 2 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^Rational[1, 2])^(-1) ((5 + 
               5^Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])^
            Rational[-1, 2] + ((((Rational[1, 8] (1 - 5^Rational[1, 2]))/(-3 + 
              5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^
            Rational[-1, 
              2] + ((((Rational[1, 8]/(-3 + 5^Rational[1, 2])) (1 + 
               5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^Rational[-1, 2]), -(Rational[5, 2]/(5 - 5^
           Rational[1, 2]))^
          Rational[1, 2] + ((
           Rational[1, 6] (5 - 5^Rational[1, 2])^
            Rational[-1, 2]) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
          Rational[
           1, 4] + (3 (5/(120 - 40 5^Rational[1, 2]))^Rational[1, 2]) (-1 + 
            5^Rational[1, 2]) + ((
             Rational[1, 2] (1 - 5^
              Rational[
               1, 2])) (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
            5^Rational[1, 2]) + (
            Rational[
             1, 2] (((Rational[1, 2]/(120 - 40 5^Rational[1, 2]))/(10 - 2 
               5^Rational[1, 2])) (5 - 5^Rational[1, 2]))^Rational[1, 2]) (1 + 
             5^Rational[1, 2])^2 + 
          Rational[1, 4] ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
            Rational[1, 2] + (
            Rational[-5, 
              2] ((50 - 10 5^Rational[1, 2]) (5 - 5^Rational[1, 2]))^
             Rational[-1, 2]) (-2^Rational[1, 2] + 
            10^Rational[1, 2]) - ((10 - 2 5^Rational[1, 2]) (5 - 5^
             Rational[1, 2]))^Rational[-1, 2] (-2^Rational[1, 2] + 
           10^Rational[
             1, 2])) + (((((Rational[-1, 240]/(-3 + 
              5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (80 - 
             16 5^Rational[1, 2] + 
             24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
              Rational[1, 2]))) (10 - 
            5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2])) ((5 - 5^Rational[1, 2])/(25280 - 10560 
            5^Rational[1, 2] - 
            2880 (5 - 5^
             Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^Rational[1, 2]) + 
            896 (5 - 5^Rational[1, 2])^2 - (384 
             5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
            12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
            5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] - 
            5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
             Rational[1, 2] + 
            2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2]))^
           Rational[
            1, 2]) (((((Rational[-3, 160]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^
              Rational[1, 2]) ((-5 + 5^Rational[1, 2])/(-128640 + 
              56960 5^Rational[1, 2] + 
              16000 (5 - 5^Rational[1, 2]) - (7296 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) - 
              4608 (5 - 5^Rational[1, 2])^2 + (2048 
                5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 - 
              67200 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              30080 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] + 
              30080 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              13440 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 16]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((50 - 10 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + ((((Rational[1, 40]/(-3 + 
               5^Rational[1, 2])) (-2^Rational[1, 2] + 10^Rational[1, 2])) (
              80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (10 - 
             5 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
              Rational[
               1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((10 - 2 5^Rational[1, 2])^(-1) ((5 - 5^
               Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) ((5 - 5^Rational[1, 2])^(-1) ((5 + 
               5^Rational[1, 2])/(25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2])))^
            Rational[
             1, 2] + (((Rational[-1, 16]/(-3 + 5^Rational[1, 2])) (80 - 16 
              5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-7 + 3 5^Rational[1, 2] + 
             9 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             3 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
             2880 (5 - 5^
              Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]) + 
             896 (5 - 5^Rational[1, 2])^2 - (384 
              5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
             12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
             5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] - 
             5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
              Rational[1, 2] + 
             2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2])^
            Rational[-1, 2] + ((((Rational[1, 8] (1 - 5^Rational[1, 2]))/(-3 + 
              5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^
            Rational[-1, 
              2] + ((((Rational[1, 8]/(-3 + 5^Rational[1, 2])) (1 + 
               5^Rational[1, 2])) (80 - 16 5^Rational[1, 2] + 
              24 (5 - 5^Rational[1, 2]) - (8 5^Rational[1, 2]) (5 - 5^
               Rational[1, 2]))) (-20 + 
             10 5^Rational[1, 2] - ((5 - 5^Rational[1, 2])^(-1) (5 + 
               5^Rational[1, 2]))^
             Rational[
              1, 2] + ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
              Rational[1, 2])) (((2 (10 - 2 5^Rational[1, 2])) (5 - 5^
               Rational[1, 2])) (25280 - 10560 5^Rational[1, 2] - 
              2880 (5 - 5^
               Rational[1, 2]) + (1472 5^Rational[1, 2]) (5 - 5^
                Rational[1, 2]) + 
              896 (5 - 5^Rational[1, 2])^2 - (384 
               5^Rational[1, 2]) (5 - 5^Rational[1, 2])^2 + 
              12800 ((5 - 5^Rational[1, 2])^(-1) (5 + 5^Rational[1, 2]))^
                Rational[1, 2] - 
              5760 ((5/(5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] - 
              5760 ((5 - 5^Rational[1, 2]) (5 + 5^Rational[1, 2]))^
               Rational[1, 2] + 
              2560 ((5 (5 - 5^Rational[1, 2])) (5 + 5^Rational[1, 2]))^
                Rational[1, 2]))^Rational[-1, 2])}, {0, 0, 0}}, {{
       0.6881909602355868, -0.5, -0.42532540417601994`}, {
       0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
       0.14177513472533873`, -0.4363389981249837, -0.6005691082157305}, {0, 0,
        0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{
         0.6881909602355868, -0.5, -0.42532540417601994`}, {
         0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
         0.14177513472533873`, -0.4363389981249837, -0.6005691082157305}, {0.,
          0., 0.}}, {
          Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 4244837990213017946}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{
         0.6881909602355868, -0.5, -0.42532540417601994`}, {
         0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
         0.14177513472533873`, -0.4363389981249837, -0.6005691082157305}, {0.,
          0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {PointSize[0.04], 
    Point3DBox[
     NCache[{{(2/(5 - 5^Rational[1, 2]))^Rational[1, 2], 
        0, (10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       Rational[1, 2] (10 - 2 5^Rational[1, 2])^Rational[-1, 2], 
        Rational[1, 8] (-2 - (2 (3 + 5^Rational[1, 2]))^
         Rational[1, 2]), -(10 - 2 5^Rational[1, 2])^Rational[-1, 2]}, {
       0, 0, (-5) (50 - 10 5^Rational[1, 2])^Rational[-1, 2]}, {0, 0, 0}}, {{
       0.85065080835204, 0, 0.42532540417601994`}, {
       0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
       0, 0, -0.9510565162951536}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{0.85065080835204, 0., 0.42532540417601994`}, {
         0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
         0., 0., -0.9510565162951536}, {0., 0., 0.}}, {
          Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 8472807015595849916}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{0.85065080835204, 0., 0.42532540417601994`}, {
         0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
         0., 0., -0.9510565162951536}, {0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{357.3081862744458, 362.51881294789945`},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.282215918566259, -1.951050841431416, -1.5604137640999385`},
  ViewVertical->{0.2611759858851714, 
   0.03165942868886611, -0.9647718823493995}]], "Output",
 CellChangeTimes->{{3.904062141950284*^9, 3.904062157561459*^9}, 
   3.904062198275455*^9, {3.90406223165521*^9, 3.904062331548177*^9}, 
   3.904062467693873*^9, {3.9040630567986403`*^9, 3.904063064890153*^9}, 
   3.90406591025137*^9, 3.904080268159382*^9, 3.9040813057283897`*^9, 
   3.904138547524817*^9, {3.904246973733919*^9, 3.90424699105721*^9}},
 CellLabel->"Out[332]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
D8+Xfq7noUzX+eqzzfHctOhLQ/Vrzf9SrH695ecNZ7/e/GLD2VOFu0vxPN29
VY5HHJ4gJoYmh7xrhV4Eb4nnYDENJP6uEiR2+vS0iG5FT8uh1LS4rpQ0q3Ov
dzrCe2rHiy7GWxJo5yEnzaeSmI9lQ/mz3819Vc2FuKDpKNF1zp6O+DHUhBTE
hOTFhLRXn2sWf/vu8lfE1IhLVDzrmx95ZE0xLiR7dPm15ikHjMw/T1tAIaZ5
WljfxDTWs9Y+lnpBANmQSNpkJaPuU7NhZ6dNbFXx5MQTUkgm5OvNxqcKakLi
yUgmJf6fmpCcmJCCmJBOMSHt4qc46d5T/qo7K/GfxH6mMWzmjI2O5i9oJ9Oz
I+s7mp4jej62ivkog6I9fk7zgRLFsTHUuh9Ntk+tF4/tVxAs6rHSjdnNpTpR
u3iwM5MHM5PXMxPR1Ij5SOYkvu4WczQufipzk0LH7RUE8oaY9eZ4+uPaomZB
tayywqfIpxyrAByrzoloeh19PnrhDJWSJm1XyXyc2dmyobpC8o8KNnu7eueB
TRn2lBA9AvaM+KnR8qX4eja+VMSF3KKSr9Y2rQc12m3AZAit24nOZbFszm7l
ncX+QXAUhDpwJ+o/dub3WqaIVzPwmXyy+b9z4gv/O5r52ZkoIfpE7qsuUdv4
c4BoIXGbZ5r/RWAlIVM57hNsZzmzSVCLD5YRn6lAH2tVFNe7NNbtAmsJeMWY
hZU4t72OhfwFQITJ6xAxlKlXo4m3xYAEpC8IoA5MZQnSOkqvPdp/u4CpLvHf
fkH8wg+1gZXp2eeaYxWfFb9IyIpLv+B6UV0mTnTdz6pZ4WJOGUPq87wx9fb6
Ut8pkckZ617bHjcrQLqKeJST17FM36blXNZ2oF41/L2WDUrIUZ6uc4K9EnVM
RrMv2PasbFkWywLxzhFvoeZn4+ZlUMC+RneX8R1P5e6rXhY9KC7x/+T1smh7
NvFhz2JrB3AQ+dkWaegd9TTs1ul8lUkoyra2oxKgnBwmNVcDuCwBa8cQHkyA
82nALf+qa16ZY3ttIuRnC/+z+kz0H+ISNdJ1rvqO6BVlxfFt8TVrGq3ZbJG+
HVcZhajPsRnfE6jvJkM+do9j4iIO/ouvyWGUk9D9ElVrR2mS66WzX2/617PP
tbxEQm6SnGO/+Dng3OSApWmWDVr+mSj6/+IQoujzP4qim8QlBhtfI+INdF14
cfcB0XDoC8GeBbsG8nNJ0nQ76+modwYKuUfiFIjjC5lx1JxCJzZVFLrni5T/
BI0k2pDYQQ0/8gApzLzFb04ItFV2BzGv1wRHYtnNEY0jS3YuLbsQvKREBT9i
uAJYQtIczdqyHUmD7arHIXbwOhVgtU57E53GoEXiE9JWYASNCmyBoBLYkrjO
cWCvBgZQqNFplRqmCiK9SFyX60E7AhwBbSRitOfY7G4DEk76b7vHiPolaSf7
E9JC0jr7ywnpb+Z+HtOOFxGNwoZj0gWO9FUJ6efK/6ZJ5+m6aJNOLsJ25xLe
sYpf1bzXi+tGyxyERAVlIl0U1+3ABSiimh6iu54Xt7YEinUQuEAbcIEEYfX5
3L8QRoGQmoBiFkJbrA2MWKtJk6huawYs9wOXaKDreGDRlfFfnFQXBLsgrgvA
FIblt6OR/pUGhhYena+jf94UqOshMynaQTq4ViKeVjUpycTkxbyUwLwMiXm5
kuYlX/1a7n+peRHzkdfTMJcoWk9DjPeMnobDdF2IwX83/u3T6vJyS+HZqPTC
YMu3YzZdjY/H/z8lLrHIxXXulWJumea6DhiIOw2VrGl4PfaygV3GuLkxAuyl
A9hLQa6tnWlIrCaihUlTMhfJuo+2+gbNXOTUHBBumghycIT/iLgWd3l6SMAu
A7oU1Gh9OLszCqHjLev4tbQj41HJL+k6ZEfcCZozuSMkkFE1/LlAJjs0jtsV
lj0vi84YbtpH5uh/TeL6mEa2VCBrFMj6zpXROWb+mkDJjQM77gKrtHzKjgW7
Bkmw+o1CTKrx52EE31P+93gR/Kpml3bistGgcuPoqAa6lUt4tGioM8N76ml6
VwVKcgFI6e6UswpJNnB8G8RNYg0sARPexoz0diBTZiOqxzXVPZKq4OgSGquP
YG893e2KQIVOgKTuoeuCndSCn0QlqOXroXaVQ+2BqtpZTAM74QJDkhs5B2Dn
uIpd7t9g1PwWgQzvxRme+3kh4fb1kp/bkF1M4qfU5eJKzWg3J6rx+hj11ZOW
035R6bXopFkyqdSk5v5nUT4BsvnsEw1fEUhKCRLhcplIrvAi2WXcKx2yo6Ls
OuEcSd33Ol5vmQpU0ZTxMZ2F/enS2vCV2L7roHUqSbxThbtFX020rtK0dgJa
NID5Dp65GjxDr6NVWxwooKUgqwYkj2o0/NEzUdM6IaI49lojKludssPjMsDj
Stz+xg3YV6KEkNOMIT3ZNk7t/7w6X8yYCNwxWwZ2IgZUWk1+vxot+V41IRMC
Ri8hLuXSilkXzDpg5hvpLMAkzq3HWhC48bUS9AAyd4qvRUt/VI0m/7waTcV0
em4muo83fLkMfLjMLbBOmtcbFCGZRgydHYZOfFkgCMHdq/E0rOH6Dg1yEms8
UEIzILEkrNKZaPqvqtHiP5Owpr5/Nhr7JD3WFefdDY2HJXaCMx6G2HZjRYJY
fNsbFbE5m9j8NLGRejqikUA9rQZZ1qe8eOan1Wjlj6vRoj8VVjD1/YYzDUt/
EIcaNVPaESVU0hCreYLV8ST3lue2iK2QTFbbiFVe2Xb8/X1CYUhgGNc59kPD
gRtQa0E2yn6ocCZa+RNFTwps6i/jv5YAz+vV2anFZpsX2v8ggMeAefkAbq0B
eEssuhuR3mrsbLSeZmkwcHdonenA3Q6yQcASkU3/QJjYmfOmfxAbPeE6c954
bW4G4bJePRU7xgTq6mxcws0EKp/ebFyJNJzDdevK1v5AvW0AhpasX16LZv5O
6k1cpn9wNpr8i9jm+IS1ywEL8AgwNx/ALQZg/P/z4/89xeltYS1Ap1cfeR2d
V2+gGjdxK+qcUuOyH4kEJoxpmCJ5kfuxMA8D97tat6hUEp4X/IjhRrouqMIq
SCo5wgKbhXO0zjatO1CSW8CSukvtMxpJRjq/JU2bqM5vjqiqJwlN0+QeAnZo
iG6WCFWlFQiVIGHFTQ5uvoiusxeTo6+j3esK3PLZym2p5SXOs+fN/O3ZuBM+
c15cXRoNTiVSB6faV7NxOmuGC4FdXqNxbiKcRVVLFE6fSdZJdOx1pHx74BbQ
Dn5f3DQ8Rq9nGlb95Ox5S3949rwlfxE1exwA1SMbMDnAAWCnBvBGd5EqKlDU
IBCTDdxYtfCRbifroztezzZ5a6BAZ0H6S5xl0wHJi9CqjbPFk/1BNPeb7Nd+
mqZZVLU8RK6LzgHoORpAc6BcdwEDaGflmj9z3sxPBGNxEVbbmmEJmYz3AYc1
jDeY1Z8q917FLqkP8Px6OtDGQMXuBtt17aiHihUbrfxbaQGpwtUKjKBYD9bz
gRFcq7GudxfVFtackq/NzNHw4kzEzn7fgnra1GLghtZe4LFtpmoVbZXajtAO
HKEIChiLdY8X6zp35S2BetQ6lYFyUX3lyllhFgL3SveB/NdHiaTbq7yUqsJJ
NNNMxRoKuWyRY7qbc4CoELvu31XTG4lrQRXLBYo3q6ItrscQGgLVegBsgbSm
eiyl1KhBIj5z3oq/Phst/nOC2wlWWUUPYnuvlhDv4hHDVdYagDjvEfJ0GNbA
QlZQhUz5ghCxelOUI94LgQ80c8WrCHy2E+yXIJ9NkxVLrmFBdgdnCH6ydtOQ
Em/EitcubrTYnDyHdvbK3S2EswCEegh4QXN6t8n0WlFCVK0PiGUXsIMsos/Y
RLfXSXQ1qGVGq3tqtLo0TXGJZ+H6SEJu/3TNIb+OEA8bcjrFmzghloCL9oAU
L9SDbRtIcR+2VSy2bCFOYYTZ+Z2crV98kqP4aCPWMY+CvG5khChaKES015Pa
tmmioxyJ6BbwSsV1HqIzoPoXPEJclqY4xRWfhwJVeAzsfTZahcZuiyJkh72e
/iiI2WaQvD5mK0GhKQSqcDrNb5prNe8DslMn2Iqik7HsPkrkjgP/K3s690aA
sN+TyPaOKItwE9jE8yFcARAWPbJbbmFD+3ieXHaKyj2sKMURp2PxiD8bj/8X
YzFWToB0LnENEMrlAbAcQu7IQt0I3DGBGg/2WzZUsUmqoDplOlSXSzMAs2l+
DyvTYkzyLYKousSDflss0fddDHZHilz33gTIDoKMDyU7IsiuA1t61+sV0QpQ
ZXziXBHGLvPokTt4x1TiFJcoT9dCF3dqFzgGXKDo6YKaQMc+BLZFkJHmOaxr
gZEarMtZrNnyXJaBeDqwqVQfQZgo1UZsqzUqSMTKC2yjdQwhz7VLLcBl53kM
ARUqe9FJhrAGuKzhuwyU8pJHtslHnx2h6+xtp6WejvN2YwJe5ZYlVmUEtnLF
vbUb5D1tk01W9e/DHkNA9auG7GpgtYbsUlCtSoHKXX4ulLOb0jcHCrnRCFn4
BesVOc9mv92AITseAb7hs+Ma+jPAjm/Q9KcB/bJH1zP1EV8WeMjNzYEab5HE
YwN8t7aOo2AzJefp0VoB5THQo+XrobwSuHMNZad5CNX4ivqIL+da3jcGirrN
2IgugGj11cAtI5A7j4GlF3LnPOBL1W85eOHF8J0C1c+n4lUZTGcCO94b/bJV
XKMOYBSSacE2CnERko0IazvgOA72UuriuIzzYmZrdQlLNlu5WTVwFWcON/FS
jZNrt5ZqF6h4F9F13nYDbl3RajartBEs8BhBEOBpzgiYxdokaCwasXQFwWh1
BtTVXP5fG6jVXtAAX+TmvyhkUqMdwEsXglxHXsoinKoT4WJQwyRCcfj+Ey6f
NSH8AprdqwM12gea3YvcHkF0YlEOCLQNrCMmgAP46Nr700R3CXAAH91FgG6T
FGj8/101As0CvMbT6l7N7wY6Gh0EiX/E3XBVx/7UlCdkq4tA1ufAq4Ds4mzy
3KA6DQEr2bUO0TmGaHZbezm/BHYkOw84gKRbkH+Xaqi6wKJhsWUCajmGfBS9
d5+ILgImcKOH6AQoVD6Z2lAprLWBiX9poEZHQKuqKbZMVaOFn1UUhT4VRcdK
J8HSK5TiqKC40CxqgyguNO96SlEEulyXRriOqz2XBCpvDPSe+iWomc9Vo/6j
8eU2uXjqBsCWgNUSckcW2AKQyD5gC0D5bvbIzmaGjuENzeWLA1U4H3SeRFQg
/HSUUwlN+1Y9wBqnwL5Krh6i4+BFk5s8G63zQb1p1hJMfer9+lqczmpoLddi
ngjcDlwIsvhC1bkLRa78tLzIjBavl9QgnAZZjKoLi3AMeOFNevGTSFDBSklw
fo0Es5ixWXwR/6KJs4JcBOrHBZJZ3Op8xjDrP3r2vIHbFDPnReOlnkS2nQ+d
VIeYjYLtPMNsPqi/rMg2hAALqByHAzU3CVpGecRI8VVHc+KyULzhVyO0vXC5
J3ODEI4ALzQIx0HBbfHILoviei5VDwfKbgo0hfvpuuTKbuWnz9L/o+jMeYs+
p1zP6bJXeFLW3vNUKVuzhpkHdt3eoNmNgTLbwslvYxi4zJJxQeAe2zKQvnRM
WF6WjLhb+Uyct07uOn6XhieWKL6SYcMj4Q0CvzPwRkHJbfUIL+F3mK6zT1iz
ITCb9wfupy0H2SyPViy/lspmIcuY52diWT54Nl7DILgzYKnSUA/cAWCMBu4I
qL6tnDI3OWQrWWQ3elZ++wPFOQOS/Hwjznzcx0iE8YUzxlVgg8JnjDUI+4Ex
1iB06rFPn9kUncNnNwam+55Afa4CHeIeu+eW2qSe+9PiyOTPCHQy/Qku6sNX
eywgCHGvsQDXP5l9ymFQ0Fndbs4gvjXwVYudgaJdC5rI3aghii0g1m+UUFY2
QHxRb77G4wV2lWIp93BGy6x25oGa3+aRdhbobVyrORu4u7YeLBh3qteD0uIt
SKxU+NVuUDfAuhb4A7JYFms3eLHCh3UItANtnHi3hDANeO1iW+B+8EbgDzsZ
8cb/jxLKsXCnaizC7vDXAYuoi3IX58IM5UHQN7R7xJsFejvnEtsDxbsZ2MIO
Tryy71KlLbKNWFkEMuINrEUUbSOmS7JVPG6fyd92hjd64A6AvqGdk/DWMLKZ
x/RsCpTwNtDRbkeL+ETCJWAUXWCVsBGssBqSdzwjuGp1NSYIt50bYaet8Mk3
C/KOwD53Q+De3XbQ525PLRu0fC2TEGsw1oo3gnWYImxVOEy4FRiEj3A/eGsZ
q+FtDt65GryznmZ3Q+Dm3U7Q7G7lWrMy35o5SDeBnRWF1PJdjLSlTqR9oGHo
8IjWplowGLO73TWBKt0NrGCLpVJ7/eDzAcdkt9B1wfYBAVTghJt6hLIJ5P/N
eF+UUPaCJqGDU+d2iyPaMwhN/plApZ4PStlmrpQ1geRHWLfSddFOfoVV2Cva
tyKyjeBFj5v18qzXrVREsNMjySyUs1wPuzJwu28f6GE3eVYHTSDRreqkTx6x
jU10t/Rb/Kj0l0COG3w9oNB3cjLcEcIuoFddFrgFuB/0qhsDO6qyWXSphIf+
uT2V7EKR4hIjhVupxLQAXgS5Jc3UKe0+SWZh3cl1pssDJXkhSOcNnoapxWOU
ds+/I2Fnray0UbLs8sAoDbtuULRZPc5mgNvF5fKSQAEeArm8nmuCPIns+OCs
pGavlGrKi706IhPMgW0+Q60L1OUuj+KCwAXUk8WBOyZHQCKv8wiwFeyY2ChV
x74LJG9STuBCk1A2AEM0KDtBXe7iBLgzg+NuLnMnA3fzjoKWcS3X33jS1rG8
XUzaeqmlXvx4kwbWAQqwyOKnkngSrcmvLKvbHdgfLggU3sWgP1zNtdztfAI7
/HYzCczxG00+3LDG8Wiy9eYnSerpdlCQuz3Hvu6SRA/RNVgX7gtM5fFARZ4A
68LVnvamPSOVlSueT9f5dCojniMJT/npVY+I9jrhiVct7aAedwUe9DqbgXc/
V2JGAxV6KcjwGa7H6QQZ3glg7k1g2hnOwKTD3eXIFDQB9GYPzzZQo30S3R3C
MCDphwM34i4D1WbGs8XZCbY4O8H+0D66LjsLGOuAD4V1nkn3+G5LTWrTLH/L
fe2dQdwKCnp3oGR3ZuA+wBWl4cD9tytAO7mS64pCTdWC63hACu6QA/ekxGrg
Cj99JusgrxZQ4ns8+t2TAfQCzgMGAgV7FWgzl3vao26PDdj9+QG6LjkbGYpn
sjsszzkvH+uF0f5vv1IqfIWaxqdlcdJqvd4DtBm0AD2Bas2qXxcEril7A8V7
DTCH5VxHZTmD3tpAfnsBcAa1n2ktgPqN1wrWijfC7XtDeBNoEXo9+j0/A/GF
nCH0Ber3OmAIS7kuqwcYAmJ6ITAEtaFpMe01hvByW9MpwTRqoOucYKubqxyA
7Dt9RhNoGkI1nVXwLgwseJ2B23U3gi532tOT9fL+4XjywZR/vCf/lZp95B7A
Pyev4/8/m+bvVEDfGYoaQZPhE/lem3nBZi4u4qDc6GBgK9weuPl8E2iFp7jW
rc9inrISh/khydyxEuHZNvNu17OJdl4yf6m383kvc3Ny00bQY/QGKtwuiWgd
d6Hn5ZL2QFXfDDrjJR5V9wUay2FDmJQtlm9pwl2AcCGQsPnMiDJoNPo8Gt4X
RDXbN5oDBfwm4BuLA/dXe8D+KqJ9kdz11x4iyqJFuom2BKtfaxPvy3u2lc7M
Wz1VJC8pA+B5YONXaOAl0Ij0BUr6/Az4BwOPIioH7i2+GRTNxZ6mbwCYdgdY
pRxNgKu1nzBtC3gpUXZMvPpMF13EirBLnMTma+1xv93yc7mwXnzy5bY1wofD
aunlehKKoD3p96h+fwb4Q1x7XQrc/n4LaK8XcesVj4s4Pn009WrW5bm7bcx5
hbnjBY25kMB+tu3nhJlGWo0OPS1K5ZpntdEUA5GfSiN3mpVQ3duFk8Uf0IDn
A3V/O2jAJ7hmcRDsHqGVzvFUpyL83NrlqH6t53/ED/hM/09LyRwI/u9ujPl2
LxWjFHPwUu+i59Nmj+ZAtCt6Di7Tc1AADYtP9gcyuB/m/KYQKPs7gcEs5FY6
Hndx7Pzi1N7xu8pflaDbXhA20v9Tcd33M635vMU7tnVhK+JEj5L3icfrLq6X
at550L70B2o+q9AeZjVfsB1IXITW1akrHZ3fDVxnPldc5wHXQfhPpA6gOVW4
R9iKxN79TylHzxk33/yIknk1+t7SaoyGgJcCsV+isefAYXcDHplfUIvaOf75
iL8pV+t5ZSWOwu8FVjLf0yHalFNu4nj7SUlZmEN1WXGj4lsjbpsyxXyIGhR5
LSmLf6+U/ngZ6mUQ6BOeJVED6G4GAhVfU2SP4w69OtaF5Xw/6MbHAnvFId5c
HO4n1Mt5e74hKGr+7+j8guFvqbwh4Z8YudK3rXLxT4ypKqw0nod0kRUTokwe
Npf0uZRRI5oQMR1OlzPoyYML5QQcpGuwJ3A8ZTlXrNfz4Gj+baBnH/Vsbo+A
LawOU0FTxl46e97W35Xs1WXzIzRQMQcNIAfUHCTmTvQbwBzk5Rw4pl8KbHTo
I2yjMjcH6l0Cg4G5cCBjKi5OKu/iIf9LYQ+B9f8o11eGOvzF6iBUlQOaZ1HO
hfKk5p+K2RD5oNr3xOjN1H1vaVSS2F9ue+qUxl4OxE4fdBuVEHbV5dCx7pzk
D2ZwPpZIPi4Hac7x9YjeCKgA6xn2rJTGgN20g5USoS4pvxZco9hril8Q+s4l
3Uti64pnGTiJZ4XktIoX0XUxjTO+LBWVdEir9xavei/IoHqUV298vUkYh1Bs
9Cgwknlce+hxEcfBqQ8vE9JGbR0k155/JMu4rPFuZdWkzyYBtCWwOB6BxfER
QY/eyyKFuKBGiIcykB3xC7EqX2i6k+5856OgrR7i1i/jfNY759c4pt6jYtw3
KqnrJOvJhVu/LBEKp73/EfER9TWu2hRIs/aj7Gm6xIkholAxZlW1w7wYX25t
2/rCvNGHiWxOXosU1/Zqpb0W6KCnu5vPp73jsIh1o+UCOoj7H2kB7tkciPeQ
g/eR5GGvt/BisR7OQHrQiFVhTZDGj1cafamn9wqBVVxixPfT7+6UVUqjPQ0a
5wGumVsAdq5Zrq2q9Ce5L8aHKLYEtl8X0nVeGaUgGF8eC9WnU4JqXhUQaz61
qSp+5iQqLlFOXseM7xHM/IbQ7+nIFmR4grvD5Oq0SeEV+V/h8bYFlvgLNF6B
Vpzf5DGDF+vzSDbSA6xEc7ZE40U/IY3//6CLVNJMO4FTqvq4RmscbBmF4m1U
eO9/ROKNw2sVeLsCee6na2EEK6rywMvHKKLHBgMF65Sqwhyiuz9QsCVJV5hA
mi5nBlq/vZ72asLjs/aKgvygySZalYNtE9+7eaKOje59Rh0o9/n49gkimjNE
sUYvsiii/Z09QKDJBoPtn3FrF1/n/bVJt6Q9XPOEEp41UF2JFDAJrRU0nl2B
lWiPQSgeKv7ft4nKYwOcKI9m8NvNS1AkuObX/DoSvIvrqRaBBEft/TGwkiqk
5ViliCuKr2Oi3YF8d0kTVXy/E1E837YQ16hU2GYm5Z2BKm3NqExOZndxKvWk
daZv5tUC1Rat+DcbWXCdLrXHD1cfyLVTwhWOqsBquP3ccdnHMsjOBuq3o578
7+AaqElwfCEiiwSbU7I1WynaR5En9AcWqu2mUAlbJU9oSIHF7x3IYruDb/kd
1Xby3pDZq3Z4lgGTZ2o3eZHb0lJVCzeNd47E2wIIDwYS3soRpjXBx1SrJS60
JujjxHw8DXyWX6466u2pp2NtC9zLXQxsoo3DKz5Ocs137Q0U2gYkxyW2I4Ew
N7tdAGHMZcLEAq7hGarYXl6xmQvXVk9DNQU2V5A/HFcv/gikUrBqW1U67Zx0
hiZgt8OBh2RtdHsFYbn0GRoc6F5OtRenKW8LVO1A/W2r9oVWblEwybdgDmK9
+/rdddpoc+o6MubbCBCPBrYL6wHiQiZirOWEstyGASfD2hoo7SG5HrOtQlyE
hNVGoVPrmrnmbKnHHuwX7E+q15E/fHPadBVcpxebHwh3nXFd1S544fZw+j3h
kK3UkN3sl7Ne4w6/jha4ievVkGMgE75U9WqCcrKeRa8ITAQ2Y2tATStm0sXS
zQK8KXvrkNCOclUuYJnbyBW9ZcAv0Om7LzOnDHm57fApATUqiOvpwMI2A4iW
PES7Ob2ezMC5IVCv8+tpecuePmwZOEAQWe6l6sV261DLmUB6K0BbUM6kh/WY
BXB9oB4XBPa1KOGLgU2Yx2Udtpeo/O+9OWZJPWy0OpDtMlCmGvUKgdXhJTZG
fBz22kApLqqnfy16dlxX8Nns2KWFSx/LviawcZoGuJpSuLDw/MRoy29N4Jbf
ZEDyarEVuGbJyly9gvLgcjJ3bWCdngJ12uBi33B9aTarVYGbz1Ovo8/Me7r5
mcDcPAnorQukNwmqRrNLLwm5EllfJ7PpzQQqbWl2w+ikZ45rZTy5CY4NcnNz
Q+AB4hMAV4vGZU4vcb4rtsscXHMI14pAsS2vqwss2HkqLkJoEdFb5clNu79G
uDYFOv8CUFVbXVxIXbaPoY2hpYGbbivrSsyCnZjiIiqACKtGaSgx0YeHnQCJ
uTkQ3TioAm0aXQentFMZ6KYCd4JXBTZvr2o9rQF7kzYU1egiKFsCD3wZBVDa
XShIT5dmQFkSqKc19a/AzkQLP2I3X/pMzgLWqkDHOg5ScFugwY+A8tiGG9tX
irl3Wee1Synr8lqIzuG3iwOVtS7gNYZq1HKabVlX89kHqdGKKqG2PZDaPODz
7Z7lQDsnvcvS1JYEbl5t5BIwMSshOMmv/wndMawDq3lkTMdBDu4IRDMI0HR4
0LRxgroijWYycItpU6CtPyyuk+OBBCKlInEe35q8Q5iOmWPk9aJnZ+DhJn2g
9HVmYUIKqnH0RYEK2solWo2C1KXltDgtbE1ytZjtCn0OuWPAknYHlrYe4OJd
HjStnIKuTKOZCFTQtkAjp6wryF/ECfUR7UFrwZFMyIOOGg+KFUM7vNGeQEzd
EpNCRIAyMSEFJc4tD/cEW7sLAgU1G5h3D7jrHPt+MQQiTvjWedLQ7kCPArc6
P7Bj6ATlr9sDsYXT2lUOxEoNxPmBmzq7PMsdeUR+Wfxs/y5OsPvjcB8W32Nr
r6wD+2HIvi4C9rUv0OXbgcv3ZHFD4rsig9tY4BbOnsCUvY8VX0GIT3AUFxJh
nNFKhMjwEEzH8PYHwmyVMMUpuzTMXt22yvcZCH4vuJ/2l1Lg1TZJvB82GijC
vVxpeACXhlg+99C5GB6WKSxUmFVJHR88YlJY++CBwJcKmkEl7dP0WOFd6cVF
a+7hQO0d4HoxettY3libUhedN+Rhsqd7Yi7vJUprwII7g5W2uwsCu44yKK39
mlXy4V+2tMRlTkR8TTaueYE7OhcE7lvfbXZ33PsVJT2Voza9zDw9DDaqDwVW
3BKouCl6SbyzttKuykY3GLi7c4hLTFtpqh4QpbxkpWqDzcrJygxW2tMOB7Iq
gMI6oFk1ed7Mc202roFApR0OPI7iTk5pZZOnWmmrwWE/VgusNzIOgzw9ErjH
nwPldVDTawx8+5m/IhDJvkDhHQ3s7e4w24p2gRDyi8qmQFRVj+dJW3CyGhfm
RWyBKNowxUWV1nkphliB12Vz6w3cEjruaefu5FqRJpCzSnX20l3lrN0MHwQ5
e4wFlVegVPUc1oBCP6z9GgsW2jzrDNz3uTiwgbsdK4xakGaQrmgTDZkdAnfc
24I8oUvoPNn5xj9/qZreMCt7hHZ9BruOQJVdEnhkwlu4fqQRpCbaR2vmwTmp
eYKuS3aVSC4iiOsFKAUNLhdKgW9iuDYNMFRtl3Et222eDrcVdG2r+Lx0DOwC
93wKxOcSus5blOhtR/Q2Dpq5Lz2THIQsS6cXFn5/wg1pQB2Bi/nLA5u0W7nG
owU0aTN8LiJYTi5eKnMxgSTf8JIDpPo9pIqBsrouTa09cOPoSi4Rb+M6jHaw
aloVmHkKk72DfYnuME7FuloQf3+CEuAx0vn7Naa+TExYUDem0bQGCuoaLuPe
5GkZOkDG2a+uqYzz0HF86SRdi5X+48ntT4lL/P/3QUq9HkqFQDHVmHxLoJiu
Dey5bub6iE7g6igFm0H3egBsDp3U5VCeiaK38xZa9T9Ft71P0VFp6ZD0bQ4V
PHq7KU2vKVBvN3g6L0ZyZPJdoPlaCZbmyLf2A986qX2LgBGuvB+a8jPvTmQ+
UH41FaAxUH43BjZkb/Bv5+qC0Amas5W80znvWt9vnE7vD53QK9FlMezzCWlJ
go1ve1carFMkkldaBGwbrGh2E7BYjW+QMOV5PcBuZSlwx+iNgal9k6cb6QHZ
vZLPbscb9wNvvNjwFJWDSDYG8uzQy4ZQWd5ok8RrrGLgbuUtXGW5iWt3u0GO
rwA5jtDtA8Z4sVt0CVozj07ks0bXnkKHhffGbFz5QO29OTCvb+Baln7Q2a3I
SGTlkHu9qyxdlKnVfoqIPuEtK+aQl1yg8G7KJpkLFN5tXLdnC89pintBt6eO
S7MPjPGgSwrJ46mVvanI7YEVuTWFDgvvZhtXGeESsNR6qwD09lYuPa/jCscg
6PqWg103lZ72e8H3Amc7BkpwRyAlc/ReQ6DAnBqRTxNrEMiKQEx3BJaEaz3t
8hDIzOUgM5uAr53Pbxw5JbbLgFPeFuVBSWhKgcPyusWG5RbUEtDS3VzGsVpK
Of8ASMDlZ2qX8E2gJUaEjoKi2RtYNM0x7hFloFKWnKyUqt7Ig0JquifQ5K/2
NBjDIA3R21WQWe3h92udKtkfyEq+U6WEdtgEOjoxU4JtzsZ2M48NbQvdF5iE
V3GdxRBoyjwZ6DS5iNkRUBsHAzsL+X6pIlo9CKmhl6psXEWTf5rPg55F1dVc
vzAKuq1lfM45rrQb5FyKCRW9eYF2XuCZCA0hCXksCjUFDwRm3hVcjzAC1klL
QdrVicupfsOBuJg35MaoboyQflxWs9ilTmlW9wfuW5/ipDUO0m0pOPwFWdQu
kG7m1U1T8EYDWTHvEo8v86E1vUl+Q28Dy+syMEK1XZxd6wGujTrlaQjmAwtH
b+lqAnx2gh1ri4+28HG2ISjYFi4ugk3UoAlerwNGfVTCB322icvnJPG5L3DD
+lKuU1gImqdpT97Zr7rtBHl3CJS7hax1521WgpPEVPNGLpLQbRLNEYCmoNFs
ElgEDtUM1KYZIx2q/gtBpzQN1sjIhhQOe7vmIKhki1gcWjpWOl0PLefN8ttR
L4uROPZLicVdgYcEXMJV+AUgpaZBSjWCDnInsJwLQTWb5GUieFjbVvORs9wq
vx3PRLKZkNwZ2PSc8PSKi0HyTPHJ4xjNDrCjchAUrSXAiPOcmdwuGcj3fpNi
5lz3ENet4qeEwxV3eHqbS7hiPQF6myk+S1DcjmlcCArQNFuA8Ns8k9AvAaET
UMGnVf4omjvRvUS3B3Ytx7lKvAR0LVN8Wjh2sQPYxQWg0iyj64INIrnskpP6
Vhn5ZVzk1ISISR9Sky+CF5PPbuWkcuCYp9guAc2Idf4EnQMeBI4zHAAFZLl8
/UDsi9nugA5wfIv8dnkmjCUJEK2GW7lW4yhXO6dBGiwJTP9tIP0PvFBbLCgN
GkTkBZ0CWvwy6e+QIV/JhlyyQl6S1oDcSA5oIS7yiGApMMIlfB4gEswxxKny
QCTKHImUFhJLuDoIzLq0HqKbuexgBZEqmlOgmVhypnYJqFLD7q22gX3P/cYd
dHlYqKk0E5WiXRTmEnMUod8pYVwLYOQ1jKEERK1K3sBlx2FPfVwOugZ0qiDk
DduAN+wDdWJcA2iTsnglih5XwUf3yqivz446nub1NRK4MbBJOMT1TctAYkyC
xCiDvmkrSAyLgHbHkRSBoiDwchQ99VIU/VJ8uSv+/yIhg/skjBuDJCCATMUX
LYPktWWQD4e58rgSJIAdfSoBHFvYAqLfa2xBRz+E5l9FH+VeiKJPxH8RU6gm
iRDdLzG8gcVQtjHEoW+ML/OULkQ2XBvYN1zINVArQGIs5hMDgXES43xQOfq9
YIoSTPz/gxrMAxKM3M5wO+gcBhMTWGpr5JrAfDnAOegq0E0sBlsbyDEQmD2g
kPR4wTRKMCJn5lQheVB+ezMLpjENJuawOa2a6CrOQw94Sutq0GSgkwSWAZHN
IIfMe8RMEenwEmk2OaSpPCSJ3FY/EcdSrghMpH2BFXcV6McXgbyy7Fa/eRPB
Mu9KNAWn1QurDRjOwxLW7SysJgRL5FZaQqc4Cz7gqcJrQU6hk/wis9kEcsq8
o9XUoCYvlE4A5bSEcgcLJZ+G0iCoxKuAlIjYg1r3ckV5DXDfRZ6UsvuyjWB/
cDcoSyUvkB7XZAhIRQK5KxPIEhdIAQklOhnY1e/xCGcDaF4m+GxyrGcjyKZd
oErlvZz6gRk/Ir/d4+XUanPKYeGc4JJpL1e214F+xgaiMskGoro5BcRe7su3
zeft6uTFMejmESnm7RLHfSyOQhpHrIlNkU87xwJdeRfX920CCYbOf10GjrMB
OM5Ox3FuJDKtgM8w8JnHJJ8HwviIVQDxYTQT+o6gnZ6Kvhmk1UKwLER01oNt
Azp9h9DMs/JtGtXk0yaiZoBozPR92nneIRG97ZwQORLSy8Ujnm3FXVwx3wJa
nYWBfrMe+M1mDUYk89Opw+hLgM4C4DfvlN9kEUe7CJhO3hWQWlIeCsytHZ4X
KbaCLmchSK+Sh5NtQ+u1Lz8vYIl3ZtA+giT2iCaWB8QmQHP4bkmsck7ECuk1
BenpwsCdyu1czd8MmiCUdCXQGa4HlrQaMGskZqWq9XFEgpjDaxJY1Hskr0fr
5FUwClP2LXhdwPVD2zylfjtIPfS5GsiT1gJPWgnwtFTVG7TlB2HFyweBZBqs
RB+XRB47JyJYQfsCG6KtXPHfBrJugSfr7K5xLXCnpQBRKyEqxIr5Wszjt2I8
vx//vFKoJb5/rTc9YVtUOKciVg57AoRtXKGfBVmFPs8KOdFasMM5CZi0SSdS
PGIKfxJ3L+JasFgpeBCZacDnvfLbuzP5DAE+WEe7A19K3czpaAdojuaDVMtg
pp1oIcesQSArAlJTwIOelKQeB6TMK4cOpRIW0a7ADmkj1wXsBu0R+tApZEWr
QZ6Ne/k0Sj4xiw95+bzfFlQdfLCIZj3t0WZP67gbLEDQ5/KVAtkMe9m0GDaU
pcKFpsDK9QOSzZPZbKrJEqRcqx3BZXtgc7Q+cDtoF0g19JGRKNVWg1Qb8OJq
z8ZFX0/Jbx+oG1daStsCU22dp/CfDxwcZVsooh4vom7jRgIPwZkEi9pfkIg+
aBBVMhA1YkVt4ZqhdVyjuAd0QuMgxYrgFZtVIMU6vUD6gD2jFvFDEsgvSiAK
hlXIOCBpzWwKbIPWcCV/P2iDxsDr/ciCZgCfVi+fQZ6P0zBKMHF/XScfvAGy
gWuE1nFFfS9Io7EztTtDqDmcAWnU6KUyDIrWJHCaD8tvvxxOpQlve6zn0mgV
58QXgDRCHxxdBL6yEuyxFr1AxoD1LgYr049IIL9SLxAskzWB/jvjqegXgm5n
FKxLPZycdGrwclrg56TTSSom+riXk7Op2IyFs5rLJFY4KTs+ADqeUb6EO3az
gq7zyZkC3qV4GByLQTlaBHB8VOL4ZL04sGxWBnY5KzxbQIdAZzPKp5eDZanE
cua86R+cPW/6L89GU38p/qZVY5kCprsI2ItMo+hXw7G0YJWsCEyk5VzRPgiy
CH2mOsqiSeU2Bod4pKnvi+uxT1TlnuHT9OK35LMskM/H5LdPs3zw6tynnWWc
ES/z9HhHgBePgBxCdBYCOiVFp+fmqvzs9uS8e0RnJShOE6DH+4Sk89k66aQk
pJad04FJtZSr4IdBXzMMjjxAfd8YgNSsIDWJWvIIQSI+q4EHTwDTkW4Tfd7w
mQvng3fll3BuvIzr9o6CvmYk0GeGAJU2SUV5DqFYywNxlpmfkkC+KIHMhgJp
xfsU7Ge5THmq9TGQScN8JjlvdOsX1w2CBEFoEAwazkRTPxQ4em4RbmLjcIrS
QuAu0najL50TDrwtMRG4OJjkivfFIInmgdUkcppuwKdo+MSpcy2RWQPcd4Hb
61WM7Ua/USefNiyXhVzqMHIh470YZM8wyJ4CwNEOcDRJHEmWfIhAJHYi8CAc
2k4+I3F8ORPHEMCB5TIeuBW6mCvbx0EXMy8jnZS7NAE+bYaPoEJkVoFytACs
IGUdir4K+DAbfO1YKWOBzcyEp2JfAvqZIT6PHDBFAKYT5NEqYLvo9c/PyW9f
qxcM1syIZ+dzMVebT4BFwDxPHtmnRmgAOHp5HAoFgRgHS8gvSBzPhePowDqZ
F9ixLOBq82Uge4bAToztLtHkXwgUkWExCHJmBpSgceApshRH38hmUU0WAB14
V2oo8OXd+ZxCLgUJMwicpEFcx2qY+Vtx55U/rkbLflSNFv+ZbNcIyAgAshLU
HATk1yWQb4YD6cT7lgNcdzLOld7LQWsyZHJEhCwCFjYfX5NliJCpHyvo4MdB
ZqwEFWYc9GeyE4l+ywRfCQs+rYa+wDZkzNOpXQE6kV5xLSb/Mw3yE3SqcZpU
o4WftcDkbTAay4TC0rROY1kBCss48M+n5bffkVgUEqvw1mDpwppgP2+c1USq
3J4C7UinZlJUTPqPxpfbXLHELXw0+T2iMAnyYzmoJWNgzfebksXvnhMLWyJd
ga3HiKfIXgUypkXjaFY4xPiEUcQgYi2s/Nu4Z1/5d0IL0z/UTBZLJmeisU8p
LkofTkEZBZ4hO7Lo9+tlgjcIOgK7j2GuJ7sSOGlJU2kzH9hFrhIt/FzccBAQ
akJiDIRiEfCR5aCqjILD0b4igfwXLxBnW6kbi6Td02uMcFX1GtBr5Nz4hQw+
E0/2ys+KCPuPxZfbiEHBR6Jpne7Z0QbSKLAO2YxGf1gvCSyNlsCGY4grsldb
DUc08F76GGIDpCSBnIkWCjeObCBxnnz/TLTkL20gjn8sBSVmBDRfsgmN/igc
SA+WRnNgmgxw1kosxLGF9+fkn8V15Jf0hwqXNZUWSUURIR554CATxkH0TsBS
UGFGgIM8K6n8Sb1UsEwaudZjwFNuL9c4SgqH/LA6wpHXODpA1iQ4zkTL/oZ2
1Cwcjn9MgyIzAlZysjWP/huLAy/8GaWUArOmj1PKpRpNC92Ytz+cTlx6TOLQ
wo5zkoXASaZBkRkGTvJ1+e1Pz4kJ3kwscO0IoxOzI0Iw2iTDeJT3x7N3mv43
wCcLIuFYiPWihVADS0IuVqI/NyTmQkj04m3nPJcsvVx9PcwReEkciC3er/he
0vNpqj6CRx+fM46FLACbieilnHnAQuSKJfqepDJbH5USWukLMHSKmjyw1W5P
W3bIC6gsAYnb4oT5ZULTawNKEigDkDaVJaDyIEDfkoD+sk5AfTKB0mt/kTQS
TC9XbPeZPkTcLk/FD4C0SCDiZ+rZLMVk5tF8kEeTrsvaQJzVnlzmRT/MBDKE
gNiKiS+bquLTs5GtdnJ92t5APp1GMLFA3usKpmUqFtHn6+KzGFShecBnflt+
+xHgw+wT9ROaYvzfeQmWkQTNnSJ5ujzld1cgjD4JQwolyZ4en71YfRvaGpgE
5Qe9SUkufqO/DofRp2Gsr1rnI4ij3x7DeEsHV213BJIYMmmjjbYXpE0O+Agi
sRiUn0HgI4k+fhxOQtbgsvixmiwCq9bpKmIiY7HIdrd5qu4WAIXMVbwgeXoM
ZEgPyBAHRdKnjYMMWQRqziDo035XovhJOAq5uskloiAMNOvr6MxZa+PYRVQi
53YLkdCH5MEivM4LZAJkSTefJY5ljAEgE6DGDALL+D357adhQPROQJ4IlOLo
N8XxHhSXmMCYEgeRKHsK7lovjCWgI+nhE8WBMQoSZQLUlwGw1PsDCeNn2TCq
zt5yzk6URB3lmMH5io24pNVS5ISywstmOWhGum02KHMSExk13bxmsxDUlgFg
InJrJPqHcDbtXOaIyA/SCdYcwTRwZXe5F8gq0IygzPEAcTJnIagv/QDIdySQ
f5JAKlH2HlorK5acnUh06tSDdJ5CRzCoY5v0olkP8qgLrPxyZjWscikaAZsD
C0HBQW+XlptH0T+Ho5FHkIi9kY1pNHYeRVI6xQTNsNWziEOC7lzsxbEFeGxX
oK0MA1tZAIoOwvFf5befe3GgQ/ns1BEXoRI6mfVB+uA9pSJzjrW2pq3zvQh2
gBaky5csVjM2bNxD7wXMB2WmDzRjfywR/Gs4gkY+WeJk2JFKFlJJuj7H8U/H
F7kKKhVGYyZX2OeNBnz2gL6kk88Yx0yGgZmMg8rTB8xE7qNF/xbOp8z2JW7G
5CUlwcyWUhz3evpIIbHBEDOK/68l1ONFdABkUSfIIuc1i6R1mwdMZRwUoD6w
+PuuRPTv4YhKplNxDZaYJL+IoxSnDthMKCQQcd7DpTXCafVSOQQSq9M0tOnE
crxlCHjLOKhCvcBb5I6jeGNrKJUCn1iOcBpkYtnCkfdrxKopefkcA4nlbMy6
iYX5WMYzBkpRj9vSkfHI3cfo/2X54FNV5LjssqUTh7lRS0dSKSPp2EgMkZOg
b8nMo8RqhoDVjIJq1AOs5s8kkf8II6I3URpMMuVTbf8OurmVABRFPgkwVl2i
LYVmHfjloCvpOFO79kOBD4L9xlFQg3rA2k9uv0avsIEXUeBCEnk3PagM54AG
StJEFALy2IKsRVXr7J9VtfmU10yuAV19O6jLDeB1i0FgHyOg7vQA+/gL+e01
yURgmvPYh2Bi+amquZJFEQTfIvViBU5auAFIv4OXvmMGA0D6w6CEdIP13fdl
tGfYaHNVa/+Qjr5fFxVFJGqKxUVFJ1J5nZi97eKt4fvishF3pfFzdVSlIe96
SXwG0nVA7e0+tVsdlydWpzB0gTSXu8YyOLhey1WtHjyRqXiddX2SveuIhAyw
kQLMxz8uqMoUmi8CvBa0Am28ap1M7geqHQamjmL7gRVbQ2CA7TqYds9sXQXK
eBt4kTk0onnAlLtAHv7QiigfGFGjjqgPT8+VoOa2ga0ClGZ9QHpDJs28wfyV
FUwxM5glxkIomGHP9FwOBNfKCy4zokFgk6kTx1XEWP+7FVHZGxG5RzzeGVod
gkm5DPhBK1hhIIWhY0hTIZD3oXPf/bUVQhP9WJpNwquo+yTfKeTk5MZi+GIq
KJhxGVJ6ai4FxUuGVLTtXFxUOH1gJ8p63612tg6wEPgbK5Iu+jGvRq0mRAhp
wfzaCRAiOgGKTzJaW0PyIsssks4A8KoOkAw/tkbbRz8W7JEKjmKEHNuLgVxa
eLk4iu8Gqy1r2DqH20Gp/Ik17EH6sagg28MWwx3DnI8BVbRwqpBFrwfoux+Y
TjvQ999ZAx6uHXDCkwY8agZso74ICKNFCcMs4WwZ94CVSR/wlHbQjv7UGvA4
/egeGUAaHjFmmOYbHQb23oyFnBqvI+ReYCDtQMh/b413oUfII5juIWDdcrSF
tByEiKF4rTMXaIdoA0P9mTXUxX7xzvMAvgA0A8mQ7dYtPWRHvr3AJlqBfP/B
GvKUX77zMOADQA5NnBwmvy/k0AXk2wMMAg34H60BL+fkO+Sh+3/aO5MXSYoo
jMdk5VaZtXQtbZfO2LhNKdM2jq2Odo9LOYMKAwWC0oLgQREbPYgyggx6qAEF
RRBEGkREUNwOjae5iIe+eBFEZfRv0HHBDRfcOs2IlxH5MvPLmPYqdpPVSVVG
xi/e+96Ll51VUbeCcAOC0NIVfaDdAUgObTBlfMFgD1q0e17RtHrOvgUk4Yij
aiHQdCF64Cp1cKaaFtpAu18y1Kvs2h1VrWsqpaMg+za1dotqUNpFn9bpg8zQ
AtXRVwz5kF27I2zgm4EWiNbnZbemlXPFHJBDH+SHGGj3awa8VqfdBUsdehMQ
RNOiXQTbA4EW5/OE0e43DPYGi3YXcL15I8i7YVUIBrULhGBBLWj3W4Y6sWt3
3mLdwyDvZsi85jHaRchzIDNEoM75jiEftWt3Hht4DeRdonXLuu0CGaAVnCKg
2e8Z6G11mh1arHodEEKAhEC1mEAfbOzUwxZqmx8Y7DGLZofYpOi+ZQGVBGA0
2wYC6IJcgNbZ/5GhTu2a7VusezXIt0FZBTQ9tMG1TwdEGKL9idHebpdrH5fl
KyDVZqC8ypVybQMFtAFoCOaEnxnonXVy7eFrniuB+32NmCtVIrZAldgGoR+C
iPqFId5lEWkPG/IK4HG/6HEt0BjoEy10F4LS5VdGebddn11szmXgcT/3uKxe
KqCsIIzPDqp+fmOg99il2bGUhUsgnXrY+THQZwzC3i/mfaXP3xntvXX67OBK
+wDIpF7x39dqXoqAOGMQPz4Q5x+M736LONsWU14K5lGPK1Q6nrJ9Eyg0qkct
JPs/GeqG3fEtbNAx8Llb9LlWaBMsR4DW0/SBQv9ioA/ZQWOLWdFb9RqaWZcn
lOqbQKEhiCcPVCY7jPZhiwJibNOLQBJ1gUhDcK1yFkTj+YQhPmpBjCwXKheA
NFr6nFuZ0yg0BMHu1nHuYbCP2b3fPAOvUhZNPD2QHr2KHK9lGgDHByCeXCBT
yj9s/3E7bWix7j6jgiOU63PrJkpjWQWFeNEyvrW8Dbb/hEUKIa749pqYkmnp
SUXoaBXIqqR1XyKapwRanMUH4V/6Dq6ZYfMYp1pe31GvNQqQgaXQG+UiMBZ1
uF5b1ybyA9iI1ANxhb4tTNH5jPSkXQE+NuqCCa0LJRpHJee33tsRF38oIVdO
Ozvi8s9LCsh4NasidUCNohgDxvtUkXe7xOtZ7DuvoAOuhL/FymuJ6O5Pt2cT
sai+rfb6j+UkdvCzRFzyKrW/7H0PpAOnTrAh23/GIlgP23ZAmFoGO2L15RRq
M8U7lqg3I3ZPyVsohLn6CaGOHkzEeD19erolPEmsLa1jTOMWJgKFGDHc5+p0
61rsOqfFcPhEIgbnS1AFuKluc8sTb0lc2g59SsCtaySwq4ADuasDTG5VycYM
8nm7ZBvYrG1F6RLl9Hgi1uT7OjPQgEQgFzYrgwp1D44o19LXJ+kZP1CkhVJF
HdhilC/YhergijpSlJ2cUm/jVUI0QkjPtriRo0qtDpYaitQnUnnIdrolKfGR
/ab+7DDITYs8HXxx4ussNXxa00mtpI9N8v7yI7SVCUmighAbHE86IVE3PhNh
fioGfSnXZshBJWbZjA0A6WpUcrzyu6P9qyGlLNdOOppxsGQY3YT+Fg1Ii0a2
6rRYNl4iTqcWOrHuK5ZAh0vuUs1ByswhJtS5R4barhiKxwctRegh5QlHWomK
9CR9VfN4iicLV82ynOadA69Q/9OtLL9MVGYgm5Ts0mYMr6vdZt7/LPP2LLOR
HNCLqu9MPZljVBiqwS9uyOfG6zrshOo9gN29obtLSr+zrCt53B3UnaO688j2
WqTy73hd35qmdllPPtl8VrF5VAbw9fF8oLIXObDpcfO97cx6wa5PHmoB8CFR
Bzn2JI+pyBiKB5FZvTM3kYxb8iM/80S+3wCcQLHsq39p764HRDI2FKN/0XAG
GlaTB2g4qTSsSEmtnHbubuLsTXDOc+pgeMO3wPCHu0mBb4OG/TpUPqh35MOg
7shO+cjSoOaMoXrsSFodquiLOO/COLLScAs0DPKGk0LDAdt/Vz4EsxpDDdm+
evjo/yf+Y0+IPf8AGhWMkw==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"ffb269e6-26bf-46e9-b1b9-6f7288bc992e"]
}, Open  ]],

Cell["\<\
What happens if we make the icosahedron group defined by the purple flag act \
on the cyan flag?\
\>", "Text",
 CellChangeTimes->{{3.9040802747507563`*^9, 3.9040803000931807`*^9}, {
  3.90408039661371*^9, 3.904080398217766*^9}, {3.9043149588525248`*^9, 
  3.904314959400218*^9}, {3.906234029198043*^9, 3.906234036765377*^9}, {
  3.9062340917877417`*^9, 
  3.906234091940359*^9}},ExpressionUUID->"80ba3911-c1e5-4149-99b4-\
1fb3afab322e"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 420351581175595674}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {-1.618033988749895, 0., 1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7460556342636802749}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {-1.618033988749895, 0., 1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1316281546424551213}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 623357041795903075}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3468066412801720327}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8459471120547084700}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7641694670733035105}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {1.618033988749895, 0., 1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8607231324698028704}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {0., 0., 
        1.618033988749895}, {1.618033988749895, 0., 1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2568694795067057462}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7571851764825890347}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8462906535400307977}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {0.8090169943749475, 
        0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2896157946636561598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-1., -1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1149066451730219260}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-1., -1.618033988749895, 0.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.8090169943749475, \
-0.5000000000000001, 1.3090169943749475`}, {-1., -1.618033988749895, 0.}, {0.,
         0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6211905407783063681}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.8090169943749475, \
-0.5000000000000001, 1.3090169943749475`}, {-1., -1.618033988749895, 0.}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3120662846305514463}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {-1.3090169943749477`, \
-0.8090169943749475, 0.5}, {0., -1., 1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8198562036599623606}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {-1.3090169943749477`, \
-0.8090169943749475, 0.5}, {0., -1., 1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 3}, {4, 1, 3}, {1, 2, 3}, {2, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3751608216710004625}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 3}, {4, 1, 3}, {1, 2, 3}, {2, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-1.3090169943749477`, -0.8090169943749475, 0.5}, {
        0., -1., 1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 404521774616938474}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-1.3090169943749477`, -0.8090169943749475, 0.5}, {
        0., -1., 1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {-0.8090169943749475, 
        0.5000000000000001, 1.3090169943749475`}, {-1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1009519277489317358}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 
        1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-1., 1.618033988749895, 0.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-1., 1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2436501847484452958}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-1., 1.618033988749895, 0.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2651402455135088318}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-1.3090169943749477`, 0.8090169943749475, 0.5}, {
        0., 1., 1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8813815808024269852}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-1.3090169943749477`, 0.8090169943749475, 0.5}, {
        0., 1., 1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {1, 4, 3}, {2, 1, 3}, {1, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5168867452232398442}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.618033988749895, 0., 1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {1, 4, 3}, {2, 1, 3}, {1, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-1.3090169943749477`, 0.8090169943749475, 
        0.5}, {0., 1., 1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3832097630556141576}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-1.3090169943749477`, 0.8090169943749475, 
        0.5}, {0., 1., 1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6532083971856197843}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5840233164701349315}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5247005690378611421}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {1.618033988749895, 0., 1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {
        1.3090169943749477`, -0.8090169943749475, 0.5}, {0., -1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6284136251924635382}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {
        1.3090169943749477`, -0.8090169943749475, 0.5}, {0., -1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 4}, {3, 1, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4875770135106460032}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        1.618033988749895, 0., 1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 4}, {3, 1, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {
        1.3090169943749477`, -0.8090169943749475, 0.5}, {0., -1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5888429470159960267}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {
        1.3090169943749477`, -0.8090169943749475, 0.5}, {0., -1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0.8090169943749475, 
        0.5000000000000001, 1.3090169943749475`}, {1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6300994082355674379}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {
        0.8090169943749475, 0.5000000000000001, 1.3090169943749475`}, {1., 
        1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {
        0.8090169943749475, 0.5000000000000001, 1.3090169943749475`}, {1., 
        1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4014492486876954652}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {
        0.8090169943749475, 0.5000000000000001, 1.3090169943749475`}, {1., 
        1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3437753843325576786}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {1.618033988749895, 0., 1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -2.1203373015704913`*^-17}, {
        1.3090169943749477`, 0.8090169943749475, 0.5}, {0., 1., 
        1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3625196758918447639}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -2.1203373015704913`*^-17}, {
        1.3090169943749477`, 0.8090169943749475, 0.5}, {0., 1., 
        1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {1.618033988749895, 0., 1.}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 4}, {1, 3, 4}, {2, 1, 4}, {1, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9207793552078464597}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {1.618033988749895, 0., 1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 4}, {1, 3, 4}, {2, 1, 4}, {1, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {1.3090169943749477`, 0.8090169943749475, 
        0.5}, {0., 1., 1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5494047263523231670}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {1.3090169943749477`, 0.8090169943749475, 
        0.5}, {0., 1., 1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 
        1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, 
        0.8090169943749475}, {
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4305608090684477404}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 
        1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, 
        0.8090169943749475}, {
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.5000000000000001, -1.3090169943749475`, 0.8090169943749475}, {
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3195443289770237957}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.5000000000000001, -1.3090169943749475`, 0.8090169943749475}, {
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
        1.618033988749895}, {0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, -1.618033988749895, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4305072354705730012}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
        1.618033988749895}, {0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, -1.618033988749895, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -2.008412319093264*^-16, \
-1.}, {-1.1102230246251565`*^-16, -1.618033988749895, \
-2.220446049250313*^-16}, {-2.220446049250313*^-16, -1., 1.618033988749895}, {
        0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3254093453939460039}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -2.008412319093264*^-16, \
-1.}, {-1.1102230246251565`*^-16, -1.618033988749895, \
-2.220446049250313*^-16}, {-2.220446049250313*^-16, -1., 1.618033988749895}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, -1.618033988749895, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5600222683453624539}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, -1.618033988749895, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        0., -1.}, {-1.1102230246251565`*^-16, -1.618033988749895, \
-2.220446049250313*^-16}, {-2.220446049250313*^-16, -1., 1.618033988749895}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1729545467142556857}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        0., -1.}, {-1.1102230246251565`*^-16, -1.618033988749895, \
-2.220446049250313*^-16}, {-2.220446049250313*^-16, -1., 1.618033988749895}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7540033528282192563}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 
        0.}, {-1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 879905063989124185}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 
        0.}, {-1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.008412319093264*^-16, 1., 
        1.618033988749895}, {-1.618033988749895, 2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1., -1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8973612512869896372}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.008412319093264*^-16, 1., 
        1.618033988749895}, {-1.618033988749895, 2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1., -1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {-1.3090169943749475`, \
-0.8090169943749475, -0.49999999999999994`}, {-1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2697349991833520600}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {-1.3090169943749475`, \
-0.8090169943749475, -0.49999999999999994`}, {-1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {-1.618033988749895, 
        2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1., -1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4015603054325646427}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-1.618033988749895, 2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1., -1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 
        1., -1.618033988749895}, {-1.3090169943749475`, -0.8090169943749475, \
-0.49999999999999994`}, {-1.618033988749895, 0., 1.0000000000000002`}, {0., 
        0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9003400103154708455}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-1.3090169943749475`, -0.8090169943749475, \
-0.49999999999999994`}, {-1.618033988749895, 0., 1.0000000000000002`}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {-0.5000000000000001,
         1.3090169943749475`, 0.8090169943749475}, {1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3313244971348586799}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 
        1.618033988749895}, {-0.5000000000000001, 1.3090169943749475`, 
        0.8090169943749475}, {1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.5000000000000001, 
        1.3090169943749475`, 0.8090169943749475}, {1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9180818272666218759}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.5000000000000001, 
        1.3090169943749475`, 0.8090169943749475}, {1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
        1.618033988749895}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, 1.618033988749895, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7840443365400027139}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
        1.618033988749895}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, 1.618033988749895, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        2.008412319093264*^-16, -1.}, {-1.1102230246251565`*^-16, 
        1.618033988749895, -2.220446049250313*^-16}, {-2.220446049250313*^-16,
         1., 1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4794162709969420054}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        2.008412319093264*^-16, -1.}, {-1.1102230246251565`*^-16, 
        1.618033988749895, -2.220446049250313*^-16}, {-2.220446049250313*^-16,
         1., 1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, 1.618033988749895, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2188713486611380956}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-1.0000000000000002`, 1.618033988749895, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        0., -1.}, {-1.1102230246251565`*^-16, 
        1.618033988749895, -2.220446049250313*^-16}, {-2.220446049250313*^-16,
         1., 1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3200711143020866805}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        0., -1.}, {-1.1102230246251565`*^-16, 
        1.618033988749895, -2.220446049250313*^-16}, {-2.220446049250313*^-16,
         1., 1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 429362920082679801}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {-1.3090169943749475`,
         0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3291398644253388057}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        0.}, {-1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.008412319093264*^-16, -1., 
        1.618033988749895}, {-1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 2}, {4, 1, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7431680165280545050}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.008412319093264*^-16, -1., 
        1.618033988749895}, {-1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 2}, {4, 1, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4978054350177785478}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-1.618033988749895, \
-2.220446049250313*^-16, 1.1102230246251565`*^-16}, {-1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 248018247197206603}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-1.618033988749895, \
-2.220446049250313*^-16, 1.1102230246251565`*^-16}, {-1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7789434710682356855}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 271810456825638236}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 0.}, {
        1.3090169943749475`, -0.8090169943749475, 0.5000000000000001}, {
        1.618033988749895, 1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 379053417257361401}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 0.}, {
        1.3090169943749475`, -0.8090169943749475, 0.5000000000000001}, {
        1.618033988749895, 1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.008412319093264*^-16, 1., 1.618033988749895}, {
        1.618033988749895, 2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1., -1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 4}, {1, 2, 4}, {3, 1, 4}, {1, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5973854691559227348}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.008412319093264*^-16, 1., 
        1.618033988749895}, {1.618033988749895, 2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1., -1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 4}, {1, 2, 4}, {3, 1, 4}, {1, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.618033988749895, 0., 1.0000000000000002`}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2658834724802102303}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.618033988749895, 0., 1.0000000000000002`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {1.618033988749895, 
        2.220446049250313*^-16, 1.1102230246251565`*^-16}, {
        1., -1.618033988749895, 2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3774041841571621155}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {1.618033988749895,
         2.220446049250313*^-16, 1.1102230246251565`*^-16}, {
        1., -1.618033988749895, 2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.618033988749895, 0., 1.0000000000000002`}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1468213504061700494}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.618033988749895, 0., 1.0000000000000002`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6595296107993394800}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {1.3090169943749475`,
         0.8090169943749475, 0.5000000000000001}, {
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6574460757238379803}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {
        1.3090169943749475`, 0.8090169943749475, 0.5000000000000001}, {
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.008412319093264*^-16, -1., 1.618033988749895}, {
        1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 4}, {2, 1, 4}, {1, 3, 4}, {3, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4862904123523595989}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.008412319093264*^-16, -1., 
        1.618033988749895}, {1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 4}, {2, 1, 4}, {1, 3, 4}, {3, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4569499705695805105}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {1.618033988749895, 0., 
        1.0000000000000002`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9077297685820608459}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1., 1.618033988749895, 
        2.220446049250313*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        1.3090169943749475`, 0.8090169943749475, -0.49999999999999994`}, {
        1.618033988749895, 0., 1.0000000000000002`}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1337450989230267709}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        1.3090169943749475`, 0.8090169943749475, -0.49999999999999994`}, {
        1.618033988749895, 0., 1.0000000000000002`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {
        0., -1.618033988749895, 0.}, {0., -1., -1.618033988749895}, {0., 0., 
        0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8197882475630592649}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {
        0., -1.618033988749895, 0.}, {0., -1., -1.618033988749895}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        0., -1.618033988749895, 0.}, {0., -1., -1.618033988749895}, {0., 0., 
        0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6992133881081311599}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0., -1.618033988749895, 0.}, {0., -1., -1.618033988749895}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {1., -1.618033988749895, 1.1102230246251565`*^-16}, {0.,
         0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 189845250148823529}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {1., -1.618033988749895, 1.1102230246251565`*^-16}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, \
{-1., -1.618033988749895, 1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7404686027943281529}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, \
{-1., -1.618033988749895, 1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 
        1., -1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {1., -1.618033988749895, 1.1102230246251565`*^-16}, {0.,
         0., 0.}}, {
         Polygon[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8328763024654030194}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {1., -1.618033988749895, 1.1102230246251565`*^-16}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
        0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, {-1., \
-1.618033988749895, 1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1802159815027727529}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, {-1., \
-1.618033988749895, 1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {0., -1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4851785052064196900}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {0., -1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        0.}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {0., -1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2163685047034346439}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        0.}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {0., -1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {-0.5, -1.3090169943749477`, \
-0.8090169943749475}, {-1.618033988749895, 0., -1.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8902199276733519525}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {-0.5, -1.3090169943749477`, \
-0.8090169943749475}, {-1.618033988749895, 0., -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {-0.8090169943749475, \
-0.49999999999999994`, -1.3090169943749475`}, {-1., -1.618033988749895, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7539840853354326431}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {-0.8090169943749475, \
-0.49999999999999994`, -1.3090169943749475`}, {-1., -1.618033988749895, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {-0.5, \
-1.3090169943749477`, -0.8090169943749475}, {-1.618033988749895, 0., -1.}, {
        0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 381291481765981320}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {-0.5, \
-1.3090169943749477`, -0.8090169943749475}, {-1.618033988749895, 0., -1.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, \
{-0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {-1., \
-1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1466619462976435528}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, \
{-0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {-1., \
-1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0., 
        1.618033988749895, 0.}, {0., 1., -1.618033988749895}, {0., 0., 0.}}, {
        
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 310934859868365207}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {0., 
        1.618033988749895, 0.}, {0., 1., -1.618033988749895}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0., 
        1.618033988749895, 0.}, {0., 1., -1.618033988749895}, {0., 0., 0.}}, {
        
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6603261231768466938}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {0., 
        1.618033988749895, 0.}, {0., 1., -1.618033988749895}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6732980923253636089}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6070633242214792252}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3227501520750973984}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {0.5000000000000001,
         1.3090169943749475`, -0.8090169943749475}, {-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7948681522285545506}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        0.5000000000000001, 1.3090169943749475`, -0.8090169943749475}, {-1., 
        1.618033988749895, 1.1102230246251565`*^-16}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4009709719170904580}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6069679401381633698}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7643591573437647441}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5444589381112074160}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5608978998621299623}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3004194222600579061}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0., -1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7972111760712487667}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0., -1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0., -1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3846695394060800972}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0., -1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {
        0.5, -1.3090169943749477`, -0.8090169943749475}, {1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8034527118913210345}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {
        0.5, -1.3090169943749477`, -0.8090169943749475}, {1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {
        0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7826380800221511662}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {
        0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0.5, -1.3090169943749477`, -0.8090169943749475}, {1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5076631431844438824}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0.5, -1.3090169943749477`, -0.8090169943749475}, {1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5278282836657021484}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        1., -1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5238196088520546653}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1.3090169943749475`,
         0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6233701305431983529}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        1.3090169943749475`, 0.8090169943749475, -0.5000000000000001}, {0., 
        1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {0.5, 1.3090169943749477`, -0.8090169943749475}, {
        1.618033988749895, 0., -1.}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 746924675883285888}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {0.5, 1.3090169943749477`, -0.8090169943749475}, {
        1.618033988749895, 0., -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -3.4307778215552914`*^-17}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {1., 
        1.618033988749895, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8899605049854533532}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -3.4307778215552914`*^-17}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {1., 
        1.618033988749895, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.5, 
        1.3090169943749477`, -0.8090169943749475}, {1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7057358054809322075}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.5, 
        1.3090169943749477`, -0.8090169943749475}, {1.618033988749895, 
        0., -1.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1595181173100240870}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {1., 1.618033988749895, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-0.8090169943749475, -0.5000000000000001, \
-1.3090169943749475`}, {1.1102230246251565`*^-16, 1., -1.618033988749895}, {
        0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4819608148491046652}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-0.8090169943749475, -0.5000000000000001, \
-1.3090169943749475`}, {1.1102230246251565`*^-16, 1., -1.618033988749895}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, {
        1.1102230246251565`*^-16, 1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2308866527187747411}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, {
        1.1102230246251565`*^-16, 1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6443430331170068153}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -2.008412319093264*^-16}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 
        0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8749215267698872797}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -2.008412319093264*^-16}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3977278505833450892}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        0.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 
        0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1469472423894814159}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, \
{-1.1102230246251565`*^-16, 1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 194295211147482696}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, \
{-1.1102230246251565`*^-16, 1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, \
{-1.1102230246251565`*^-16, 1., -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1620329188604261978}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, \
{-1.1102230246251565`*^-16, 1., -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4697707880784957154}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-2.008412319093264*^-16}, {-2.220446049250313*^-16, \
-1.1102230246251565`*^-16, -1.618033988749895}, {
        1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 348728639094345312}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.008412319093264*^-16}, {-2.220446049250313*^-16, \
-1.1102230246251565`*^-16, -1.618033988749895}, {
        1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6097182574555611023}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {
        0., -1.0000000000000002`, -1.618033988749895}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        0.}, {-2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1355139278383310678}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        0.}, {-2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {1.618033988749895, -2.220446049250313*^-16, -1.}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}},
  Boxed->False,
  ImageSize->{337.2060433142105, 357.2340349266566},
  ImageSizeRaw->Automatic,
  SphericalRegion->True,
  ViewAngle->0.34178344104084896`,
  ViewPoint->{1.385889895366996, -0.2438180330669102, -3.077314082876663},
  ViewVertical->{
   0.476215549413211, -0.7966089412870884, -0.372334453359527}]], "Input",Imag\
eCache->GraphicsData["CompressedBitmap", "\<\
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
aAgNYXn33s8R91xz4W2cK/yVU2PNtFw3U9C/k7RK2EJFfoPLKfjCVppBreSW
j6JW8qeMwNdGBKY2t3K+Dk6R0m1WErZZAOGNG5uMFDeV+3IjYSbDZ1Yjp5u4
nf4rhFSFGtKKQsOs2gkD0G8P59d/JJzUhIic3A583igj6PI9qyEf8FdPE/6K
yRCEM/LaylsARvvev8PQ1lK2lWUyHd4C92l3RA9mfn57Fen2kj+J9aAyfKxh
RoFZg5rM9ivnCL9ytnA+WyLcCX2hwZ4HvWVMYxFcd46ouvE8mhE4sxo3eQM3
3P+VQHej4RS5InE4fJzMOKBnO3QW/kV1odGuggMaQuhdjWZx6UThL4O/b55P
jZXCVoNTQX29+wbQCQbGkYN1u73yvPBebmG2Ww515o7oTiBzDu3QbafaKyY5
4hnILJ9p3HSWt22eCDZCm+5agNyCBuTGs8zGEylsK2Fh42HbUfvVPlW+0pCb
0ivYlDVVFUY1pYpX1CF7iYnCu+8BjtHnW0L/rhPOno+kDC0MWW/DbApZeA7a
E8CkZTgWhvqXeNDcslo1qTsHOuC11tykFu2zzubpFLpJTcqQS9FDeO+l1JgY
uxTHJvFke7o74TkpR1Dyv9Ge1eU413BT/q+E8ZSbskSNDqop0XfokB45Sbgd
u8owvgpPChoSGb1WYEuqTYW1DyqNtyfJs2ljCmtsT5vbM2j6oEagbM+Ms7lc
Dxhme6Zi0U2KXZoX3d6mOYKbtCY3qWpOkmhp2KS22aTYZNSqCWl0WUSW9bkt
/8+EISTWliYeMcr9t8Ddt33FiOyheNLcliBLsy0x0tGjICLhNdiWNmmyfDBz
772hcJKF2rAIwxzbUSEyokvZgHIAzqrQV7GOv+tYNxsStaljvfapGrKkmrTp
Sm5DN6ENi7klzeFFhbbXd5gI/nGfDmfkzTqJxmgw29xgKDpvODtcZ+ta1WB+
p+eFO/tdbjBbNdg04iK99ND2sMFmjQkbzKIGS8djGBsLZBttKB3EZ2BD4bDc
V2BrUYtJK4Ptgu1D0Zw7lSm+jBvtfyaMySVhXmXykJKHuxrrwM2ouF2TF7fe
ulncdKy1tLv2A9Ka1w6sTeunKGZV+3nD+ghvaHez/WwlOO+ZhwiEKWxEaGps
QgxOCFQOYBZd2oxab+Mcilxuw1oJUXv2H2zDTDV51yXcfP+ZMJzI5osPJ27H
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
qZ44kT6HXpwTbBJsbRfFuGgqZenj+H780KPpGYunn7z+yM5+0fSNppcBdpad
+aRdxiFlpzm9E3Qy8Gwf09bFy1w1MSmjaS9ph38pN8DjcWnWs03wWbbaR6Xl
P2Xksp+o0kE6SiZcZ+WyhpmGlcf2dNmvOaFVNeZbIOYfBxpZA8aQin3LmJbi
uRVTKS2I2b9MfoQdOdCSTrI+JO8L6H2bL6MH6/FFs8brF1pavoQHEXQ9OBBf
eemIBA2Wd+rmsrSe9HHMAak58HQUcKpniAdtrSq+8L8FpznBaXT5hQlO8wlO
DUqD4Cj9IuGUHuas+KBMXP4AU5s/wGJUEJT80zt4T4EjQMFhjr8QlaAqBggr
dD3EDU6ga2nDcqZrfPvVKnrlMRXd9isV3X09XWu/44bRD3YlG0Efp7/13hZl
VwR0C6S56l345XrTuHmeaeZIYCvNHCw0mbH47gplFCeyXVuRuPsRu2aXn1WR
6IJN1wnW7qS/vU3PTsKAzOxbylIznPKIpGyb9JZlPZg+t1az1sOXRa00tcpk
4J7CRx/EjfvWUNLawaz1jMLcohXmgM5v80zb05i2f/dFFXY1ZNC2Tzt70scR
Yo/4eZSkzpzEe2KGO7ApjmBWI9YAtgKzHh99xizmlx/uYqQyTdHpRe8FIZXH
rkaGKt7tBpbZuKaWyNgKgUE6lJk6OuibCzium0nZzcuUxbyswrXTBa85kJXE
wrOoDk+4QcVf/lsVn/8V2eD4ih+oaOz17Lqwa0jExeeIaMDOIJDaSP/rTnry
23l6AXBbA9yGS6YpSNUQm18/9QD/bPTwOK5cZJHWzyhc+OULrg+m7MKKxdg3
DThrJotYPd1WNdAKYmaIr+vQy1uskGpKd5uKH7xb5h1xTk6vyXqISU6e5SGm
CqxVuPuPGTn5x6twVy81OBJ3kZ27vBXZerp5yMXxB1uXS71Dcxf8ZSmKyUuD
pFbpmoqIzwzfnsXKSFdWtITeYAvdbq6nt5bVO6HXUPeha1XpvqsUbumxmY/q
l86nw05eABjHGpw2/3sSuxNDZTCWZa2yInuYLfRRLm9hPMcXX6BQTAGW6buM
ZLiT0eBaxnEQHKFfFST//k27jkSCZB+73Jo8H1j2QWVoWjiVW2QQkD2QWekO
sc08lGzGXYh2dpOyoYjWv0KKKkf7dFEl2VjqnUEeuNCxCcNxJMuV5ZWcngha
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
nrtaQASCLgZ4WI/F7o/MewAmKqwT9MAtyq+C9TOS5zT487HzGX39bALCjKfh
vDyHE8koBl0thmKQXlGnP0jAkHdLABYSjUPh7/AK4nqpE3Y+Td9ei4qwVM0a
4iqA5oToBL2CwELCVI6rJzIg/EpeuwZU5PBxMIGylvt+r6J7fq+CEc8o8Y64
dkxfoE0j/KWoHGMRwUXRYMTC1hZ6UzDduBQNONZhPWIKGrLmNkYDkECR9CXT
wHJkt1DBIUNGgwFAMGDA/auHSsFg7s/BYTq3D8/8VYqLrx2Q4w36FsKF/yqs
KIbBuR3sQhEgXt9Bx3b6/x0gxk5cNg4j/MNb4sVqN1+vomce0ioi629ZxE1G
4eh7mQ7diorJq3mn6tXYf2kFb0mE3UCXDeSDPpPbhudUuPgJOgOewrPCbc6v
o8towh3sNYW3Xacwo4b+76K0qAAtuO80A1hQKDm3W4Xn2pX/0XHdfEq/7MPD
xcKCI3mwhq75vx9Wmh0eRIbdSbJ7scnEBbwYHMXlZHzh7muv5nsoiDsT4EgY
TK6mSDaffs6Oq9b1BNuAyrpiiS0dhzUv6r6iOtEVu8zH0oialS2Bd9fa3cy0
0WRGUxhSZHUxWZtNccHYfF6T3AnBuEx4vEPvlLBvoQofvdmKCqWbULEqMxzx
iFAjy7dlfku1rIX8yXWy9P7vrzIx/I/p409eM8uMYTJZSHjFkOiikJwzMmJr
LCPSIPFFvi0kILGHXm7seqELx0qWHncDITpXj1HBAYpEJ6pUsGyoVMWP0ctx
UioDQc3zrB/o5f6Ah82fX2Z1BH2G2/Jw9jDVee+NTAr/3TVEkj9ZWoR336GC
8WyuCCacMoFgAhGnPmkpybLhuF6weVFqX6ldYxBPo3PqBYk+oiUD8b9QD2V+
XX9loUGP+HXPU/J0I2XTBIs52OpqPgyhubzwawaRYK7AAvciKAoMDAOK+dJI
Gva7RUCRAygKXCcokwXD+lhCgWKJ4CEaQiF6JrLORtgXDcIDXTFuYvXWtEAM
Je4p8thakplFS2ZZNPB9FQZeV2MgRjVaoYKJz4vL9MzDLBa4PYoHiYuIgPM0
wqgI3tfMLC3OJIvH4VO9DSpysYpotbigv24Tn4OWF/VaTlRx92kuxWfKaWSg
VkuUwIGXw/MPtUM3HieBcIyABNEAZLjiwTDizP74HmzAx8wI+vzsXn7G+/AT
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
gSvPq5pZDfCB4I77fdtMlaHMqoKl1dLLxGZSpTLR3dN9sXCQtApA4F7OZYQl
Wgk0cJDPsgrI+2trHRWg25MophcLAMR0Tvu9WABcCu/IzoY/7Cz+48QfvlmH
hHWEd1wd25ZK0t/CK6wQ18s5niNQYYuZjZT0b6JjA6neatSdx5vNn7dB/VNs
90w94aU4tOdFACC0h/f9hn7aHPops2wV+vk7Vef0x1XQOJh3Fy9J9s3Brc8S
3Jf2j5P9bjq4L30uYRYVdHA/XlIs4GWN3Ot7jM02ivKqEG5qimM9JiG9Si8q
0kvEfKe5FbNdw7e5gF8a83PpLpGEfT6HObTrIxM2oCgULJvFmo6DYw8O7bnz
Lz6hbHi/rLv8368S8T3NEjLr82xFWQd2L7aEEN/99tUpva6ySs8pH5gYf5HS
co1O+T1dS+6o1ipiso3zcW/RO8k4/zEOifNZRHjKFd46osLzR/X2HVIQoJ9P
H6nPSYp/WhcIzsVWEMf/0/z1EWYS6xRfAnyR8bNZ15A/lzKtqoeT2B9YKUm8
BPdyTuJXz7AL7ZDER4/caE0enVvFRQET2bNOZMd897fWsX29mm44siOFD2bT
lbK7hUc4dNdL77ghcJNYPfQWZhDa1Rf9nXR1YoA7D9GdRx/P4uCOxN7cI8gj
2Pvb6LFt4yXYt+N+FJ0JFPD3ExCOUcA/NdO6RRzt0Zw3U8f8WXx0/v4HFONl
uV7n1/6NnpYT0kc6IZ07h3II4wUdxatM/6nN2hPWju0jGk80qjNjpuj7Gubb
1iGJ5tnY/zcRnV6N13gA3Vm66I4f1NF8D4I5Nq84hJsDGOdH0ZyiF/DdLu6/
377OVgJwj3Ix7B1dDcj7e9slqJvWov2SuUvWnnXdHvSoZrg6EPcXWWdnhY7p
HmftnmTqkrnLZx6n6hQVkaZPT6TqsuiYInjGxnIJ5iZV12Xj7onQbkrFJqwf
bhNPZy+F9O2Uy7VgXO/mGh3Su/E8s42L9SEhPXxlKoXzCeLxbK2V4sA21hUm
qrODQ5yagF+/Zjzv3cEh8eGbJC1/4UEepIsaMYJ555SHSVUNpL9tuDj/OcRx
yc9zPNawQXb14Im6FNKx65P1bSbcaVctOL6Nx+vV0QtwwnQJcbJe4CieY61y
aDulYsslmrcyWimW06mAaP7OXuv9c/foTyhF+Nsp1Xm2ncdJ2Kj+UUlUTy6S
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
u+n92tMqioMo4gEfshQhy7Mtm6u5Goyv9xyLydJjm1MYthDhh1yr6cknCCKr
8fy12GgWePDE2QYNj+6uy8SH6R5aSYGl6SVrNAWjepNAvaakCtzRUSQ5cB27
ckRXiffCNt8vHbYoAm+q0zz5kr9mAcV9OpnW0MuOjyk19ptn6D7X+D6aPpiu
DPqcKMJf496DKWvmaK4IW5gpy0fL0FmPQeKFs59WnSPvZ5AgZGKBYXQlvY1X
/Ls9DXho7Y3XqmjcPQyTaNYTMmoMdYba5zH/pB+LTxnghC2c0LhcQpGsYQkh
cPZ9sSn1+MPKP4jxIqXkkJpCmUsOdqW2U0jdTtnp2mqmh4ZHdN01Kuz9iJQp
zu5niFg90tPCg+cy5VN8pzRk5A0yesXIeODX6qN+t6uP7vxvWzL+jSDjx136
T3aR2uttf7ZlYwkxokE800nkrGfO2x0AXRtqO84U7E7umUEaWoFYNyprFh0Y
80kLDgMMLhUzNei1eJc/NILjdbabLD3ADHWZPHROk0PPyGDhcUYjwbhNGhHW
nTpnnSldTC4zAiUcLINkw1qSArMXqmDlBtK8M9QXUoYqlTnm0y6hBv4kZGAE
D5KabclhfqaILI7UWHGkBvzJOlJGelyMH+ex/Fr4odnh8kNUx2Y59mPGTSk/
zDr1jrXF/Oju714l/Ac7WIZohsA72EKXd8tMXXYWaGSZI2XMDwgS+owr0UWC
JIMP0DQ4RqysbXSxbx7GugQowlaDrMCmPkksIUqdoCBxiu2js5ibcg5Th8Kn
b9KdSF8hmPyU3vzYkjKs8Mz6tSEJVoSjR9i6srAiA0wIIfLoGUoQQtcdPMAh
z/oiG7TvUNHGdZQa4p2H7NjHwXUfovwukRrQeu3c+LCbR+q3J/2oYMUy7Udl
AAlRHB7zQnPC1pj3tyoXFPgc05jYpRo9XIuNgp1KzqxochqHeBWAsanoC2FK
MSWwo4mQIrzzV5T8PWLkRdbiQeNAChP/xkRopaewTR+r6HespNC/ikJ581z5
GPf/j7U3D4+rutK991OnqiTZJpCkO93pgdyQhE4gdHfS6Qydzg0ZmUkIk5kn
Y4OxGcxkG2M82/KMZ02WhG3NM5I8j7TNYGzAcA2EGbq/m+Sm73f+OM93/jh/
6Fvvu/Y+Q6lE7r3f5+fZVa6SVCrVOef3rvWutfduxc7zcsF3yuPtgv721SpK
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
PGOKCZbLB1WzirZ3dMe1uvGGrp8gKEbHfBJK877BwnjrOhtVywHfvikJogHl
djk5apbqcm2b5qtRAhgDvNvRCdviWjELMZixFXODUhhMdsysTMJny+LG+1Ke
9r0Wv1VpJAePXlnW5nYsbpg+FovTcbROo+IKO7BLXP88Gf/INP0galfpCuEC
D8FvuPJJY+G7heugC4IxhTmYdZ8ZOe/riuILEsuE0bN/cj/ZG7RucgugITZ2
9UhzVYa3Gdfjz7Jzm1xBMjE80CDWY6K/P8/A5UizNgfYyocgqI1OnzSkbaEM
cxkzV4C5+TKQPSPledgYGa/8Ol2dU6VxclU2Th6KwZr4HM6aVvrmY6ejt4uM
zSFGLpKzRXDW72vncKFyuLkmtqa7WpPGQ8+aHKw2zjTBGjuHMIPYon9KguPX
dqWGvKVXsYlyEiSnnenXaKYIaMdm7GdGMfaF9XZlfnm3t/6sfKA8WGud6opP
6zy0uK3yh+W5/mq7ijN2XF6mrocgN7rrMhPdcxVPhJix2X5DAap8v4DWDYbM
6nUU/N2rLbrle3olDe5jS6Ow9kyytkpZm0TH8DbA2vD+STFr5cU+4tLH7w0T
tm6E915rRq6WXGXzBjOyaa2J2hpMiNX53+UCBiCucFeUEDs7fCyny8f9pK4L
kUHdYPFc61IX49lJhZSRkS4zwprm7RDOqk4dOIt6dxgNfhn7pl1pbOyyjROD
NfhtlL926wIT3nKFCSffZnTaZIGy3tskETMO4DryVr4mxJU/o63aBPUIzYQB
X/pLyexFWB+6Vxcl27CYzIUZnQN0lblF9puTtXZs3UDeqmfxmTgexm44wC58
aWC3GVm9Llngb8E7FbTWzFE/ug3GSYxdz98+RwPehgeNkjYXM9djAOz5TQ/q
XseJN+EBuI60eMTNL+WxI27GnpZTwXjW9aiZatLAzY0Z+1agnRBlRq5mAN/i
sl/YBafddgymMDL/YYI2HgJaeTVBrYD4rhtMOOmmFGw9f383QI6NPLBL4ZGB
eHGBdGXQgva/ljEiUoGtKwyG2LSyhyUNBLaFAI0+F/x9BrJgpqAWgM1/KluB
S4lnf2ex+rkSrP6eWP09sSpwDWdMTmN1fAar/Tszxb9SDyLxkeW53m5dmLUH
K8cTr33oy6L7EFWvMtHs+SaoZd0MTK3y+3bExgObN5c/Ykau+QVNY5gO4eQb
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
Lonn/9clyr/vj8p7/WH69oBHTPBAAuaNQXXgPontX7pb8camGSCfCEh3xdQZ
Ta+8keFeqJumQ6qlCtE8RMDVxN9KbzV4j9HZor4Yx/KmzcXgPq2OmvB1/mDh
PiNCce7eW1RbexObOm0bahRg/9mw3qrwH19RIHy+O9inmDl2EF+uq6kf71TB
LgpQMHt3X1MS+rkuoZ9FFamwBE3letbv+ikMwbfwnBr2acBPEH/Bhe2d2gYb
9nE1tV7WGU9YPHfcSf9VnawyS6+oaj4P+i+quKxbvSBy6HlU84oT8ybj54n3
JYF+tQV+mezj+EP7Efi/o7zFMwz46Tgtgj6+YuAvN+0xdqF1fFGhVewex7j0
qKTqUL+Hv033JM6YqJcd7VT+2joV/vUF7ksM+z0rM3cWTuNOOl6EF/jfujRK
QF1GfhkyAMY9/b/ebopZ9xBn962VTrpDq1L9nryh/loJ/U9IOsC1QmxWpDsT
vT0L2HyP3RsXd+2emBxD/uILGTjFAhCVWI/v1iF6Kc4/l4HDaQF2uY7Rrue4
twOVFM9zV6EZB9YJ5rGu1KEY9Xx7CutMHWMbHXt1bSESTHpJL802X1D/yQE8
9b94zs4/dwjuDeo/5rlVYH05Lrhwy/uyyO+HbXL7Af35D9ZTeDlHhRT6q0zw
Ms6H8Jc/lQBPD7hFdEmSFNCZM224xPHbsIuV18mz2Jj6wFETt89kWDDKEyKA
csH6GRLyY8rE8jFJu2fxEK7eshJ8qRslCOoGaiWYaSuBy0pQ/nmUoFgGbJ8n
kgHL6dcuj2ucHePwW7F/8Pa9HPuH//09FfzqR3gCTK8S/I98UgZmOSD2f/D3
UZsj8b/wyyvo/f0h2/aYBWYUgKlPoX7YMou1F2tReR0tMfo1/u1wv5j/aQVZ
eDnXFvFfZsz32Kw/7s++/+2EBOyfP5IlIBj8pPrspl+o8EffV59bB7JmItH+
Yh1woQO46IO/V7MWZCAGdIbZcpAVOfA7l0iJdrssbMI/h6YCwiFWc9Iy0MuW
gTQp4GlFMwnUkIL51aanJr0sq7XALWqA1DLAPs/ooclJ93UNUU6A/EGWKqyN
daGcjw78HtYDUQI5olirNSHSg4XTddMNs59VwR/SXz7oRbNZE7wl02Nd0EmA
TgS60YXiaq6jdWH4g5H1r3XBDehFMPexDBXpQgbCAEB2yMPL6X85uoZu57NE
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
RjgsLTFuFX1vM58iRkzEwSUZgZjMUcGDN4mQnKIr69RhXp1bLKxyqZagSkKv
4B+7BOwfmI1317Jg4DPEvHj/cKsKkbOZtKNxlPGrOrQ4aAHpLBWQj9jE+rBd
V0K8D7dIXcQ8ZtVFdMrhROpxhverJf0Q6cjytEgr3/B2smO7Yypx12gG/ecQ
kg3jRFA6Jio86s/oK+kIoQ7VA60ouqrh8mKMd8eJSSbOTIy/RY/R8eJuFaV4
YjcWVShSE8vTMkriv5JcbU+UpFfkZ82QionxsTj1wDV91y9IQb7HClJUIcmL
XzmVFaRYRdJkxP/bApKPqaUystXyripsGTkoiciJLZyI2NX14okaCQPr97aM
OCYTCX52mdIdVu6nbzykoCEYwW++p7XECX7+LfXZrVfyUJlzb2Kj6uCbl6rg
npt4BgGgVCIubkoRJS1P0VsReOe3xuLCG4WzxUVHPcGPhcXlY0+vY4GQZTOp
z6ZZlOnPVOGPv6OCZx5QwaAXFFYsi7IWkpcsdIXOtHFPRcqCkfFmvIjM+Mar
SVhIVEa/FYkKvreAKxfV2uNiL4EkhZt4k9ZWMGtOVJCPrK0+CWsro1fBbqCA
oIqfGAUTLSBoBJ+kJYRzFSMbaPBl3agjzWicJbrh8NE11RCjG2mSIftxuf4I
ukB+8J9aMnbRw7FxxVOzeXNkLRmHSiWjgiUjGzTOVuGo4dHmqlZLruMdWxlp
Bq6/5XiFBA+kKNyq+/501OA5Et1MkrGlgeWCHtvEUoHF9bEJCqQCH+wm+mA3
0j+9YbYKHr4pKRfYJugc719IooH+1qVaPtCvhXmBUJBeMidwdTzV44RWFLMW
1Om1JVaV9qpSchRp242kZEu7SEnPLqXEsaVEeqwQfi+PHCq8EQ0QA+jH+ipO
PkwS4k/Q07ChG6e48+oUb12HLIRL7kW3HyI72UuDMwbKFbA8YYe1m/sayUTO
Yyog1KW8QO+wv7/ZsrKgG236tiMqgBiRcbyPt2rfqt0ISNZkI5G4kKDoKkgZ
t3qxmOh8DpWQk/T/H6Zr+XCDLoi43t4FCUlxoChZnZnQ3SgzcfVjbRPjx7L6
aARn4zgWHAiPZDKkjXhsFz22aTwRuK/QmjIb3JrO4kh03Kigok2wHnEh/2K/
rqsk5h02vyK5+dPVpXLjxImLvV2kyE0+TW78d+9nl4uk8xqs1pCQmowuxn/r
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
0H0p3EEXi6sHbaiKPFIeUsWkJqhncJNvaXLrpTPob03hczzGKfhkT5fwafyN
udtUqCX6y7PpP9VqgH0Kp3OsDVmZfD1S+WPuVJCI8MIvWes/uOnSWOLYzE4o
g4JQb1UyWHR1Eaa9Y9Ste3ujGTnNawD7yyZFUpJmKUl7jQtZSvy1GGwMe0ll
IScQE4wLMnKi079ZV0rQpAMDEYGhdCAaGxQlAkyNDicRUJQFNiaT9v+vjwTE
+P8qzQJScnLENerkiF/GBATyoV8IzKWcay5JO8zGUiqh9EZKq4izDpJKGRVx
Er3UaThLz4luw5ACWXHLf/l38j9nvLGwuoyaSK8hqe8Qs5jSRlGgJEA3ipQH
c+bbRC/OQUrYV7r2Fyq46Vdcg4kX+oDtT6rBrWIR7+l5F8wXo6kM+sHSQf/N
PIz/Edcef1ikGiUJqiGp33L/WT3VAhXPj1Jn4fgh7hj4WzeKf9SOZQyOQkhE
MQ4roxqgiygGxjX2xgppJKmFdBZSUIsMZII4sx0LIVMU8uYUFVRO5W6DP/0F
9vWlq0Dv/f1+lW9cKxN4oRkp3KJP6e97RDU+3CfmEsrUkVJkWTSyuGm6EMFv
b6IYc05cLDq0WKSMZERigXMLtIzI+QX6EehtL9GGFPeRIRk5KxmOy4SuQtrJ
FXRudvK1GMPUIzKB3sG2Gnq9UV5AG0j0FUcWkkkBc3/gzII88N+5jsX7Esy3
6AyJtAyLQ47FYfubKuhbyraR8f1lHaOM0QazN8OBcOoEad6JZiMNOdz23tKS
cHiD3iMtgGzvud7elaISfYsi4kMJ4BttmxnRHucQxuMxHRPpfvziUL5hrCb9
FLm9jX6NLeOE9OtGym0sbNc2XtY6ahgt62ED4o2v6P1oLhXO96FkeI7xzhE/
Q3sNFxdfg9nJdJjBrZyuO+7U+VO8EAafkrsZ7Otc8D8TY76tVj5Sn86xDODU
2qeJJberANOPv/EFXa+2PPjV95Q/8iblP3tjjPj5L39W5a+6WDK9x1AIyygA
oZ6LQb5FVxPdss0cQxoIdSkZ1naE6/ZrWYAgcGtkX5pEQZWihwFRMNngQllg
VUi7xWEP2paJpxlMZ0IrgJsKdm0jrQA3iAKMKVaAcqQaClUg/7kh1i4y9E+Z
bsOhWLfBuETOmkdx4Efdhs8w8CkOmy2r7DZQ0FJNPdF1dDmtgpe36jnz6yX6
iwIk6EDmEz2kjDdnUcxDSosUcKdiAn3Uc4TYkAL/lVetbYQMMNsYixZZKdBp
hgyEwJs/T9pszACYNU1EgZ7j8T+7w36K9aCctzlXD4Ibr7U6kIIQIPN3SIUT
xlKH4UmSARSIsDpQwjrwrk4lsHHkaECp1gD0GoxxZDQgxV2GNI8E5QWGqngu
oKsGXL+bmv/XOSr/+7siNVgF42i3VoJdrAqiBtKZyPIdBZIgnYgU5ABZzmbt
qrcoZB/C79Ezf/Mc5U/EMr0sDlkIBZeRh7/UIQIgIlGkCvMjVXCVIht1MtJu
J0O7TaUsFwf0cKIjrbZbYXLKJvDH5AQU6dtZb6pfxPVhULFxZHLI6nMsEVmW
iPd6ufOAfDF/DGkIA70MpxOBJh2HDuX/dxWnF1J6fJCjDSIJ6jSZldwuxUtg
BR6updsNsj9I3+ohzD+jUHInfaP7V8u6sjxxgKRnJ+bW7KiEWLTT/9hN3YEW
gnnXtGgPkAP06CZgj3O4DVHAfdxFGGUBz/exHzRJBADHRgDcx2GP+3Ebj8dt
cx+Oq7gOn4gFzunH0oWzxtbrM72FtCsbaxzZKMc2qyv8mb4CNdu1IDHw1gxX
3mpqy1E3kGQgK0OBWRGe+5XyllJ4u+RPKjxPRoLmf3iJCp67RYXfPVuFy55Q
4Z0/VsEj96lhrAcZnt35VottTo8g/OZ59B7nG+SX4zZuAfnB6pkDol+8pYyb
QshzIEzoN2kD6ynt57QBV+qTtEG2MM3Mb0/D/8YoZ2ByzCrD8C+N4H+tCi79
P9YvKoJ+NL4TJSvMcM6EVYpshI/pxWeaEJ8CkSbMPKSgooq+/9VsADLuw298
Sfn3XSm4d8J+/lYm8+qFMdyHI0crf8ocg/u5NuzXqQLDep/wH74+S+XHTbJh
f8xBysFqwqOXWK5jZjGP05lLCjVzKjd69TMxQnQWljFi2hvSxxLJLu2HSPTP
aw5971KO8tEjAuLDUc8z3r133ubGiMdvXrID3jsHoygfcDWEl3UeymK+kE4J
8DRiQ/d+nqMIuqddutNzYpvz33hOhd8+X+W/8Q0VoFIgTyfYj/+SEz70X+Zb
Nki2wGJePKO/743SysgcaLJLbjnDN7PeMXoJh1ep4OGb9Yw0LmEpmDeIb50X
0Txl+B3R3N43FLfSoLpgfAhjHKNCj8qqpX7TRuXvRKWjHVJj3oz7Ma4PcZue
pcj1MdlhcX0y3v5+vHVEdFgOAe1oA4L9Wl6Ec4MYMWgH1tFPjkh3CHWd1quw
dpLysezFwXqrsvhODtS5ypvz9lXLINu962XfL3Mx0t7uVfiF7MLvpZJXSOV9
9wLZb6GAva+C3skUYXbzOM3uV2XfPlGCdKxGDUZX8+xdojdBCvzG6tRgOXiM
+w23scc5IBSBfAG3VSoisMtky2/ce4YN5hnFQ23gnvJWPoWPe+XjjFpv2aP0
Q/61AmZ1XvbM4M4rVH7YILZi+CIxCF72iMWw/8wNguHzz1b5H1zMKObHTr5X
5Wc+qII/Xq+CP9/LuaLNEqQn3YI7qAP1w0Sqg21SXzLtIDu89CK6IM5lRNNV
gG0ZzBvOAzQtGRDXNhegK6pq1wLGTWncuNkf+f+61F0uOdNrTBvt+t8UpzZn
erNM7Rxc/5PPSH2MYlqnrbP/0V6lUV3qrvfDzcTmOnt7mo7NYcY0T5dVp9fT
VbNWYvMygXVw8w9V8JPzBdbZBFin4rB2l46LPJqKyKPRsA7foJ/l1Bm8YFyR
R3PjryJYL1hQAOvBzOh0+PWzVXDDtQocRlJ4niaz4TJdosVMlrA77Xdt1JN1
eYY+URm19o+yC+O9e5ihzBYMwm6g8J0+gXK2IF9rgOzCuOyTYQyL3l83X/n7
u1S4YT1iZ/ZbONKX6DvfUmf9GLFjSoTR+8TER2X1j3bL1NR3eb0diTtN+H2U
L9XDqNrkhuCS1p1nQvG4T/N5ZnOZ678ED1BE9PPrVPgY/W1frSUtEYedk2ZE
mht4IsSrj1Hs9B3FcM1he5q3eztPNaMPr58C7Z1tMk3wQC3PUMt4+3gk9F66
NPeu5pavmyY1M4i1AfUZw9rJ4mghMRpxVvSvJuIrbmO/i44B1z568bsxkAo9
0aURXF3YYr9toUDVwHMTgbd1Qhy6jWPFCTFQBXxbxwtI8bcALO4DeAFNs6fz
MKOfM65IHLYSz2oo63OZQgAPwY2UxLprnjFmiblFN1dTmEv09VY9xVNcHqUO
iz+S2HvT91R4/udlOAAxl23wX16qwjt+rPJX0O/0sevpYvgN/l8iMP03msHe
4j9G4fCd16pwGvG5X1veC/7MYXFQP9oMQzzCS/QN5JPQXj8mbc8d5KnPB3mM
7+EoluYijfQzMmSm19WA7h1i6nKTpg1Wv6H8xoHx7GRqjY8ycCj99+0SSmsu
u2lZ10rRXP51QjZWcxnHYLE/+ikVfv971ixP6eU+nWJvZuEDGzabFCvC5mE6
bG7VYXPNODFJEDYPGZjE/vBfqPzV5zCNNYkl/3r9jQ6Jl0julfdC4sgpX8Dh
svA3wR45VchM8LQhc1kE5fDccyg0Z/t7ERvCWEpnwUxpC1FLceFs+tkznP0R
OpH6yMMmYE4HixfqYZVNEZxPSvDsve8AGgPnGc47Bc5pvb6m8UQ0nNkNH8xQ
LuX1arT3wf5HAZBJOrEIcthUp/w9f5Ng+V2tAQTmfAMB5t2DrkleYiJnDpeZ
yrjdLVTOSaUBYJh+KUSmw6s5XPYrR9lwmUGcYiinDZ652qgxPjbOi4yPYdiW
eB14MEpaBzfdqvJX3ci++1Iibj17YdX0SVdNp4tSTKqzGMQlAuFeadvb6WKs
szDWNKbt2hiNU8AxvYb9FAivGM3kpWtPiNyv6YuiFG60u3uNUHj7SqHwNpT8
XxInMG6bc1teF5IamwK360bLvn6MUBlUhfUA+oK4JgQGLUFjDmnHRD41/hbn
zGNwHuFySTJpxZHIxKJfZu/AXE7yKkwsvJxiYaKxbZWP4htmPjObz4uzmVOV
I25W4Z0/ifM5zXwe5vLZxMnhZReq/DO/U+HEe5nR4SVfU8GDV9MnPo3jZW//
QpPRi4fFDqc1n7Pe4U3x+w51cO07/k2B04eb5JtP8YC0rBtBG7ND47qM8UxR
9KeJpIXThxxW88D6lIyxNwURxO2IPA8368nvUFP6vxJSntrzgP+BIXte1TwR
B6a0drU/3KNTmCWxVc5M6tKMdRzs5C45XJ7Eq3N5a0ahc1TsYwuhS11Cg8+F
cTL7GWaZADP2sYJDRiE0FlSePC1GaJga+c9/njQeBUql9FpxsJxLcDY0poNf
XF2I6TTQbDBNoFwwU0BN3wvdbTgN69r4GuPHxnyNDBitBnkn6JBD6SOa0vuE
0KZYvvEzpL9MaB7676D5TO8fGNa4SwXdzSpsqJexNe/sLUb0uwesqeGd7Ne3
94tx/c99jGjtWWe9Ew3Ws5bguQrv+zAvPqqJjRZeer58ChOepLsb5xhgd8zj
Rudom/Ha2PxopY+dbtnWygudDHxfmu8r8Zowavt1Fdx5DX1F5zPcvVUoczof
c6TrefRazVzmO5rEZrMx3QeQL4tBnkFP13TfRoH9bgE+PQPBPgXGqxIbc3Pc
vY7j7gDviEJ1PfrofIv4nc4eq2kgwAbqzd4g3t1vxTLu9Aa6CRRtcDAmRW4G
0I/A2yCfA+uXBfc4bnSC68K9djWse9H8qpxrGhvBGs8VBdjxoDt3KimIm9OF
53BUqs+tohh8xVPcMEnlUToF0KdxE7BH0wWFwXrJWAZP/9pG4+GtP2LiZxj2
p7uwjwXk1IMLq8apYMmjFvjwqgH8YMPzHJg70AfehxQG5LG9gb57HIFfSlLt
12YjDyoA+zMx9tfPk1A9MlC8nvUDor8Y+4eMgZJ2DRQz7AUmii1+kE1OehoH
5QrRgJsH1ICh/L+um+vwX1smpmiBs3SMtUoI/OUFKczGqVEKc/Xz9LMrRn+O
tyUu+guxLw62Y41gOKSxRl6bxvlKF/mwRsJzvi7DV7I6Z7m4sjgonzU9on2p
0N5/7E8JtJ8d0X4wb9PB9b+wkD+FU5LmYPyENDrCtkQC84PK721V4ZY1gnhM
OMNy9Kcx4cs+ifCoIwQpxmR73PwCbjLv6Si/YqWw/iQdn+jjbCh7JKh9cBxh
+l49jdbZIyTHaEeM7ztGPYLjDXrfGO0PYR2E/cvx+vbT6zpAAcd++ub3Y7+M
b/sVzzP6wwvPxvutn41voJbI1Tibx7wUIDwZ7+V8X6nXNIvx7tXTpYRapNiv
fVV+4b/+Lb2UJVxlbgU9pJq+2tqFXM+aqV+7wFI/vOBsof5nmPrpyGPhOS87
eWqVIX9/vaW/kJ8eoU0XwF/H+CUwXfzeJRLn79mgXZZaLj5Hf0HYp//NCAAW
oWSnZUXkuPTT7c3zkt0WnO+ao+P6SRr6k+i/JvLTf+2cYmaD4Q2viImSxhl6
4a4WaI2gs9WjtM3C92FvdCH9CUaLccQTmC/yMECXYAUv2rHscQ7rObTP8Za5
b+wXh/gpHrmY9affr8Lb48jHrJVHuGpVnPkI8rV5ngsWUldxxuPKb3yBue/P
f5C5nwL4VcbE+sYfH9AZT0URv/dWp9KQj1C/t0HaPp3aEN4PA+/9cU/FYn1w
31gyDPwEW4bLoOUc4H9wQICftXE+xreIJ2NC/VxxZhOAB84N4W9JyGzKsJbB
7MXceq1DeD0fEnR3lmwxYX1ZwWhETlWOEc/l81Gq0nouJfGIPvzuV+M+ix7j
bkrpL4yCeTR/ziK2WjKJLosAvcIZhJJLcFkcoDOon37ilEDnSU6F1ndjfeSu
pAB05nmWMZ7xThxV4eKF1OMYp/zuVeJll3rb2ajtXcVTUU2L4Xslqta/348X
8v5uHlDIRykcqfKgq0kFmzDrhb7vY31c6J3hfRLHGGJ3gEGeQmIPVrY2ut/b
obA0QgqgJoJiHNzbtRHK9xlea2bjeD+Sh3QAni2zKA/+KFNm/XH0s62fFWG8
ecBIPOu1zIrf1zIruq+Z+OyiXDhaz2Ub6sBoCmSXjRSs3/WQ8l99QaOdfvH0
cFQjx9oFNfMF8eVx4wZ4h5d+ZgLds9imAHZMzdNoR9uDcWRi4uylMGbPKm75
9a9pwJcD8IjwbRYTgN9dE4/sd6FjANZfyP6Ny/htlRHLwXXseyvirN88PWI8
AG4D+wni7SBIb9VuOu6zbvrL2iF/JX6bPZyx0TnsDez1bdaAjO4EOFC35P6U
8MdQRxPID2Kil1gz3Rg2KDQGw2b0Hfx0GOToT/sDh/MxrueY62mX6/R4bE8z
8Xx4+YUq6KlQ+b/cS+B8nr6Bicqf+4A12wvjegN4dtPpPzChu2k6hHcxbyL6
jLZyHMyj94eJzlKDqc61d4bJD+Upjfv5Fv2MeEL9KZGflUEtFvkfHWTsF4X5
+6Iw361xpn2ewkRp3lGAWxOypDI3apDxeUQBDkXxvVlfBXG9MXRyTmBv8p/V
Y23+80sJrnupE9iffUY836kddhVbSSXCP6rQwMvJFFg4GJeSTTDZk9yb/x/w
b1wbx1xPiucz3vGjyu/arPKvjuNqNClv2xos0boOcTIWfscK77r5r4+MhGAN
XS/HOekD/p+P264ieCe2OMe7+bH5yqWiDCf38mUsYf0hUYfjevrUOzqkx9RP
7PG3+GaNHmBvwvq31mstcOJ4rQ2RTrDFtp8nh+5DbbiREuNfdA6drkNBxXo2
vxpmKTeeT+FAbJxBRXE+BAOiYOJ6Z6/FoYTFYZ2Ig7dkOH3/X1DhDbeq4GFe
2A8KQeygx6x5XRRiPQXNCPxJJXJaJLT7A3ffFQnH+BGRwBSAHukCoO3E8NJd
vNblziqdNwX0VyO4X4XfPUkFu0D4pRzAVN01kRuECtQ7E1wg7Lejuiq6AHps
S8+ieCdg4xy5bff0vjbrMYgQCmP2A/gQCexJFOAtvILPwwiAeYwWjBSH+bki
bdAPN3cXyIXZp07RdRClKI8pidsPWD1CpGL1M9wBSHnLn9Dmj7fyaekX0JkU
i0gGN01XgR8NRdEVC+w6XjJ4MRKU4QWCUjKgoOSCG79rJzT5K+jn3foGRefw
oUhR1Of49Hz6s13TuKHD4KMsnNWUe5L9ISsqnYm+kckP7GuMRCXN21JXVCAp
/hLp4PrjhxvPCJndoHKS9oyquBX6RqZiWkYmTjHUISf/OCBrAUf2UUnR+Bus
2XKgXcosZJOTvB9fchFbRz8UWbmNt1lXVrhqGk+91VE6/tcPdyu71goyuFuw
pFE8eeuOefw/IiP+qLtU+JUzRUbKZORjcNVFKvzltfFUgBhDbAvNW2Itofy4
16TecYIl5D/zXCQhSQmABEsIeVrIB4tHKkFCBomE+MMfS7SEwiceZxmRHkSB
hEhfosw7Rn0J6tGE46gvsZIQX4cFsDAgBt0v5AW5cN42zoWjzA2JCwtMTssM
3eP1LE+WGepveO/0cgejHwtqvNMbSQwaH+929jti58NVy6VDcmS70xk5wItf
SWfkkAwAQh1kHoO/W9wkzDE/2RZJzZFq2R9aI12RvUuVtpPSLDV0zEciNaW2
T7Iv2pu+SXDnL+mP6rjwLJyl1qilHOlpwoI29dNFUKJb9Ecw8rFmcxVhcjn3
N4YDMTf+p8qf/y1RmCwrTKlXSQ9dDiWaJQ0qUzPPKk1KK412nEwe+QynO2KU
pkQrjTGb0La3aqUhUSI5gdr0c3EOyMxnfOpHhHhjqFLNUkOP2bWauyb5ec/E
c8qFCQf4TCwxy+R2N/JRpCnUYTeK4ypN+4xIYaAsZm+6Jg16FDz2RmUaXom6
H+iucKp5rBEGeFFpqyc4EiEpPVUXBbdNCkKnJBydyfFD0f2ArqBBMUhIXF3B
Kd1S2m4yuoIHpeLKwkX0MzwYPllPSgfUkxKYT7aTctmFdL1vUOFa0pWJPNoP
okLf5FSbccZ3PQ06RJ2V8E0i/H4KAfcvkCCchEI6LNmkDovtrZhcxOGNUW/F
FZYcb8+0+QhXVNBTIVFxjSnTS8H44MKeiq3Rn456KuHhXumtfIAprqa7konS
EJh65fZP3Dy0dai0kNzB23I3BwExkT7Jfi0eNTIsopNXli0ahqnzyuiGnJOQ
XyjR2/F3cNckf9U1WkOWyyCfaFpU1u2GYEkVpJITLah/sw8SG+jz7wlIxuQU
0AcpMKAGod8RNDVKv2MePV8dwaOOfvy19KOvo/fXSm0zgbNnBZ6PZCQNHREZ
yXh9Wka0dKSgG/QfFihHCjLAysG3sI5cfyQXVkp267tLbYflne3K372Rh2xy
h+X4dpWvRf7gHTY2j1Ef5dheaRg1dIJnR5/cAQsfT8GLDNIV/VaNCAim/bMI
VErfxIpCJe+1kGRFRFZE/RctMvSIMzg38d3zZFYSm1v0mSE3Ue/kJky/pGGG
Nati/RMe51PPXQ9zN1qN0RKs8BTXkmd4pj60ZDBryaoZkZawr0VX0Ib5oidV
M2KJ6tMSPK0yIyKdCSJylrezmmtTozI121pYCZX2QecCFXQvFiHZ6wjJPuq3
VI1XQdvsSEB2aFHZviZKWNAeTtpyfD9FfRS9h8FlbjeMc4ytSVwe7RVW67FR
v4T2RiQcIUk8ZxIbjpiY26IJuneydqS0lcNZFbQslHhrRirb5TBaoLsf+jHl
Vjr03n82wdAiqcieQirKEqQiLVJR2PXw965Q+cWjVLCYBYqlgvPUl5zNfQ8t
FSUYSOp3T9ZSMV/YeLCT6//J1FutCVorEjWhtEATDiRrgr9GSjHzXJFP0oQU
awJXFQrf6lPhf/ec2sWKktX+0e5otFJGVKIwWZ13VOJO3g4xKmEV4u87ZDQ5
dSvYmUKfIpZypj4FW1P0DXNBjKUULyx5ihvCO6z/u/gJ0116+VfUbpT2Iq/h
9cJ19OqevxbjRK/4ugquvbbIweK+B/og85bYUUjh5NeLUtLGwuLR+kY+FlYU
yEf5v6cXxrNyOxwxzyqpwyGe1ensWe3pV+H0GU6nA/qxVjofdcSOWuJng9YR
LInSDS1ZaTslIid0zfeu5KpqKHWGINN//dmBPK7B4nE5nQ57vCM6xpLDWllS
OMD8Xt0Xqa9R/g662I/vVvnqKk6IIOWxD5c4+iFGUmB9cS2fPVzOEnKS4gKT
WVYSdEGMQoi7tY+LrRplMU26I7jvs1ZZzH362F/0nFyVd/xClIR6JV4N1kEr
Vo7CY6RWOA2CrgjcrprJIiMrXyQMPW2kxH/2VpX/zFmEm6e55DZnvSElS6ey
+UVH63i19bV0bs1rKvzG15SP+q79vRgRWWx5lUd5kay3tZ0FhKsD9dOvaTsP
u8b6BhegWLVVkI3zRUFQJNuoCLoZe1Yqv52YsGFSvAsCBdm6QtQDMyR26ts7
l0k6JElBzL6T9o2vxhQklirBbZ3+0M5XxvZH9D6ttcGcKuiuiMiU2cSJm0xB
dh0ish5zukbyCt2mgzHUKohpBUZWkmLAtTqVapQPqBpDCjsY/kpSjn0rYpkQ
dDBMRgTqgYCBrq3B/iYifMVjKthK3dKdMyP1OLBJFAT7Q522h5HW8mGMK5w+
1KHSCXpSzttsoZ4gsoJwo1x9UDlRHKst4lidSkugJBLzH1Hhgb8pH4MQoSMm
EX4KMTGVHlwxcZPisK5gVKkfiJjcxdvSMSoqbcQjNJDVdsapZk6pGxnoRspb
+BjunUdf2+yHlDfrQdz7+gN00c24H3dM/4Pypv6eC8Dpgm9pHtv0A1L4kb/A
OWyzkJjginMigZGa/TLWtQJvSndM/Dmy3mN2IFOrNMHFKhloYNMQGb3qZj7Q
2LJy5uHyWNUMq0bO9jhQffnNJbbHkfLq1uDH5ApHHf3MG7E4IbVN1LpEQOix
JB/qc+xWYfIUi8Zi5c94RiqyXf4dCo+mS/Lj2CbJa8NJgkjExMMc746OT2zR
JtcXREv0n72vcyB0HGztUOH6dTwMNj9vgZhX6Iu8c0QMreN0dR3fJ+ff7pHh
uHgJ724TAwu5E6Mg1PdIEg7tW+EnI/etKBAVe1+5t2cp/WTPkzFKL9NPv4q+
tSq6EtdPFaHQoiFdjnKrIabbYXSjmjrCa+m3tnoM60ZWdIOvb4yJhWKUOXbW
immSNFlDf7p8nArP/6oKv3MxBf74/HbyCpj9W1k+9EDZYgkp08Ondmy1Q2fR
p9yIOgrbpJCGGJVr2LzkPsmuVXElgaEFJYGi7NHZxh1L2djyNy9xlGSVKAjU
w5hZ2EMpPklJWqewi6VVoixytIqVpEBR0gnnilQmI9mT9Vzrbd3zIgXobKDh
dtULxnSySsL3adsqdpv9Kis1ueDm77OcGEwZKckVS4mZCUGhYbGUZHhbajsg
pw9TwaO3s1cVbJkrUtI9SdtVGW//TIppdMWW+X/WYsLdkKBtHP3FVJWnzlv+
d1ep8NfXU6DJoygOcNFW1Jg97NhWRkUOc60OkZH9zZGMDNYy4uRAgj/dYee1
8bwex6aCR8GVWXoGlpLg3ltVMOIRlpL8tlaREpKRYq8KvRBbKS5TnEu3K0hq
4bibtxmT9EA20puJxRgN8VOAPR3rov8M/K8NiP0Sxj6dc7FfYElZ8sOOCt6Y
o92orOtGyeIA3KEo7lZkE1ypnAiCN+M15T/6RzM1W2TBmX5GvxXrShmNUAUj
XT+hl5GJ9TImoYYLCQaF0tzJWOM0oxsUatbS26mnH3eT1o52mFhosADprXUu
otuLlD/9aRVefK7VC/yXW2Btv7ddtMM0HHO1221SptDoBzocVk90h4MFw1hb
26ME/Ls7Vb5ymQqXVKigp8v0OE73jvQr2+vA/ugeyX68s0sLTjfd1xRlPqw5
FZlXWkFy1sxyVAKPT2mhMAkStN10UezEAlb0UeysoLhvhA43vwaXnItyQENq
tYboDodkPTAjYoojGISypTyCM64YC6fiP5VBWKanUTFa+SPvY6WAndjJHcDN
rBosGknSkUlwsAYVSEcfdw8hHZ/1eltILqq1fFSJfGxdJfKBPBhJQdAyR8uH
rP/MwxT30BW1fSnLR7CaKNU0W8zNHWuMbVXCHRAjH53zYzJB//9GTktCTox0
NE0Q64r7EBjjpqXDtCRZiPUupPNRhQrNL9neBBQhzWKQYXFwxEI0YojVBexd
jSjUDdr7z98aG0NLElEiJeKS5AET5QZWiGGxzsYvfsA2lXdiPXXtKJSfR/9x
P3VPD8+LOh0kFUYmtE6kudOBcba7eA4PtrngwV+q8MbrVJ76r2jBm/NZN0Q2
MiwbRi54WFbxEKyhvP2iqxR2dgWbV/SMFM1E5lWVNbGSlCL/62tEJf6XAIUK
An1ttN8tHY7/0dMt0gPny22taq0bhfnyvKMbvxHdMB2O8GufU/5D16iLRRlw
kzEOTSjlbaZQFZx5b1YR8uPpV1yx1I6ReuiPYjBhzkPGzHlYVpyfgAoQ+dHo
KWmb8abDevT//EDxQKkB5KAwScGzkG+80SYpSgp6C6NGxXoLWe4tfCZOfd1j
APmbNfmbCW9tFKJ3LFD+lOER7VfRq0IZ7mNdQth3+7j4bIoFYBADH7VosZq8
EYC3N0uxID7u14LAKXHYS1+zwH93p8D/XZ0Gp8cHrTUqv7ZKBV0d0jMw0Mdo
K3tMvYcT+6X85Yltkv4+onsKB1fHRlLFfCTnOOYzGX9pN7Vdix3aY7+Qqe8e
Bw/IRFckn711U6QbUaP7CtRHgPBOMykLoN/gfw39wCtHID0B+iOkyV9xNX3f
U/BBgv4Zb8Gryh9+j1yj3R305Qn4CdrAvQP+jAt+wL60gPPRYKtz2HRC5mIr
fY9bKSLsodZXU8x97HuF/0HTTGL/XHrqaj2hblXEfVRyo+4D58R5bITTVTBd
h75lyd0EYr7BP3Lg7sgq9ByGCNAJ4UDrcxLSV0UwN2G+xnf6lOfkiLYc6NOP
ynD8xTsU4v0k64g+SA74QXMzK8JOex6cgPMsb8ttwH/2V1Tw+F0c8DPO14xW
4Zv0gvbPYqSnwHFJQYSXnSd56ozQnKP+DS+6NM+C5sHv76bPtVn5dStVsAj3
geuqzJCdraX9G7XVhNYuBYaI6eoMnYw4BcuTzCOJ+hfHWX7HjaQsv+To/ig4
jPEpFPWzefRRbNxTrpDjJv7PnsIz+r6L8JxBuD9LVory7/+Z8l77nfqWoNxg
XCCObZqzB7ngyvMLovxKZ/ZDGkjPv0YR8pTXOYlQiRe7COs0YqkXQuul9D0O
Gcw+T6YgyJ87W4f3KU9mnYHvBHSGeomgPTz7a8UDmD4d2m0+gScspyMryIb2
SD7b0L6EyV5iyW68IBPT1/JaKPULlPqcP4GI/k0i+mXfVn4lIetIp1AdcbrZ
H2wQyh/tEIwfbhaEA+/AOPY4Bto19lM4oEABh1hbF9WI8FTv75KHgurvaE+I
jvOr16qgsU4IfmSnhPLYg+4I57F/G3+7W8gOhUBZycOo5VZtsgfIMmfs2Fkd
pzPQ5b4sk7x/cYzc4GYFrzCrSY77XLLr2D685Fw2iLy1k4Xs616L3B8E+cgY
rJ/Ec+M4oK/kKbexLLQ33wb0JV4FloEeI9/1FHqujfSD2dTKeNd8L3UDe27b
uzlQ5/32Ldb+6esRtu/gms9iDGEg7Tb6xrbRb767SfiO/bZaYft2XlGQ6K6+
4Mb3Qf0sietRpXMnbKMVwnhwG0kD4ny47GUVrBpfbAWZmF7zvJDzwvc0u0E6
fBfvHxfraInP0VysA9UphnjanpOjqhdMSvnfl4JccOsViZQvOwXkhwwI+dNs
zH76sChmf79J+QdWqHzFc8rfSBfHu/RpHqJP5+Bcjtm9tyuUSTVnBfQmZHdA
LzzDl9fLC8xhW26AHwvlW+GFtuvlheiL3l1PdI+cnf1xxoMACEXtFIktVcbZ
KSl0duDm5M8jTVo40zI+OLpdhfu6he8fuozXxk74t+ooI5AuTi9bYydGd5sR
CO67KyL8vVcqbzxJ56TfqIuE8hy/33mpUD6ntwNYOeloYBHidX9uhUB9Ia9P
sQD9Tn/0aHqH55o6UYt4HOuixfI4ID2nwQ5PPwHsXNbt1GAvcxPFxuI3E5W5
JMVJDtdt0B6uW1sUtJcy2s8sQnv1EllBp5qug7HD+QsOLyWkL6GnPtCpp0+2
ct1wRjwicY13ZGS7cHHjGEtJIZg3eEf0bvAOCeDzOoo/3Gz+9hw+fguLF3XL
45DwPdrJnA466lTQ9ze69LcJ14/q2XOH+yVyxzGq2IHvsGwgKe90C9etkS8D
VcWWqYz4jj0i8/7Ih0EknsIBfYr6kO8qurvEUl7fFdx/vVxuL/HQQorg6YvE
DANQnRqdo2gdwxifZ3+f2V5SMM7ooQcM4dOge3jOV5Q/eTL+tr2d6220CeU3
074HC7AS6LNsvmSY6tu2WJRnmOTnWrq7ewxe7WmJqG72vfVSmRcR/Na1QvUt
K2VPEXxQR3TvqBCy73Lo3itkR/Tud85V4fznJGJ36b41GlhEr63YqcG+aYI2
XCRUT3vVL0bMHlTA8YjtGfcc9pkI3UA1mmOulJ+C0kM1pSsftpOTURMMlHZD
8fA/SY6PSyju7yYyrBxDCB0rhAapj9O7PjSXKe2/OcKlNM9xM+F4mrcye2xL
I31Q8mVkGdQ5BvXCWRGol84msiIe6efBxjwLsl7MldN5W+KCOrjzOmuqhPN5
9jivHGTgHN5CnYARj6nw6aeU391o2Bzu2RyxGTMA/mV9lMTkrfHfHVRn3EA8
X0jpcmujfPub/JZB6vA731Thl89Q3phblDfuDqb1BQnGeywmT3Leo5gcg3jC
1wi587gO71z20ufQi509m36tfxCv5fob8JwLeUndefMY1wzrrEY2fBaD7FyE
7KKxPcXILinMyhYUeiuIw83ks9kzJQ4vZ1ifZWFdQ++vilBTtVD5ownSFxKk
LyFIz6FwqI9+v7uoh7aVorPddHtfi0CbywmjnlWrgBWx+JFN1nmh/+gIm3fw
0OGbA9Y2/i6RQ/Ba2+jHeuX4PZ7pTGfV571jW+R+YnewpYUtdub0Wzr+PrRd
GH10n+RlD8Po2SO8hkPzVrOUdd9jHJMlwmjwGed2VShN3K8M5JwMfJyw366B
vm0efXRP02V3jiRuR91PUd4Eir3HRa4Kk3oEsq6xETwP3G8ysWk4K4B0+K1v
4XMEpEstpB1Qg9Pe1k18O+1t6cCf4hDRuNBbDPReicw5FBeAfzkG7t6CcByW
S1cBuHvXSrbWgJv2QR1d8TWz2UpneGNkKcC9bbmAeyt96tsqVH7yI8pv5mnf
PdxFdQBN14PE38ZfqePinsTpM5MhLLFyeWE87o++WyXFz4NOQeVhA1K53I2d
0fyV4zh29t6vp57ILBWueZkIvQh94cW0eZdn3xwVKutZTsXBc9oJnoHlLbyq
MbYZRnSvBNTeVkwx7OUF5bY2Kr96qQrmTWNUhxNeUcGSN+hT5nnGwmuKqS2v
h/H2DJfX/rgnZUT/Gy9LqQkYJiiWHxt9s9hy2/ufk0Xs3tulgsNbhd1xD7zI
OzFFKJy0qRnib72T/3S5zWurnHzkflNyiT4JdDKbI3a//F/E71stv+GrnJfA
8Cy2qchXCX/yMxWOHJPkqwRTZ0vY/TrPE5o9W4+ZEZt7hGZ3SYJxomEdXPOz
U8O6NJ4i5cqcqeSSbya8did6OeH1ICb2T70awtj6Cm7+6BG84EB40QXKf4NI
vYt+xBvpK+/fJNTeT99VD2rO0PEerI63Vaht6H1Uh9qgs/HLQXCX5kDyie7o
Nu5D6P1Wuz4Govvk+Pg2jfSdHHIHDet4CI2/l+4/SO3ILsE0h9pou7QpflCw
fWwXF6fnFTh2G0wv0Qb3vxE+f8LdQ/mQGO31LZCmme31zVfB76+TTt6vf6q8
ZeD0GJ4ABs9kUJQDDR55hEgx3QzcT8My8Z+8V1hdogNqY5toVmeYzVm4KLjF
e+B722btl9ML3ybM9rZuVm7MnWJoD2HnZGtncWyN/WYgm77Vnmp2UBjVfWuM
kzIEY6vCtVMpklwcYRxT+FGZArE2UI1YmVAdrH2VsM4JII3qRYLqjXydC6oN
vuVcK48ybSZ8146TkPpLYoNYJF/wJY3kL0XG9am4fFoCl/WgR7e8D5d10/WZ
bfR8kkD4HrV/EIW65nFukv4WfM4B1RxFU/OXPm3zkwNH0Gk2tKnTz5DO8jYX
QzVaD/13m6vok+jEfEt/3aJEXAPWUj+q3mCaw2p/cXywff6VEcqvr7BhdXDf
rXJ/9UqK5lolm2bRnAGaOT2p0ey6HaYcBJM4VZyOtG5HjMcZw+OPv3sxv3lB
cpmLZP93P4hjeeLdjGXqGBb73eKEZMHp/GU/1EsPSlitbZB0fuI0jqmDqfyT
Yh77o0ax/RGee15yLJ1JsD9y8ZRlfJx8EZ5LXV/bjnDUk3IRSTvOh42knelU
Bs21FPOsh9uxWKP5PHnW10k4OlslTGunr76bULylRTC9pVZQ3UfH++h4J3Dd
IoH1kW4nyAamtwqWgWqD6UMtUdANjOMYjgfOIXIGloFnc8z7PnlOiriDlmoV
Vq9V4foqGd2I9ZeOH5TIGrfhcJ84IA4JEH28XwrCMVh1xBuDa/lA7JXjaJ/B
jRRuyU1+KkB4G+a09/HaPzjspY7uVmrbMCBjJnXrvs7DEf0RdK0tfFp5FcNj
XB4+QsamaC6DyXwJSPSMbdZrpw+rnX6+yEZj38mVrpPhvNUkM+mvAWUDZ+w5
oKbWQ19sD1axIxSrLxTBeQt9Z1uqxdru0XZ2D4wNgm/XUpV/c6KcB5R7dAy9
baXE0Kj+YOp+0j6/9HlteCy1HG5HUY3XuaG8A08aqB4dWRv/wfEyECwz7zPB
rT8k+hLOkKukJpZFLg7hmwjC95ECPpHI4aweFbLk4dh6IykEyYR8hMnv0Tv/
sJUNDEbw+lcV0KsxnGUTQ2M4vOx8GSLihMv+pokDM7iEt9SPaNTSJ2sWfyJ4
dYyMtXAYvPvqHfA+SeE98Wf6XzguRk+qCrEC3QZ8g+eeUOEPvlcEYDtABMlO
DCXUpsaniouLrIxkBKPBzkgzgsuBYH+29p+B4Jd+LRh+xcEwRchfT6BwKhpa
6L1wg7QXf8Wjyw2V4WZUWiRjFMmceUpgLNtie6Mkwc/IJgwbSZqrJAwuSWIw
+xmtPILQTmrN8XDBWCUEmZQklsb5TGHqK4HE/uhnLYWDe39Hvzb6UffSj7e1
XojchcFkRMQOuja2tkQ0xn47CA0q67Wx96CAYxNPeGB6YpjqAYfGB5ujoPmE
Tk0i4MYxyHy4gz3pLfhBGhIj/wjfg0lNAXP7X1XQ2aLyK1YpH2qBgJk9jr0S
QIPGh3fQnq6z/fS3+zFgDgbAPGEkENo3T1NVk3hBRN7EYwPutAtqfe705Ch5
QUTlHvTfCUBdFPh1v678aTJeNLjucuVhQFjFU+w5m8Ej4TXXyuCRXGRx8Lc+
ebIJm8u8NvpEW+nbaWmRZjBt9l1tBtenx3CNfc8mjqeLUI3zvfRJbSE97EFI
Xi9s3sxuGbh9mgwz0ZzGutLgNGa0bVkunF42TvN7jex59DpSk7LshJROSIcV
I5Xf8DpPOKS3LjzmeSOax5+N8zgFHOfAYXrcumdlWVZZeK8oNg5vvZKxjPLG
+EixPhSv+wRCD0rgtIzbGxqLl4nZsXj52h9R/7NRfI0PiCzH1qv8/Ge0ryGW
hsNqcy68/Bsq/O7XZSaqEzuHy54SbmcSuF2qbY5u+vQ30Se8aR23EkZ36YDo
1vHy4GRqh5NHqWDpNJsmXIfAmm4ztUfSB/R/qUd9xeXsaiSSG4PAkd2J29FF
6M7XVXAcnZAwtJbG5Yn87gre41fL/g5tC/idAsDpMxx9s/LG3qa88Xcqb4Kk
FM3w8FhOMRM5HGk4HHFwp6JayALvuUXeho6i/51YOmsYDoJzW8iXd6IXHZtj
misY61cQPJfrtOFA2L7rTsF2O/04t1GsVV8t6AbCgcjGKsE4EL5DAmqEj7xc
CFzr3lpB+B7tWu9Dn4n4jcHZ3UJxEJzozEQ28bS7x3376oTm5pjj5y34rHhB
y4A4Evx1A/UcV6twNYoYUPCszvIO7SSRIGAfIHjvoz/fRf/lbsLRXoL+nm6Z
LNu7UAAOrG6byyaEt5NEcDsdb59fFDfLnteIAOVz5pjv47/B882hu7dxToJp
PUeefuscjqPxK5kF0jK16bvvpOukDcUkX1HhN78iF+aTtxCpn1DGoOYs4he/
SlSfairf0BU0McoiCr3TLrnpqIXX4G5tjlN8I2I2BMyA+JeLIG73En97WwB0
DW8DcQTVm+hL2Vwn+64GcUA01L2t1WJaG5B3LY1AvmYy/xa5yMUWgnd3hR4b
gmpA7XCofQxoJggyvg3EtbHBED+dt7lkc+OH8DWeU+lkgCO2RsmYIoCXDmh4
nMaBtgNwN+gOr7osGsH3d/po/onBULUCcqQOd87BSsKAdvD4LSq89By6FmfZ
YJvLB5hgO5PgTZfqYLurTkObF2TbBKuD2J37BHbrkLtcV55x2O3Vz1f50cOV
X1ehg+1hFtn/7zFuCLjD71+eiO0Qv+4iJ1pqIadNubJCz8PE29bz0MD+rQAb
LwuwNp6HBNxZWPHSS4+8D03tNAfeIPert+MccZvOaR+E2f1lWXTb9ajRpG5A
DgG4G3yb+T2a4v7r84Xis+dEFNduSIzimL8To3ipYNsd2leA7ZyLbTup88kn
JXtoStGbCToVFUURN+Zz0lX1zYFD7nvo99YpJib4bThOP30bgmMPfhtjpIWe
u7tWQvAdyHWtldvg+F6MGVsn8QBCcUB49wYlE4/hZ28RUDO42yUMx/HR7uh4
P7IqdEJ9SWzqzTIaBKXJKBqHHxLg5R3dpvIoEbefou99fSItu+nP+wneu+hv
dtLf7CGI93fK3Pit6yTPhZgYlO2ZpWPkOULfXgzA7EOBIkI6xlM4YbgJwbNM
7JwIgbjRHF/jObuRuO3iOToUZjOwMSKAWsprGY2re5IMwQ7P+QJzmyNvdwTI
1+iKmTvF1MVkw9omF3MJ7C7BNgVcwzFxwK3pDLujAx9jIbm76ePbTE/SpTOU
oDW+4a56oTX2G2vlNvYgN8JxEBslRXrpo+xeFif2SqwrSFrZtQIGK89dwFAR
rLUoa8UwtfPTHmZiM6/LEqyQoULtJGLDEBnKUXjWn3a/MwVfA3uQAfYTEbBz
CcBOaX/EjbixapXcR+hWgxB9w8Yy0bfNKgLcHzSqcMcyFTZN5Qhckzvjr35R
oHloHtM7G02msRF39hTw3lwTwbvEwjvL8C5JhLf2SzS5z/IrxvHYrWDeOOuR
mBwiY/vZhwXbFG2fCt08AGRPpx187f2Ll2xOjLhNoTA97sMkEbGgYH5Adhuz
JHMKdqcddmNIyEDs/qKwG1Nwwi+dZtnNsXcK6Kb/pcA9cWNw5BeDqW8IvZPM
E0NvFJosjMGLvZSsOzbEwrws7mEjxRjzT/CzjdyTgabcCMr/Y+AwnGKLxgbB
eTv9sNvpB91YGyEd/0v9+gjpbXWCdPzwgXUOzWp1ZD4MCW2m+jY6vaNWbG82
WjTVQXQUnthFr+4AZgk0C9X3ccIbVkqOqb6/SYwXxni3pvvhTowd4Wi9UwUd
NRSZr2ffJFi1lN48vMAeura3CtVBcYTl+/uE6rjN10u1lB/A0DJDc+wduiO1
Nge/kK2ztXU9l/0Xr2+uhOJ9+pyOv1Ma8CYc73UMlK1zLOC7pktFXw34LAM+
E9x9ZRSYE9xlQmbGDBzxZk3mhGRa+97D/8Bo15lIwbtjrNCLjkJz11xpEz9c
4D7Eo6tIoE6tS4O8s1n2m5oF8psaI5hv5i+IAnKM6HAhT5/m5jX0PBiGzWWP
OhahV1n5ilQO2rxM9h08IqedR4S006cHc9u05qnUz3+O2qiI7q6xMijBWBlm
kP4AIf1mjfQfC9KHJSBdFgnMuEgHtE0YXvlIdBq36S7/2RvjYfgTv5Uw/EP6
yN6nn8w/6q0BXiopSANzHyVDNNC9XdMT59R8WqgPslDPnALqu7QBLuW+Phd+
9yJZzt1aKAJ1G4d7hz8d1Pd2Udus/P9nr2N+Z12em5Jern1iMpB4c2yfXJZI
dGOfZJnoOZfowR/utpnIJKinNdQxXsTMuP98gi2ejiyVrGupmAEjEdFnaaJH
dnh4/XXFroobj6cTXJVPJnqRI24nUbY2mbLAA8yfT7vz5/Wcm9MHxHoXsbOx
UdBuEI8JL0A7EA+8Y48sWQpwxzTB9VHUDueluYrH/KbYfin3NldHPvpWekrU
+4ABs5sAtLtJgvZDKLi1j79QPuwUyoPkiNkP424K2rOM88/K0KZNKli9TAXr
10jydG+3yi+rEITv6NLBebccG5TvpMftoF/jtgYpQbaFPszeBYxwje/Px9DO
AXsx6r0e+jKBeezNMTi+dZYO1GfFWM4Qh72iYY5PjpdfahmjwHNhumwRusN2
MaG7M9XeHzWSYM9/Llgf8VCUzswkRO1DeDtoIKxbnne2Ccc38WrndIsukHb6
1jbRV9GxIeI2H9O3145G92+kC6sDVejpY2+jvksH6gJjCu4i6i/9RenoPOdt
ooutfaHT5rMhru0Vr2GC8te+rBCwW5S79kqJjPoz9oopcMJIP20ApD/+a67U
+Ay9E3A953orlucUlutK78ZGMac5Sue7EaQPtkH6pRdLkL6KfrkfaHflozZ2
V2xe8921Bu2wxf0lTwrWHbQnTX7PDuiQi9mi8U7vB9tydss7o8aAn+8AvnIm
A76E2V4Gtue/Sp2cR/7AMyFtoA6uf0w8947g8yKq0+UCi/wUAXuAZYZgj39c
4LPEamul4jlN47HEoJ51oW5sliSyuwZ5RpMdNsupyH6WhOsu2Z0B3d7LN6sk
tpsB3a9NV/7rs2Joj1ktqYGCdZlsk0WmcyCWu6sBWof8ST1r8lOF5iVezfJk
h6WxyUzhyFmGc4jeahmeAsTVuXwIAx0RujFgGhBA0OfeVCWROlAOExXGC74L
sBwcx34nMmx0fleTTMbGnK5d9N/tb1MW4rtxTM+7p0FXoe6QVQ8O6DzpW1vk
fugAhQz02va0oU9eRVcSlqDd1ckWebiyQgWtGzC8laeOI80JnuuWQhIFPkqr
rixZwS3NRM/GaK4pHr9vtjRNcijBbI7MYbVoUxytB4trTEVkPt1YL+3jdGQ+
BsWi3Mg8uOFyjswzMvuGTz34IA9HAb3huNhcZzqB3aeJ40LoFtvlNCZ3R4sl
9YD7VpLj9vVinrVWyXFHNf6TarzjthV092JqGtoIr+m/QPUkQJthTQ0+D1c6
aZsjAXcTjwAkVtOvY+6TBJxxYq2YUSYN9CNaL5NopFZJwmi/C7+sgtuuVP6Y
3ylN7lyc3D8hctPvejmmLi/ntaOWPa1AcKa4xOhZrzK+ph8zWkB+BoPcBObY
8yLhj8QDc6I4B+bv68BcWy3skW94Tfm7ce0QxnNOdhNGOSEccQhXxgDKd89w
a+8mhurJPN8Q8fyzvC1zeV7E8qUzxX3JOjAfdpoKf3cX10J0c5smSKf/5f/y
WMArLrcgD0c8YYYIIs2Z/+8u5aP0BHE8lRyjY7SgMVxMitMYLgOT3JguMi4y
meTBj87TJM9Y01zTPJ3gvXw2YWy3kHxQ0qgVQ3Oz4IfNfZ7Kd0mK0t1h3pmI
7LH8Z0T2IhOdp03OnhkP0HfFZ8GfiuhstDQZQORwO0Z03Caip5noOQ7M2xoj
ojfhGItOtvP6pG0bJD6H/YLKSZu4dCuF5Ji7p+He1yYzr/d3C9QB952A+WYN
8zbZH9JZ1D16bctDXQLx/gYZKLN3Y3Sb9kHjBhWsWy1zh/opYOrbpMK19I53
YEhGpxgwJkrfgRrl7XhtBHSMeV1G7NXROobARfzOFLI9hRPM7xRQbkiOxbC7
HJJjLb3OKfQknVzbDATnUHwMrqeiMByuitTWzWHYSnD7bcqbP4UxHp53NiM8
lWCqfEbH4G1gMhp9M830rWBBFHw7HXTcARsdUXmjHJPGgdnoDKAD38qDzjog
0tTLaS0gdyvFHq1Y+ns+h9vexkqpgKPPpQ3A58ryykC3Bjick3DucBfgGdc9
KRgkmDbQ9qplVQ4uuA7Y60GDkuIsDMMF5iB5hPPlIyKcD+ZtibeCzlXSj2nx
Y9QeifBNiNcB+Bk21anjcnObA/NLzmWk85ycNZOjtCcF5hbrSH3uXgyir9WD
DqP8pwA9wvqeONZj83UGxHoKRP8Cw7zUwDwG8v+6QQUP3cm/mHRkuDBJpo+W
QoTP0pv7F/h93Jos1nTx4kE5WO6OWQkP9yj/o33soifA3Fag0mG5m/48NcyN
34LZ9oUwd230rANzgFwPP3RhrqNzdaYDc4I2Y1zslsEG5gz0hPBcgL7IpkGT
XJek0DzJdUkqZZU0bSdXzHY7v7K1yQbsx041E/70AfFO3GCss/HS5Bw7wbs2
YnTknrVGjOO1g2Kcn0EEj2EwGxsjMwbg79EmO0ZbEehTcN3pZ9tFjO+h1t8o
hgx43689dwTm4D18wl3s9+xoRty2nY5303278DcdwnkK24X71D+sWqqCVcvF
UN9HAX7/RvpklisfL6l/K2x/tuy3QyLoXW9rltbXxKOe0wjdMS95gfZRZkUW
e5rZPyjyZAo8GBwjLAfjNe9haEzl7RQe0uI1j+aW9ppexBM2vUSH0ui7AvvT
JnuKEF7JWk+lyJoG1/ycR7wA+sZON8Q/i2Gf9ZqbxT9roo+8nj7XhhquYFGD
N9xcJ6C3sK9m2OfAerySVfRnhPhmXjujnZe6bFukMb+A5HOKCtZPZ8RnvFYe
zqNJz6ZLw2v0P07QfkpB+jMriA9uv7LAQSGul2icV42KcF56CpyXAOcg+bMK
TGeupxKC9XJtqBuyL3mMg/TH8LaWPhZR3ATpRPgUbpBi0qngpkttvB7eerVM
5HHjdcDdmOlNU3lUMI/TfofQ++46dmHoY8KWcW9cdvooDnHaxQE9mpnpU5Lg
sJsB5vzTqeGmvsKkPwOk96e9rIJ7ZEYOkG4oD8gbxNs6s/86Loj/+EiE+I8P
06tHtF5uovWAYsoY4XsJtEe36RypJrxZHuPvO6LCtKl4ctS4Lt9z8Z4rxLtx
Xj6B8LlkwmcSvJfTeJu1qVIMMNeDzOklvsirWsQMmNfcOracKuXp9E6qlJd0
LXRfkkJ2N1WaGWDcC+Gd3i1jvTBVaoYrZosLV2GkIofswvTcQCZMmmP2rEW6
aXSM+7jSjcE7UK5Tp7ivFoM8YcvCUzdty0ZBOvx1oBzGDPZd2phB/hSxO/a4
Rre1iNGOETNg9Q7ht7dD51f7MDqyWfKsfdq82dkij8djief0Pons9BvWMXxQ
tVwF9VXCdOK5t3ujClo2SAy/DUl5CuRJvnsaeKoyv5TtGEG9WsJ2ODJ2P8ca
6sLzrOU5t5kmndrD4gsHxgwqRyOaw0NPA+j0/WCkYvPL0ojlpcB6imme5nPG
Xk/ztoxj+vMkpgfTw+9covwn/xTxnFgukXvKa+LxuaB5Q4O0ujo6XcuFPOsE
7gbywvi0ZXwLDz/GNssmTIvTmngxlEau695M5G6hWL6Nh9m3wIUJ1k5h2HvN
fPU342NqmsX/J731DRPoZUxg1EswXx4seJqA8aylvT/hzxRaEDIvOjvmugxK
AH222IThGT8Een/iA9Q31awfeWrWZ3lLMX50zlv2FBKlgvvHrQR4lY/rZOmf
NO6HmVgeS4KbeB7Ij8Xzjk1jsV81lu1SXkvgJPWPTq6O2jtA/ksS2C19mqul
0Os7xKpZgH7E93TdDMx9Y7+D+2cz97NJzLedpWfoLX5IbP/nMaXBfjqH8RTC
M/O1TWPCeUysN7APjmxT+R3tKnx7G4MeA2LAesTyGvilmDVkbHY0kzyFMdP5
ibA35kwpw76kEPbIoRqnXcf02ZhBo6kfw75xaYYlzjGKhsdEFs1rKjYyxsmj
phyHZshgcWhOFdEnODRuoauBcA/vvdihyRWvrCpRfIkmvp7VWRjFp8B39gD4
VlpPMOR4vjUex/Ne4vcU877Ea2mQUN7wvknyq9jjMZzu6ekQ5ptwvm+TZr/2
bcBuDuu7OSULCwVhPVL4mAaOu3twN7GfXtgOHW5DCfr03dj3tzPtUywBg4Lq
NWLaIGXK0O/ifX4JBpdv1uYNhmG2sZHERhUUAP9jL9eh6OYFSRzjRvsz2qlB
sDFHkG/bLDbd02B9CrA3oG8fH4Ge8D40An3WgN4OeyTAm1+j19IWmepD9UB0
ROlNTdzo8yeyI0tOn3oNffrr1+HNYFvqVdPHV0Of8oa18X0NfSj1KxBW8/rc
DRS111dygxDgwm5i0jTPoy8b1abmqmDtZOoVjcP/x+vM1kyAXhqaN0gLnr1T
5X9wYYTub52ngt/dqPwpBN/mmRQaFyM8LQiP4fsxwbe37Dn6PwjhWTC7RAfk
jt2C3g0vSmPoTKS250BqkBsGTFoic7O+RFFUnmC5ANFBBxdFOL4aH+Zx+u0c
p0/qxEpu4WVIjtL7OkhXxoF5KIjJGZndROV+Ur8dr6mgeqQKK5/kK3amAUsb
kX5TDQ9crMEvbQ29xdaV6vPio4cXX2C7N/zrBIw/oqD7Q2r/eJsDcHqHHx9F
P4MCbwtkJ+npAhkJz/z2dhVgZRfvkBmdmHHNFUTfYpKnXU8lDuI00LyH2AEI
qxRv5Q2hdoCwOJHIbu5Tx+CnJrLrmw/SYxYnSHDOz3P35dptKUl2W4pj8UI4
J9otbiyeGtBuKR7k4sAZiVFTedBvrBeLpaUpsXiVicVNEVk9VjHJX9EBedp6
KzZJyrQGW9ocP70B97UKnVMRp8ustQ4+g9O43UwspjhYZh61st26gcdf1cRj
cozM6kSSdQMn47yNGFCIWSn8UgiYQGGdBM2Ixw2d+/Ei6YC0FYe76De2s1ks
dZMjRUiOhCgTerMKGtep4K/rhMwgdG8L/xcMuS31uiwI2xKdC/Dfbl5oM6be
lnlFsbkL6C3irSg7+nymjGmBt9I5RXiNUieTNKZH8/4zbLVkwWrzswwvpJjp
rrs5X3o3At8WLPmJVAVhmJ6BYmxvQ420GnzJ67kjX0W//XX0Ra9diRdO25RH
nwLdXE9coVveOqLwugqpvFCHVWodQC/lRkf1POSwkYIJojSTOoVlwelax1oQ
a8bzkq70eppYoGrp90CwNi2442cquPNnRl7CK6jv/ChdZxt5np1sN4xlp5xh
LVF3qYtsoDq8/ScxVGfB6kEDWitiktvQmpo5rnzCEDvDFDfUpttpxvmZBuzc
sO5cUqx99lck1k6wWKKpQwvxKwDMMwzzYwLx8NLz6BUc5Hd+gK4lwjijPKWB
visCOs/l75iA98NAD+7/hQp+cwtDnT4j2pI2L1P/4TUuIRrcdSM+4IvOs1eN
jOZQXwwevCUGeX/dmyQ7iLipfXxS9v/zFjsrbKYb0H98ODZysQj0/R121KKJ
vN2o20wiMlE30qHGYrk0BnucMZM9DeyNzaKrWSWH32+Ms+lRujeCPUA/EOyN
r17K2xLAPvzLbXzOJkzj7ktZkvsSS5ZGzkvWJEqlFi2KjC9ILlqYHmDoi0N4
10Q3w15gomdOPZ0/54TfhZA/heGSyH6u2sOQB9WzHH0bFwatg8vFwlLPMekN
8Q3lNyHSb2MPoLtVxjx3VDHUCX/wB+gWRj02SPktno64lmNkrvsB+uJL75XQ
W+BeEmM+N7q9vYnX74Pvzutl7dQh+M52bhyG6xBcA14mOFjI1/LcGUTQ/I2h
bhNgv2W2hbymfJrp3i1ZUom9JTlqyI73NiWG9pcdtJcHd/1IsH6JRF/+hKkq
uP9eFfzxPmq0f5AuxYfukcxSNrjtFviWo19SwDqjPecAnrDOgC+zgM+A6cg4
EtU1yoHxpRJsI+mxyLLca5rDC1kEK1/htX14ae5GemeNSAc3yYDDGcp/5X4V
3P4z003IBXdcQ1i/hr5mOOzTVfDC71Qw6gGLdLjsNWME6YN5mw2evrUI45i2
6XC8yDbJeStxzrFJVgxnVhuEV2qrRGOcT7OBokqCmy7T9ameluAbc/V18E0P
/CdXrNH+SPDfqyJmD5IAPHj0Zma1d6BCGiHbO0Cf3H5Swv1zNa8zwuupxOkx
HHyXJqC6hLf026GvqnlZ1Jr42zglvNPBA7fQ9XCrAsRVirfp4KFblb/gJV6o
gz43bId4/auVAX14ic6UrnlTIvm/vx1F9P88JvD/10n8LSGeunkG+h8n2yzw
0/MEfP/D/ZHF8i9jqZe4RbJMptS4K58C9MZi0TWyEkEfEjPyF18oM5BKE0Cv
5/7T2WJ7PSf2OiAfjL0zgrydg6RK8xd/8ZRwL7BZuMDhp43k0/GBMAmcz9oa
4s5MUlW4LOjECbHJ/6eCPEXypRryThBvIZ/SkHeMFpxrwNUIp91lPJwWc4w9
+E60T7HdIoPZEdS31wvuMXepCXc3rOMcHiG8ba3E8B369kZD/YwlPurHcMlO
iewB/16H7Oy/OPCX03l0s+CrIDMK2O9ksO+EioVr35SoXryWngYJ5jEOpk5W
SxXGS0ivC7CgRJb11Ltn6LA9HQ2BMYlR+sMCsLOxcgbT/SxDd/xy/bkvck0q
/gXffY/UUsGgnl3yer3tGEDUKp4RbutzwQO/VcEffkOqEO2RWBJJSEMSUsEt
vyZWreWIfd0KCeTXcQ9T8L+WWIUFwqsrYvgvieG/kd5u7RSLf3xxMxAUjX+E
riLqXn7z67oD8nUF5vtjeZ5PLXdnGuljaxX+A+qG/c0zo3C+TLN/xG0qvOOn
cfYPsn4L2E/cX/Gsy/6Mt+rZaKCLgbtrtPARWJ92Y3b45I9jUt/I/6KY/QsE
w28of+2EaH4RNOCDdi0BmZhF3jgFi6ivhtyueFHorwP1CryX/Qs1/UUBOHTX
+A/pVXGofkr+L2fuB3f/StpdN+GRA6A/h+uHXsj8F2URvn5+on4eHbFrrSzS
hIZy7yhFiYpn21eqYNbLKn/DtWyz+/NfZS2QgP8EteNitZMe0Pv/6DjeP46h
B3B9Pj4Kswf5Ve8o+tAJemDzqwf+xkMhOfhnPTgQK9Klc6tpk1vNf4IYpBMs
HiMG25o/nRgYi0cLAv2yiy2eTGTx5F+82do8HOinEOersuCxn6u4IBSPpBnY
2+FQPzvA4McFs+wAmSRrHe5NUvGASfA910fFA7KfwsXJJbg45hySdNq8we+4
AZtadn8j8mvEDxbvplGieqTwGjFYupY1yKvH2t7EdaI9D9RrXkdPQmzPAu0A
fLUuh13HTVzvjHG8TQifYbBnGOi9HdL6sDY6s9zfXC/Bu3VmBmY5ReHzbO6T
jgjbqeimDc/Tp6D4aUxxUrYXKMK9wpLc20G/sT5E2NuQiQzuu4kC4rt5eR8l
paZLGeR9rTIq1IAdexzvAHHogCI1czph78+aJLy/93bq/N5h98J9utwu+IYC
99FEAejzeQn1u6n3t2ZxMfzXcMUabLPehiXW1mH/vYGTqDB0BnGuFDrw5l9U
eMvPVHiR5v63LlDBbynanEBx+NopvHQ2Yg6X/+HdV3Psn0qwc3KyjfH/8duU
P+lPhPuXsPQOSigu59Tqyud5JDvbOSufYzmg51w2gin/lBjuMioGfM/EfZrH
6deA0+VR2P8Chf2kYNf+uDgt+lEbPcs/cA2ZzChTf1DEfpliyplbKEAZ9wDA
/33zpbEGzGf++5vGxnx3VIThy+buW+HYkQrkZPjQA7dBCx+4lS8o0wB49VmA
PYXq7/QiUFC4j9oOTfR1pK/TRqlw+stEcpKdnfVM9fDyy/AxgOWf5cjeRPqg
Oaj+P3T8Ee3/V1s7SKj+67C1dwYk+5Fe4907Mb4u4OVmUG0hmO9+ItZjZk55
VKDcxXq+ZbXK/+5W694PRHbMYEoiexrbFCJ8LSNxE6c0f8/lKvixmDj+lNl2
gKSx7Afyb+bNSy4sIHF9pnBwewLerXVj8R6L6ouX7xwwqj9jIIAb090N3c3t
Zm3JbFjHKkKP3cA1PwHwxmpl9xrkKdygT7+1RiwZNMTtnU3ai6/j2ymNeAyr
YRul2onh03DqDd7pCHwfFON7b5uwkoNeODRtKqQwxW9FCpbflTAeUoGnlkhd
GL9ZB+SbeCDbJh6U3jlNGQcGWsDuC49fjPA+NCK7/+rdFNPKNBug3Nu6DLOb
luL3SofhhdQdbWvlfHGO4T6UKY2hQoXk7ksmOVcl3lKH7sMGTiXAXdrALpM5
588YK4C/FyU0eJsOv31hFAemxf+55TpeHJPgYwleydF7cOcvKSq/2roy4XVX
Ma3FYcMQKIoN18+k/2/Na2wI6YVLa2eYID7nNc1Q/gK6yH5zLZvyxrnJJgTu
Gtz0wRp0y+DGQd4Kg25qq1+Q/bJnbUTvYa4+hpUsG6Hd91RC3J4rjNvPV/7q
13Tcfh/F7T2Et25j3QRHq5X/7gY7C4lzp0ME4FGulBf1xbbUhbffNVkF9aNV
sIE0YtkTKlw+nD7/hpeJ04sfQXd83bNyZTz0G2l//A2+oD8iAcMVpvc2SnGu
XYhd+qvxTvrXRWH6GbxNS4X4VRw2oFe7Aq7SWg3zionUX1jBMPf666mDeCcD
Pe29x7MaP3xHWG7aR+/gk/s7R4aG9WD8R0dibJfwXQ1JZDtdmeGRbRK1aweH
Zy7tbVfhgik2Yo/ZN5+M9ph9M6gY7cC6v/WvKj/5ZYv2sgQHx6C9hNFe4jo4
HKRTsM6VHH/7fWvLB4/+VIV/utJSnWuiF1B9YOsmqWCjZnpsSIxletZd6s3a
NOlPX00gzdssBkIWgl19BmQvYaCnXcNFk/0MOUcwJHZzqyeYVK+RPY5rq9RA
RJfQvJpnoac1tkFzQ3dL8zTTfIsE69EYlTpOvKLgjEa5E6q3M8rTYDlmmrYp
v7NWhSsXMsVdiGN8jQvxjRSobyyA+EaKMDsmccMres366AUkL2eSl3oNxJ06
arXEm6oR9KHezqvWGKrnQPQ05rjqiKChiVfmob+XVRfBaUzt6mvTR3gjbXpN
glr0BQjUpC2cFdCDy4PfXM9R3fUyS5VuPvwbugrvUOHDd1Ec/AjMLf7mG4im
xF1mb4a3Zd66yZbA3OqoEYGBV3/RGB60Qn/JzomL3vDWnyp/4p8JoC8SK0fR
ntryUXisQXG6MIqOcAxDhU0Wvo8C+cXDTWSd9SqHM5a56SibPh6QeJgNpefQ
pf4QfbS/pFB69evKe3cLwYdo/M+t1Lps3a0EFz3j/3elCvrnS+bzrp/Q7/Cv
YwizGEOYDd98SgV/fZERjDNBAxYuCpr+Qr+DPXPNZHRMldAtDfimeG5n2tu1
QRarBn5TCRAeakPqMkZvmUXvokkUZrxJ3zoqVdcxgv254ySeZv5mAdoU4ugU
Amg6Rob0I50xRVj9r7c4PD6MfLF3tMg4x/x/GQpDv4d/7I2MEm2ShIuo19Df
FMuM5j8Bt5kEg8TBbbC5RgWYKbujJYZbpEbLnSK5ybjNGtwifM5f+Q3OdhrM
InD2n7vewWw0u0hm/s80mM26fkg8es5GaLXpzgS0OoMMi2LlxKXus2ZceQyn
n4twWmpx2rBBEFoHZK5XGEGB21mOh7NMUpATg5I1QSUYTgOg9C46NC8RBRtm
plx6btb0FJdjKxvwNhDWjnUvu9TETBhbxjBolZrpfQ0qv3Am9RPY49HsxNCY
xcLOjMPODuoJdsxOZmeGt1mveYySGTuOv5EBO9NAJ/SIaLCBgrQatl2rRnDd
kASIZh2I1rcIRIeZpWvFvOeYNlUQ7Xbz6J5uTv92ocTZMmnE0jRgSk/StkD5
rw1nrIbfOtfmr4L772T/ErX0sA8epIvi6XskEh33tArvw7QIHGWDJ7GKrz9l
uPAWUa5mazDyHrYm4EkU8hThLKjJIwQNV1Eei8jIy1mCsXQLcMXcS43YFCgq
QM15a+ghK54TqFZKfIsiBsLWDIe8lq9PE4eA1dOLAlxUSbn824LV96j9o0fw
+kE33SaN/QddOVsWMVqDrpkq6JuL+JegmstvRDmEcOtMlf/22cxYkqPmcfRK
jyEO9o4uk4UvD7BheYDjIMzcqaNrAoQt5W06eOhajnO5moTUlEh7e1uViXWF
udkEyJYlRLpsYNDrWE+6NvMluqDHM24z4K3K+rN19fHl9NreOUbv+ASe4J1j
mr3e+xLxamcjbd0MgFhwnGZHQzsZOuItGRC/H+7TTga9248PKJ8uzfzdd8aS
lcbIuOQT6RvzMQYLfYPOiLyGvuHGyKIuLyh2OwaJXN6mQWAuVy4MxnYoPA0Q
OPzymTLS8LGfq/CPVyrvlVsSCRxPUWYK7YtMwsDvlKDYXYENKM5GzoXBsZ25
2QLIDbw2fUGgm4qTObjtxojMZyVYGGaaT0uzhnKNhTSei5ECYONc3QbjYGRt
7Is9Wi2/EnC7hCmOuBfxL4YiIhZuk2DXITdQKTQ30bCcThuO6xhYiN7rcrx9
QIxvRTHzpSqoedPBeG3kVac0xjfN1xjn+TsdPGNzI8VX9KvWAMc27TURuhtG
cUMSj+lUT7Ech78jNcdTgHg6zvDw24SYN0ZirOxSzOuvZIfhPOWPp/+hs9Ew
PMOsRplB3VKY6DpEsxylBzWz6Q6CdgqsNrM37qeLYw5hegd3GHZw/tYsGWPa
9tU6QbiPV5/oXGgNYjQ2Geh1aTaj0bNjmwvvusae4/bT76hgzD0YoP0y+DpK
w5pujuRV5rxKErOlz2Lw9nM8w+Z55jc34nZac9t4FPAtVuEhz/CqzyYmXuLE
xBwXP+040U9EjkVWHAvA3MTJwfgnZLX4+aQ4+/5KMXEDfV6HYWiFhErmOFrr
THqPixCVh9XjVLCT+hV7FuE3Sduc9x5A668eQ0i/QDHLS3ib846tEqJrqoPp
CJ3LE0Ce5m2GQY75lTAsBsB41sbKQxnew4INb6j8/L+ocPlkFTRXqrCdQvvm
NynKXKv8v63n2NmfPVbb5ASigwdlBYOTRzW5GebsWGSBcDr5kUk0HmF4y9iT
HLidP/NMWzbLcDvFy0mUGpMiHPG4CuZPZmwjpXhyyUQ2KD4Z2TF/QpCdDjpQ
qlqQTS+Ety6yScPi9RBdZmOVIMNsGVc4OBwtA2+QPwwf+hFHy+B1eOlX/j/W
3jvKiuvK/z3r1g2dAAUn2SN7ZmwrWpIVx54ZSx5bsoIVRgnlLIESkhBIIBEM
iChyhm460ZkOdLe6m5yNQIAEAkxUtvUsv/V+z7XWq7Xqj/qj3v7ufU6Fe6tB
1gxrnXNvX26s8Knv/u59zonwOswgarHMnoSS9TIDsZw09l4DO1YqGAA7k2Q1
B9pZj7P3Jk+JjdBJn4LQ54DQaY1kYLoT2T46elbHkJwNkAxkGz3d2R74y/l0
1to6BUAbSQ0yg9Lr4zZEhMcBp7VTwW1Hnwy8JQXILF4ftt2ckBM7ArobQ7+o
QVeTOu3SycNMNHnIbTPnyATC6zFr6tvGhxBFvYH2xfqpdB2ZwJ6DBdMBg1oJ
HR0jpK0eyUrabhuJKZ0AYizWWADiIgFxkELc2IPLvojpCIjpydv4TMWkA9s7
REznNJQJyO5Dt4oZoWdsffw+XKf4tyGq3RttfAl6n+G8t4VRChZz20vv3PmW
rtRI220UY82hWPzVu/hpKUwPSOHZ3f+l3JfuVe54EtQTH1X+kOuhNd68h37i
LCy14M4eQkH0ywogRl0eZ840jJnFlu4bRVGDzKKlAXOhM8tpLaUD3kZYjGkJ
8Zi79FnlLh2q3CWYF5z7Inf5UOUtfkb5wyT+9C/+F+XPH6H82+iq8vML6WmY
/rjYPdKt3GO6/amVFCAd2n9Zo7xtyxRw7G5eABcZ/E2Dv3xarSS1/FEz7TZC
sMVDIy33nbGhii4+BXx54odu7RavToSvpP0saGdO/QHAA3WWWWPY7VjCh2wH
oLG5mVHsbWxU3s8vVk4lT7F6+DB1R3iszXFSxidJIUNNU8sFbgYzWH2LXQwj
of/fsOzPYNhd3y6JwA+3hM7F34+IdKb/j+YA/QIG/5o6yGSmb6Zf08Ly1q6i
aL+bFRN9MzA4zQyO+MSC4WyBTxwbS1/mTrhXXjHiRraDQV7c98//doy+WBAC
foVWyt6vfhWzKkQpF0VzfGixGo5C6LozpoaGRYJEDkbenIq4P9DFer0yaJqB
C9gSdEFTGUHdGTMu0prBmrkBbHu7+TaFBxDmd4ifsYZBuobhCt6yGubIbi1T
YVOfyreEcZvVYnh7X74YFvDuTARvhmeM1eB1u0k2rObJi7d3aT0sWb02Ae+m
pQa8aV6LEZMvoRFsLXvdFLxwzSTxeIHcFPdpAS0F2K0EiBZot2YE3i08vJrY
C/Kyl6DJiyEENXSqxtG7aS00gaAXY48MegcEKliIa1J1Jj3nXXaxAnCxsCUT
F+u85xNXVhfP2Pta48Rdz4cZ59ecuc+xMZE/Eetr0H/TnlDgLlZRRiX0BLZ7
xyugFk2gS8fx5EcUSGxayn/rfvq/+c/g+rPsBeUuGCrIbcTS7+BujgUw03aU
CGD6QHcJUXXBMyDqUgxh5L/pnjf/aYyLnvUY/mMoHh8CkC4bqvyffE/rXgLn
lGEyAr2JZMsX2wg8W/BD/rYVn/bVZoYsmvPZO8rfVqGcg/UMXCIdYJsJQdui
W7MWvZq4PK0UcTZK3Kg/HBAXtuo+nZ97H0Mehbj72mRl5z28YlYhXYuFrtjB
3sUUaUyap7wltcrZskPTlXbBscPKPn5E2icasJ9/TP8do6yYFGfnE9bprD4F
YTE/7OGYyoUxgbXRoGnVzwWxD6sgLWwGqCc6E4LYtN/TGK6xTJjVlIVZEaVs
maZsvj2sKSuLO5Q5bw1mX8K/7AfKee1G8SOG/KqAsibxluRHkL61NGUjfsQp
KBv4EOPHBj6Epmy/g89Nlk2XUMRA+31tPvTQAdJFjOrsMoAtChXu6lDtRqAr
wM0Y09ju6Qqgi3Acs632Mgq6tOGABBzQG2A2xXfTnInbXGg4RPSt5Od0Os5w
N5XHXbR3hb3CXQu4JW5sJIGwcqli3Fq6h5uBiYw3cYTBs0mv51F7IO2aOZHG
6ThgNxvFLreO11nb5oBaOozuukZYeOl5dGl9TQBbFjGKMdeT1PsUAnagKFz3
D28o77HHlH/51RykuY89SLSeIvnHMmZrSUzNGmthb1vI1HdJOK02JQu5GFLv
+TXJVjqUG8WoVTxYEHH7CHk5L1BPrX4CtrlG7FjOrXF+Lc096c6Ij0DNqR7B
WGXUqmJ/wRCFe/60h+jEol8z50n5G4/Pe5ofp21CCCXZM+cJJQL2WYPatLPi
pYjhMByjG1/RJRJZuMV8+D55O8F1Gl0RblDeNZfSfxNl6UT/63Zl/414S6QF
Z70j7cLZT7uVv3W5cg43KmcfBfDtk42wtbxrLlLu83cxZ+n36r6ZjQa2GdLo
U1rprp/M9RFMXLEZuJqNOfvBGmlg8H6MAd7HBzhmwWHWUnsPJ+Ru/ojdjaHA
HZSA4BJGcDEj+CLaOV30rl0blbu8QXmzyxnJ7qpuQvJ2g2QrQPJnx7XvwAi2
gOA0+w5nS97uxGlZ7GIxWa10eZh6ROn6j9wh5RCn53BCOUQmxmHNYgPjIFd3
6UWcqyvr1y0+O1ijmHjMJL70B/ScO5Q95hbl30GCBI/FSIyJQubyWPR8q+FU
NkNs/qflC+mbgsVpw2JjMaROMcz8VAw+J4/Bq4XBbAfE2NstaE6xDC6xV7cX
ug3m78itKN+iQAwb9wH3+7oDJIsYzgYGxFp52JgRSVDOcZ9hKO8MwezP50nP
d7IGeVeXtckM28xjr3WFctZjiksZRc4TH22ivymAw+SkcEF4nN3aeQGGoXm5
X0u7RmOYXtv+GnWrRiLzFCWw+8jvKWgfAa+W9yyW3sHE3sRjej71AyNUxiaX
4vpCx6GUZS+gnPL/60a6NxEz/+1cp8vxOK2nGxd1iPotCtVvt6Zzu+AVU952
Q8YXil2Q+eV78P2axsEI4IULgGkeza0bYdp99U7lvvEQq+IJ2PqEaoDaNGcF
DHB38UsIjZe8TPLpZeUteEH5s4i7c2EQ+LOeom4Ba9qFQxVL4sqXAV+6R5eg
5S+S8nwtqD0GjBnQC4cEWhgaGPj25z6FzbgQMrj8Rfrf8hdgbPA6zagjM8NN
jCDGMPFAEFP7K8rX/rYdG//Ldcxp/2CLco93KG93JbPa/qRduRsXiBFRJtoY
vPauukDZx4jRx6md7IfbVoTbfts45exdGOU2i2zWxqbtZWmylzMwe3pkwNUu
zj0XEntAArFLmdiWM3+iELuTpUgnJ0WY3hs0wRtFUC9eyQSndxZ6wzX++Li4
xmHRRYYF9JkM7UimLwptr6tBVo3/cn9QWOGumMPi2WT1/NMAO8mbkNJkKwps
ldInyp61QYoPGy2AN8qWtW88oF/b+EzA2//NT5X3T2cqe9SNyn3q35X34NUF
0DbpPEAbDoWZxC/iDRdYFLGaCgK2xcAeECTy7r4zKFcDs/OHlkTFc5C6SyL3
9xLInUkgdwBti//kp3PZaxc7mPngXtMnt9086KQbLhmUdJoVNJisDYyUcHst
C1rD6o3s6otm3hqC2V+6DONM1jOdUMhLn7W9Tdo2Yi/yGDDRGrDi+yaeUn4j
RZ3r6UzaQL98XQW9+wK6pRMIZjCjeS6XVDCWu2kHtL4ua41bum9G/cEr3MSN
oJMlAmj6BKJzCnAemFdNsYNHjxTiuIj7tFNDPCAmA8kBlnPAcjFIzBXXWSZx
qWjlbp6EnAmsc22J6M1E0OuUv6LcOc8od/bTyl00hNQt3c4nGfv4dQjipjD3
plKMNu0p5c15ziC31F02nE68kQq3nG2jd5Ny4NFyyy6DPI6twpoaz9GuAxBf
Bt3LQLUAVLD0FeWMkpEA/oM3KW/DYta9/vX/obzKqco9tk65R/s0S7P2V1tl
eMdf1ir3BP3wPbRjdyynjfkJ5C5sBoCUYVoSya1ppEJF8iF/oiViP2gLIq0F
MTHV2UsE65vMMzBF821PUtC9lxfo3cMg3b1aVk7exVOqFoK0NAGkZSFIWaVN
msGDAKIgdRq6lDdtofLHzlBuU6tytrMzcYxBCgn80TEBaSri98Y9iTOingTj
FBv4l79UfvMKwen/tV/8iL8floTc5lWcbfMvvYB9iMtOS9OYDVEcybZt6lA6
11xI06QM3EBG6cB869d/UCa6tUfRYfHAFaRTbwoRyhUR0QybFXUfAnpGJG//
9CzLN3hhPRh6Jo3HPhU4Tc0DWw7dAs6cxieDNG47xOiJx7o6TdIt9B8iBKX/
o3u0uXs6RedqE5jrKYz2xf2+7tAFNhZFnj0h9rC2g+lYFRmsyeov5kqFrTwp
CNad3UgfuAnDvzE+hI93Aqsq8SvnK6e3Xh7HIATDVbos8/jgPswwASceUM2x
6u2brafknEW/i1or6buWNwxec3bLqwFenTF3qxhaS4BWy95SoUQD29sqWQHT
9w/93gce5uUW9YCOuB2RFTvCkJYtCSKt9xSRcPJbpA8r+GjmAuGdawIRjPfX
UjjFAE6zFN7XJWVqrz+oCxkyKFzwMAn+pEekzXgKcfSb96B8YAr9jZQbZhVd
RAheSLfzn1DeK7coZ/4weBCcmasfR0QdI60Bk/nVcw1081j90BvSuLZhtDIW
r/DdYg5r5qqzOI9WbOYdRQuk67I3ebicLIr+KBTwUfYMP16nvBN0BBzpVv6f
6KID4UoXhgMkft6rIb1FoeYHtfTsP2E8uru7gh2HfOQy26p5EM4xhuuJ5hhu
LU3bY+VE2rdEvwa0TTNtn7iPKNrNpZIZADcF1mJvYrB/Czd6rJC6xQnUHZBA
3eJk+coGBMjb/g7e/+QRvP/JwyRfiZZfnIhSN8esHRT1HALWnncehYtTlIcR
T38Xr8GtmKO8W64PfAb2e08P2oRZM5JBi6EYBrT9pNlEtp5lPAf35euVN0Qm
MXCG/Ad7C/b4uxM5G/UWYhavlVCyEMD1LANX/47bgpFxpxrxzJVlCWT9TgJY
i7i3jELFbZ6RoKkKXcr6tKcfI6GHz2gjUbXha2lxCp4a1q5dE8NqmHBbz6Q0
3gJGUeN2szETLHsD8LEGCxL4c+cKTzcy7DfyxG68fCD99I3UNuH8AF4tt6OS
lOsS/i98CId+G4DYBkYrvjrL1B7N1B6uEEZfKlwdo9solrB2y4iAq94F3w+5
WgqY5hK4mlTCkEngapr74gKmTplMlKnn9Q3sfTtJL23g2Iv5uqM35GuOe8tp
rVDu4qncoDy5n/FmWC+W5t7y7v0v5Q4fTOTlufImP0Zv1zKJ11uZRL8Sv5wg
2gxamrmG9LxwNRT0/2EwMfd2NonHsdNAz6V7XBwMwjaNVZq6Wdy3G8eIxDXJ
tPrRwll4yHocMzh7NvclqAA2otZ96k767Y16gPJ1ymmaG5gEFovaASJoKXL5
8zqKaOmCsmUpiVraDPtqlbuXzoJD9Qqw9dbMVn4boRWlwCl/D2Spd4Ced7SW
G20o6lPCYMNfpm+RFr8nI3I3JQB23l8QSN2I3PWu+EkAYECWz4P3YPaGzeqP
x0kAHiQAhuML+DJ6y7gvZQB3rmPZG/gHSMiR7LWPodqM4PtRgfMrJQ7pqHcA
+Eq1YpHf2xhh72E9G96SwC44BXazCW5BUQJ2M18fuyJxz/AfvZqxy4k0au4z
1yp7HOH2P88PcCtJtbmFrsASGK6QtbmoKRDLpi1ncxHYLYUb4P/w3AI3IGkk
sha0aRQsRJH7rfwUWjfPzBtDbr6G5efyX10833KUuLBytQNgyZyWa/o0ZDmt
ZkAb5NfWhYQ1tJVCshT+CyQUxIKt9Bj1xRHCrosRtoSX/jOE1ZSFkrW3YN5c
OuxIyeL/hbJppiyWBOyezS1ld2PK5e6Zmq+GruAOT+K56vV+qFqmqQqiar9W
j7JII5nGI5A3reURyFY/RboRn5Z4mgZMkegWnDJMi9Cn3CVzCIYEzaz/HKeg
xlOsv2giNzp60Rf7dxGJ6HHcum8OUd6DNxNJiewtdCFueosANwlvRzBNgaWY
TnSckA8k5XG+MsghBZRSBPD4dQJP0+rH0+1YgWmdwFRUbGOgYuu0XYBmmKol
63dEsXrn/yBUqS1apb70OIGSriN/3q7sL7epwGENXAECyeeI3XqVt6eepapz
mI7xT/iQDSwC5wDthT9zdSN6y/m4MQ+i9DzCq3/FT5U/+FrAtg3Fy9voxCpx
9lWKPWuatmmNPeutmazcrQhLQ5oySiBlhaO7+YAHTbWBoFGahpFgUIqWywNp
O9eG7Ww3bixo6g5+UGh6hpaznWuZpu5CEubT5in/ddr9za3K2cjTgX3CcvbP
x6VAV8p1A5gOiIKURdslFyq/a6VyD29mkrojhyrv3y4XBXvpBbIc+aWnRWnC
BJ9cFBagNNs/SqNZM9gFnDVLuS/+lzYOvMt+wCy1x96l7DfvCFY7FJaGabHA
H1i+POBoxB7oh6NFhqOBL5AnXWVMRDZQrnkIPTvBRx0QtQO6AuWabAd0m8cy
xlyN2QEhR/GGq2WNve7OQKsGeDX+gFRVCEiNSOXxE3ibPi4/w/g5HmJMraeN
NniIVJ7uM0CqZWMKB41UPNYMzK4n7b6xgZHqtpM6aV0hpsA6epynRaymb7cE
KA15ump8oFRR2TUG+33sQ8q78FyuOQBLGaVnJqA0Ouq3b40cY2LkSz1XUqBP
EKV9hiW33HJMxesum6/ATtO8CZB+/vND6QmLZxBSmZ9OCwWpWxu5YXroRkxC
U0f6CRORTxuv3AUTSN/RVWQTXTY2Ek9GPCxkbQKzCa0QjVCn0uixFl7snBXr
OOYrgngM8CDECl6LoFXdSY/G8dpgtOpYvICH+kGiAq3NYhCktDw1Yx4A1W+L
PHVv/0Vcmj4zWKRp83zB65fv8qg0oWsp01XLU5DV/hSEXaucP7UzYe1P6LFP
6Pj9hI/fiBHbJpQtEsp611wogxxEfZ5soM2+Yz7+Y81UBcCiSTaLkLedztw/
LpDHUu4feSFdSFRTF1aUQNaMJutO+uCdrVGyWlGy4nkFWC0DVjMhVoMk19nc
lwQuAdC6qIqx6r1Nh1YznQIntUglgRrxBcqMLxCj6arlksr6+xHl/fJK5dbM
CryA04M0ZgUUJWSwcqcBaSSDVao16ZBfKWfkjQp/uY/JkWGPvoXn02GW/vzK
cPjv3PnKefPN0AIwmlQsACsoJwBAUwzQM4L4//KfhxCNLgkYSUklEfQsWUGE
ADkoOdrn8iE8FqkmCAP+3vBvvu1JDvi7uVkM0jSvihEL+EOGcp2BLD8i87G3
6G8vLcUD0zL8Z2ek9bbhTAJIcwFINUztDXQR1CDVEC1liK5vCBuF+6xP1zby
Mnh2H+aVrWGQRpVpsd3+VqisqIUUvVA5s4kcW5q0Kv02o7TIxPloUjTQq5za
5YSccYxMC8ykgAbUJFSieZPGCxvpFKqg03TpbAVIIlpH72B2SgxkQElthnvL
3roqJGcR95kYOWvpwFpdzmM/MKLU7lkigxBeJtHQOBllrG8BaZN0lD+QUQc9
2jhK61IT4b/CEb4zVxJaIkZDaqagSC1GZoaFKXAZNUxFfuacUfeqQIIuGUNs
nEkhPF09/u0ybHCiJBL7mBRhl7L/b4zi3R5K0M/6NCQ5pUyoJBmBeH5vnYYl
WnekAGA+vRkYmXGaxuuBYC3SPmrC0U2spAsBwRKoRLTubp+lAEW/Z6LyV49V
/oYpJFK3YAiht2OmcnfN4UbkRG+5S19QhpSYngZH+o5V2M4ak9JWSfgu896l
nQ3lKorIs0BIXQFwwUUROJJawVwNpDsJk4jj69vpGJklJiorz42CyE8oFP/z
CZUXwZeaCD7A5EUku1cQbU6+q5yuShacnJoqFJugZjAKLNfv0iFxRhb1y8iM
88du5W1cFTCSlxaR2cnOcF+7WXmvCihZeN5zmWzUkTcoexTFUP9OsEQsF6T2
KZC/8UYJ4APRmY2WwwaTz5Qv1LgsyrdLY2NwZ03XejPDejOPlKSOCi3SM/Pj
dTYru3r6jdd74wDFgkAmXs8wHsuYlus0IjEgobNDLFNeJAiLAbWHtwS/jIyJ
6GxVZgBxH4wAabR10ZfGqMiNXrxWy0sOxYl666it5dXh+rC4BYxRt7VcaGiI
2FcuQEwxEIvs1dMCGLp3/Ucw1aEzk4CwCUf8Fv5KWwmBsD1RVpVFfxb4mHXH
PQr6Pfxr5V9Lu3dQMV3ErxAopt3pdNK5VZAhzlr6tod3cUPJC/cf7pBpxEDA
MsPB5pCDmVNwMKs5uJ5EbstkYeFrDyKGnkysMDCkmA91VOAfWtNo7XYSB+vE
6eSED7JLC18WDjailmqsktLXMcjQ84KAGKtlXEyNwJhM3Nek3KnDdd3/AoPA
IvtvuwSBaJjI4MvNohMZcbx6AdK9oUzkDOQn7N2QXPRaJ3MwbiQi8CczBvCX
+phTOydpcxEAGYIl3Ft+92RlH61mw1IC7bTIQWffggL4eU/9Tvm/+xVPCIPV
X9/EQoJL6H+bFmgMFoUYFCsT6PPqpwfoO9ugT/JadjMLgGYWAKvoJGjrldax
VqLwlBCxo5dzEDiTCEedfRKTg4zD6WBspc/7HESk9tVxZSY8+ErPPxNOglAS
g+M//1D5rzzH0Tj0ozdrLAMTkfglp2cjBrOYQDyJjcUJbJScfVaWIe4RPk55
I/A2ZTGOs4BGZ/StjEbnlRsIYCR2zyxSzh0kpF+6Trn/9s8ajxW8eAPH5Di8
EJObidUXIlEcSEnOJpUvMlJyIFZBMnUMGITV34jXfDCekcDFs/oLwvP4GA/C
Qz7micpUUhwO/nEszkK1gx0ew8VVDXybwgMp3KPPw/91tpm5Dbi2tlPMhTw1
ifVGiaGCTstdWancldVmWbw+PiwxXS/PB9bMyMwKMZ32FcqrWxgSs6+GA3Im
Jr0fIdMAMwbLtwmWG8DvdewTo35qS6s0AmcmkjtyKscoQJPBaUkf4JOaSqO3
3ImPyT3i35RnlPebK5T7EL2KlLf7x3XgZSFDB6BPgmbdIjo9eNpugWYXHRoN
9Ph4Cr8nPS7QZAVJr26eLCYnGoGVczwpu56nVmgJWUqPodYzw9miCfcpb/jt
oiGJnzrkzjFDG3RD1ghDBzAQtjqItfvXkdf8nO3HXVEdGYCU/v4LgfTzDQxR
1pGapO6+hkBHgqHS9ygTcBuSGooyQ9MJJC0SkroHq5T7YSXTVCLs4kgG/qnB
shbuPpSe7esgZrZioI/bSqp/1XxumPclDU7SVbJuBlFzBlMTLRVTjbokYMwk
/OJmvGEbf/mOtSwlWU4OiMCTsElfkqDpVDUSOFdIxL0Qy33TYf0ZQfNLzCzA
gbbz5RHl/PmwMgMAAliefTYPtHK6quTvW37LgfbXAOUjg8NAOxsmfzwEakBk
aQIouVTUAiNpY3TQN35jWEBJWTH0DBAyKiLdZ/5DuUOvVf6/nqncq3+o7Bev
5Vv3pttkEOv0WcoZJm8TisiMyQAF87qElMyxY4niWR1sR4enagWWRoLdvfeO
gJADE2zKb/UXbgseS+TBU8Xavbqyv6fXjGoFDUG/1W3Y861sV6/mhcy4mfsa
klE6huQMXh+E21YUkKI08VsiIjPLfXGUlNx6O2Ri8268d73ipYczjMqBdg+h
sadaeSsXKgceZq9ZzgXrWZKG16zM52QKoIQ1Sm9JtGRiCjctcNMh/cGpoRR6
BmRWuOg9QhfJcYSsP8jAe2Zkxn4Py907nRRKLX1deX94SvmP3KC8J69X4CYB
chWfrHfTbqSX0i5x13TQwdkPPRHvtwUKNAbR+sUcbKW4uMuCe8s25qZ6I0Yz
9rpK4SbYOvERZiuk42Qkyd/i1E4Ers0TFYpOZcQ/ipU4A8RDUhGjG31Ktxyn
sy7lCbokNjc8rRklrZqnCK+SiVnCCVvo2h4Tq7IKR4FYFc7+FbG6ZixuvyLB
+mfi7KeI2SlG/ZQHNIti3bxMp45CzrobFyuvfYpwNheamgFnM5qzyATlcdZ/
b5myj9cVcpYT7QFnV9PRS5wlrYU3cjZWBUClS177YpXB3QwblpazrpaXrmXA
ZgSzBrGsTQdyb0UVKs43Tdg0y9Pv4S7uiUxF6yHi1pFMnSEydWW9crbQxvni
mLL/epIx6+/fprw/7Qpxu7omxO2E0axL/Ssv58e+Bmo3tCkTs0dRGySHynRS
NIJarAaZFtC6PSsFtBf8hEP2NIP2O1E5igY5ak+kKOraCwtAa1LuQbRu5KgO
1YP1fMoXaciWGchyiB7I0Mjo1M6mGGAHJAD2u6cKzbtkClP5K5L/0dKzlejS
zf/Xuor7loCimqyyZJgmqpafGf4ba/dGwnTM7tKusRm1MtP9iE+dFsqJm1mA
1J52QSpdYXCgMTi6CSR9kUZoxWWhGq9vWqq8ctrOXTX8uEkPuff9Vk93Qsf7
Q/fwZNdBe/BuPTQRo7jPV+6jtA8f/T1x9WblDrsbbCWOFttbeRzFNjrzdpYT
CLkumHEaoPTZ/1bexCHKrRirnL4F9JuAUz6L3FV0BPZ04DoXshRREig6ULxN
t25JwE9v8QwWonA8eetvaSoEaMcshiey4+4EEaeiTmFGTgnZqcUp/R+4ejYL
VcPWZpQdjNczvr7JXBUT4A0VrjwvgIVw5dQR0kUQqXVvsKTl2WMxaTbhNGgQ
rYMKRStgGhOtFsM0Z3+1m85/an/T7S/bSLBuYpDS9/5sE57JUF3LTRuhlnO0
S3m7agWs6RCs7ubFUkOazcsWAam5BLBmuU9DwHrvlwtcj9VG2SpOoNavmJyh
AzVM0MPOlpXK66D4s2GOAlZLkTJiwNIH170dKFg6ALWyfZt9AE4MXXARluMY
TPqoHxVrxRkrUvYMe3U3w9WbPlv5L4xQ3jSsxURf+svjPOuh+xHJtC3vKHff
VgZrFKruyGfNLGy/VpF/F30tuHLCnoL+RLgOyNOx73EEy2R1NlGgv3J+QNYU
k/XH/UlYpusTIoZCut4qSfiZswWFN98cBPrxrPswBbAG7ud55xFaXyqsvu9s
jmGVrg0mO3TOaQP6bPgYHRPtxKn2Nr5N2S1NGqW4x0hNcZ+zO7DOLj21pV5g
CqhqqapBmwkex22bwDUW02vVCqxL3xZAVof4hQmjLoZ2qG61ZQoPFnrWXbFU
udiQBrtaxaaZuJYz+Q3aPrRv7r8d58h9t2lcWphGCBP5uU9gQCb3lvv4XYRP
2pnbGVXb2WDFfFlblytm6EDu0+7ikcpd8hpTEy0FbJaGyLQ3blX+nNm8hEqA
TC4RDQzQjNNN0mLxXOVPnyrIrOeVFbe3aXBKQZZupEFpDwhAe4niTRMFn7Vv
BvhkeqYAT2HlQLvNVDFNlgC/VXO1ebxwk1k5Os7Outfo2/Ia8M68pyTWx2QA
OaAyo0Vn9QhlhCfWM4uLzrEBJ02dUiA6/7JLOIn21Xukoej2cxKdREi53cyk
3GQifG9Pg3KOrI4BUqJ7OkP/zId44JUGgCw2gGwKAZkRQEJ5OodrBJDH+wMk
F37s4zlweCh/C7cYJ3srIVl28mevIzad98/K+xlKcd0HHjLrlxIW6X+1AGX5
WaZt0hb6u7Vb2uq1EUZarEMHAJLOKgpfGlqVP4MOkFETAkw6u7Yo59g+5dWu
UN7SJco5tFs5bbXKLJw54R9nojv8aY7vE5k4MMJEIiHTUJiYy2ciQnvAEMkh
DchzebDSiJsZiGj5QERyyH3ueXncSE0d0CfCEHYnCbzYIM7OFgLhnSEISxM8
znP6j+DbWdnAgm6hXY3bpka51QCM3goL0/wQeIiHW1dp/KXzI3iRmtng4fZW
PepJ5GaRVptdcdgVRSP5Nuad4nL5lPvAPbgE30z64+ab6McO5mZ4htUK76Xt
/yCy1O5D3E97Sfn/9B09l8YD9DZ7ZKo8OgR3t4dtR6PBXVpwV6MkDVSNDDmI
5yD1snBEhHiLeGaRnbUyBzKWYy0TAHpXUCA4g65y8+ch6CsEYIlMMQUAuvXl
AsAl8+l4R/69l4er0mlZqB0lI55DPZG9amqgHwFB/5nrFdAnQTg9Eyu0N2r9
2IbaNIhIixHIWJzI1VXj8XacPzcY1CjEhHy1MiHfcEbeMLoI36wcDAJN2dWj
RDvmEqLwHPdFoXAkLr1Pe3JfiwjHG6/jSFyYmI1pRzARRUdfoB7+8y3YUZ9p
PJr26fqYfPR3VEXpmHH21VNcPlUTkjblnznVFssoMR9LE3xQS1jpHKkNZaQm
paBSFxo55S8rg0vRkjiiVhUi8hxBpPvYPYxHe81GznFuJDo+gLlh8CCf1Xz8
BtjMipps4li+kTZdM5IEndLaOAHBWrIDhlo7j0eju05TK12SKzhSBy39RymY
Gf+mcnZvVd6cebxESUjKn30tNNpffSBfLpuQHzJoNKtp72JdxYAM0KhdT/+u
qwwSLSSEvAevYhzSY+i/i+QQI5Gx+HtOCiECz9eIUlQkSOQMEMLum+igmj8/
1Ib5OCxJwOEP9Ph1UK69I6BeCgikpwYA5L9aODCOArGpXujX0iRS0cJfqUis
beLvfABGnU0CYUmeCuwMlZ47mALdwRTgDmZ1NpjVGf3tXSyrh+u1AYvdR6DY
6PFf/UJ5//nvFBQTFB+8RznTMHU0AaWHl6jsreBFHUnFtc2T1rVQBrpvWKSc
8nG0S+5W/n9ep/xLLuNlGLGIj9AyzeuuR0gZ6MLaAJL0CVvZzcKaBcRLYSb3
OUNOb9wTEmWPx2DzUXSJ50W7ttfgdTvovXY38LqmtFVCJ/OhR5VXXa2crZj6
tZCkRaGUzCep4jFF1G/vDCYBCOTlVl3rH5WXEpmfYXcv1BbkeJ3KofPpNbp8
g6iIzBsny+2qaXK/ZYoKsNoMBUp3AGAtMnWzgFaUfmq4IsNezcvbvoA9O54C
pj88qEBWTKSKFQeIr0URwWn4mskTnMvGM18drHMSF5w5FpxfReD61/dkrYHP
uWD+C8xLkoxZidwlzUQ7w/2wJYZZidKXaMxS+6I7rKCPJu4HALOiPjPe+xUR
9ZnA1TDPFEjQtLO9KcbU7zNSM858zXKCKbfe9cjjGrSadTMpPgdQWYumjCKl
XUtoZbymgFcLXBXtCY6iaa4WOZU1tFveUv5vZX5Z7xdXkwT7T+Xfegfdv0qY
nReIX3g6sqYNWU0wnjkFXHdCDtCXejeAazFcTrejXHnNi5X/yjNBWokLkUhv
IgCnVwKs3zYWp4D1FuVPniHPf+lFAWt0JDxBlb1MAPvii2IjMmNALUowML+n
gWpgqlsKKKUfCGUJqKLp+zHY4rGWFvNYJoBtRHkKaVMgLd6wiafx4/+Mx+BW
NAYXAMtcf5bIzw6dT3Lv5XU576UTj+5JI8ly0UXKLNx5Hz/h/nuYp+bWmTYB
bwVNWsKr7QElem4Re3OzcseNUO6bo2RQ5xr6lr118DfZcCQI213LGL/AxDyo
vNZ5ylkwlvHrPfaQcilatw+s4Vt3wljGMD1XOIxpPgyHd6GYKhKfi2AF2oTD
y0MOp0DfFNCLcT8CXsZuCfdphu+uellU+kCLtj4D/rpNdEFtb6C3Dvm7s0f4
mz0Ff1PgLwGXrentGL3UaiC8jX0OFIICvnic4/0mPAoIl3GxUyBxxxSCGAOU
GL5TGcQpPCjktTjUB4xbWQgTe9PMXktmmR6uGLkavHblc5J0quZ5vatZ01eG
Xig9Vhjz61mqoxKXHnsfB593902kSH5N8f/iEMN/3RWJ+aFxdzGCAWB65y92
CIYz2in9dB27pJC2WAWpF+O0gqDftD6WtiCuSTsRMj5moRJxRtGMnE2Ducm4
5RnKQtx2LVc+KXTg9gc6yNe4dabxgoG97Gxq7LKq/T73Fv4f/GV5m+pP5Kbd
O+/G599NZK5pVE6jCCUc4g6OtYVLlX/PA8ofMMiAPBbVf33Amsi+f8DSsd8j
gNWQldi+COLVbS/nUX/++OHKnz1W+ZddyHE+0kdpxuvZ7h1XKO+cgYxX/zek
a4c+J5clHcYbtJo5mfgaMn58MOoSsi7Aai4Bq99OwCoRMssAtQKsCjoDAZsJ
mBqJ5kMhG4nozX2Wr0bIwsbsEqwSRt3BRMh77mL5ibVKcR+UDEUokfJekBJP
pHvm1pkyiQvSO7iIu0PKODH3SDcy9r3wWomiKUyMikR7G6eS+HYd5ohm43Ur
G1oYPjRmuGB1fYfGapXI2+4VCrJW8zTLPJ0zRnn30bd88EHlLCc1tw++8AFc
T52WZaxyee0/waoVmAG7mErC1IgBIEwliGIokv/sXSxiwVG0s7R+jeCTns/8
dCpIVf/sUuFnF/zYkJ+YmHUbb5j++Vms+YmtFQcmGu5vbjTATNur54gpiuHr
tZgApJ6/LngJoYpGotXCHeqB0NapjMkAmzz0SMRqYA1ArTbp5a5qZd4mIeiw
GEFhDUC+0rcRglZhvcER3ISngtFio2SBTbFL6QP3afV6JW2rl57kgtK9SpJL
Rr3SYwRO+plYLeszpJd2cGN6wizAQ1tYu9KTNEfXK6Nd6XuxeQp7wLAUHyB9
jzIZJlL/kryPMBSyFWVRBQAt4nz9nDEM0ACczQuVu3alwuihf2J4ylLRU2YE
sLRw57w8rZr2f/gj5d1AIe+9g5X/g3Pl4YsFdY+ogJ15o4AC1JlIPS2oc7Z2
h/VJvNxPGoTDfNc9gZGJxilzgh1A51YgbzmXi5egiL3LSQT+8FsSqYugPMsZ
fqMQSxPP/831JCx/xxG6mfUjMCtJRPpDhnCtuiGdd/HPlDN1KiZ7S67DtEJW
GcVIOiWOu3z1aEL1TEQ9NjUw1Zwxo+mzBzO3+KJD970Lzo/R6/4H6JJ0PxYQ
d6ZOlgFAMvK8h/GA0nasIdjDGrKbVQ/+7u6QxiXv8jcvcoI1UNqEdrhF623j
lVizLBu5VNPe1KSksAZse5XYRmfMerzMyMVSuyuM1t1XhzC3GGlLFuoVvqmt
x3g3rqQG33KQkE49ycw93dJM6L6DN2BEL2q2cbU7YvRZCoDzxtEF7Nn76SL1
IuHtD3RZbILTL4x7t45TG8y4dJjrcfrWsR2vrATApU4HuJQRiF2BEEz0PlOa
c2uJ981vkfgbp4c8yswc9GeMddCFBLk0/rAAuAwTLSO58dfCVsN6rnp4gLMV
zyln1iOEtFsjOHstxFkWvSWq0HlNLH2tAPexAnzmPik3EgUIlOXsL/eSAtwj
6g/ty92iAD/fjt/0ORSggIwkYQAyLQghBPOzQNEA3IDMfekBgtjF4m+eGfqb
EIDI/ND7HecFGY6sCKb40CiTifi3N8cQRt9pd5eGmOWR+GGIQeelWQGmowrQ
WVShfuK+hjkQvHseDgXfoK+FsUwUY0GO2jpFPsbExdv5FEWfi6INSEN8bPQb
PQdIYxa7Lz/DWHMeu05TbVBAtF9fH4THJh/t3qwrzc/9Ies279abYyTD1ihA
2aAAZWcyrbJJEbAzbhz9ujvvZDhRdEn3cBvkM+gDwCY0AOoBfBLKYft4GGKf
TJiZZkplAkoZKvXwpJvdbH/3tAc4giBr05wS0YV56fu08OrhJwBSZ9i9dPXo
a2ZABZAaM0rEl/YV7dUUYbYuSKRTGnjCHBxdrKuBJ4gv75GHCUoROO1glm/n
GRLzMi/9QclZtZCdPD7AtzdwLMuI+o4GFXIye3VOJpWQlE4xqDL2wRBUBlAU
J0/neYZMLgYeYlmCk2ihTwFUaS6TLInSSkZ9U2t7W7zExnFBaXgKf9ARH6WV
JpbgCseNSDOec8NicFky75CsYEd/1ZoJ7VmOaUmmA9sVmLwYQS2yNZpghRwr
4j7nnaeVGIV4GPfiNM5RHMReczleAXxl7b/uIxX2PqFrr+ALKozQlYuSS1PL
lPugd471KQ/JMTYNhVwe/TbnQKOQK8V9GjPc8w76iGDycavU+JS6h7AzIb9M
xaRIsESC8Q4GubxODB1lflmIYGEcoqnvcW/5F/6YI0v/mmsR56G3vDvvU+6L
I7ipf+XeQgLPblrFDQYCK3p6zDzP++1NJjrdQl1gAV7UP+tkDrfsZ3/6IwnK
TQHvTJR6KtxFolSt5LI4q0yeBaEq1Js3b4IWb1ln8SQi6RV0qTlAJ1K57GMi
nmRcMt7P/0mPIfoX+a8Xn9NfF8vr/qfyr7tWKPczTblUwgRAAwLKDRKF5ox5
UzAGqKXRByy7RKqSqYFlD4Nlm1AKiax/n0xO0ReMtBbVlYqizTRZ0BmjWrhC
wSCvM8SeIJBPUQ4ycffbRoLF4kw8BsxhACXKvteKJuNY842RrMUYc+10sX11
qCDufkLc4kVKD/lew7MJGTHWq9t2rLvYx8936um5CDB3tWrMpU3eBGhDS4Ft
tFEWjifNsIBtMHtrE2asEMDVhYD7rrbtIklncekeUf6iRTLskKDm9DYxzCIs
c3qahWWD0IvAKmHfMnDfwPoGjS8MKzdVNuM0stJswoFkWmwVM63SQqqJuqQG
4wgJU0mEqn4lRigXs12ZnEcSobISPjojRWQhjQpTkUtN3xohIqsepYJEJeIU
i6yv9uE5X72P9/pyT0Aq+q2f90cpb+8q5Rx9J0qpAsPNEMpfOolo1K78PXUY
vk9cKnE/rIpgiiPFJKGVC3PH0FJuXzX2OXrGlPtOOe2GJhjp6C330TspTrlQ
8HOZxs9Cev+JU7h5L4+k3fvIU9A09z6k/DsQNf6IyWYlUOlnp6OSFaUStuAH
ZsUPPXwazaCJA8oixlDGW7WcEeT0VLPSctbUmACyGAEk1BYYlM8hKcC+wBT2
lrq/+63y/vVHgXJkuRUBEONBw0cGnBTaYkX/MIXOAIUkIgeK0FA+E1VZaQ0k
HRYyk2KhYScTJ3S6IkTq7NCgorgxDAc1kyxjhkVkl8VM0jxSvLwyXQPW0ek8
luTX6FdZerkjn2O2uK+PCqJVHk6Dj+2lj++TaDUFKPEcPoAJxfoTKRaeOEoC
QkKRU03x/lg4OSBQCgDKgj5FIM8PGDVZ5AbcJ+5Q7oMUEq1cyYkAb9lCgxav
cpFyO+gp76Ayz+3jQ3ctUWl9KzdVhD7rrqvjIlLSvIh72b/CaJ4tXNC7xYTC
mDqYSNc6PSBPgB6IpwL0iFDSwggDRfrhDrVKie2MMgJtmDipBO5kQmXEYc+8
8bxsnbNyrvLuJGV01eV43cl9XIxMzPmC1BERhxuU0l/E4ifZKMz5bGvIHCmH
TkMZ+X+sk/EmPDi6MKwTcZT1rqEToIZ05PENutFxeqKFDt3jDRo8QBAjx4Dn
aFUBeNjtJ4KKJyVBnU0RH3DDyPmugIfNUwOei7gfZDc0K3fBUm7etNnKHzlG
+S+8qnzSQf4w1ES9rPyhLyl3ElHy6l8q/7vn6NLdi4yoiFv4l3wTHGVMYGhw
BD9fr2UdDwgz0jvrWpRfNU/5GEm/agmrIx0ISjygsYRLBXrIJQkMrzVBWJrx
M21agJ5cMnnYfM+eEjXnGtSsy0MN4rA1wjc0vt+r6ZLOl0BdYXSXEceps0Pf
ZfJ0tcsMuoKZQP+UMVegebojeqdXD3fjiWuo9bRQCHcfaZz76PwmwNAvIsS4
o0YzaqS9Tn+/TrB4/TX8LrqLe9JelwfonB83WsTSIw9ITcmNNyj/rt8r79Vn
lFs+mZ5Qy3PErHxb+Vg5ewqWceHe8qe8SH8P4abO4T7n/+ZK5d9yO0kcOvwW
zVUu5qSpo8O+EaaT28bXUMxM19PADQOBGlQxOIRIgB7EWD1tmlt6UNu2MPmI
MI6H/hsZxDBqkBIZ9prGc/SWZhZZznJS/5Oe4KiNjgdtqE8W6x3DKrKMozQP
y4jYTBZABCOcAjUCkWnGOzcKqHJknnUeUUCP32sUkOVO0gqodomhUZF9jOhz
5H1pJym6+Jzo9DkGZOxmIgVA2kbgiQPJPbhauQc7NJDWaCBlEa1FCz0AI++q
SxCIbcA7HadjkjDEKBrAfdo5XMueuTxe/48x6ZwQQiwUxtAG/zFDKGs30t4i
EAUwmr9EuXMxDm7cZEwaAibRPe8tuqjNpJBo8nTlDnlRedf+Rlh06eXK/90t
fGsGUMSYdNk3YpIJ3hKZFI3aNJPc1bXMJLdlufJmjVNOHxdP7YG37D5Jkuil
p2lD72dTbz82yp9pV36xV3lXX8Zs0mXOjKXJU8x8LcSkNBIHKXGTvAsuCB04
fkWWOWQ5U2cqYIhR9G0BkrNoBZ3SY7mpQeiL3FFIl7uvv6FwT/+FnnhALBj1
hjS+P5pDovMYF5ZH38HFWI2XcS7rfrj87Q4fBuFOvYUnpzx25b0H6BVvvqzc
KbgYu/N5wrdlk5RbPZ0bvYJ6C2YK9VAIWxu4ITnINZtbq8LZWr7NfZnb+rby
qv+g/LdfoDeR1LVbQyqlvko8LWRG1mFdRDrgN6/GVIJcAbRlFZdwoKlg8Guz
MGHbKvNYUVDyEZkxltc4QCVY0yRxo+lnzHpWuXOGCScyugcnGidKq5OahtPx
ovJFBVPa8MKY05ZU4TIgWKpgVegFkwwgsixVbvg1AwJ4sI9TO7wP5hdHR3TX
PkR8OLIHL/loN4OB4sePJbMWREwGFp+GsAiUi266KiwaNLEZfdUlLEmYFMfo
sneiNUYKGY5Q+3VIgVQbO1SiW6Tf0Rqql+8kgONc7d1EwIFmgRoWUyPrzlog
o7AmTFPelJkUwUyh+5jL5+25eLtZc5UzYTIpYF5SDGZR2r/5v5X/wMPKv4ku
aL+61rBkS5Qll/9jLLG4T0fDLXAkGmYxM1ZXK69ilvLmTFD2Lg453uvQ7+80
Ubj+Bb8X+jSYwbvz03eV++Lj6mxdfvHDH8kVGafrj8xJez/trpHc1EDuLfel
EfT3cG50PlGfdl8ezuf0y8qZQXqooQZnAnrLxmlVX8mNlHk911420CnZWMEN
Ip6n6mygGLd+GTfslmWwqRbRqTpiuPLvvJsIQafry88zLei/a7mKkg6Pphrd
qnGhrUKwuGA2AX6C8p96WvmPPU6REX191AWvwhxJlXSOTJY0f28NjrYN9Zio
hAmypeHUBDmT+xL3nfnKa6PjoYLA2DJdOe9gaWo6kXrnilPZ2cVWcho4QVaq
RaBCATKgUspAKbG3Yh3BTt0MLHTZqQHI1lVafxRzTn9bpBm2ILevdUgiXKwE
uDTKACnUKknt0xtiH9fzuiAaOKMTgGMhVmLgVDxrvJp0NGZCE2FSFggTTA+/
qzMIk7gQ9fmnQu4covZhyJ6De5R9kKKkQ+/hEw7txs86QRqFKGSfeJdespNe
upNZVMQYytqfbqFjeXOAIqNXOM1PTyLJYmaVct6tDcYAGN8mZ/QKPeV4o1Co
VAIoBE9Gr9CXOd5wKg7JKdoW59D2lgIOeZdewAxiAn0HfRrowTZvYtViGnPI
AoboqF68XDlLynnMkzebDsBZFLcsWCLTFi+lc2cJ8XLyNDo/RoJGt6E80X/w
UeU/8ZTyXhtJ2p2Ye95PVRRJgQN05TdCkgm5TD1BUvpNlE0xlI3XtJTVjTdz
HF146ajd3sGkchZNlIRC2jCKjofP9zCdUGeMKcxBqXidGD12213KvZ3IcMfd
UALUX2M3cGqYWd7IjWQt9QQMPpkxjJao1C+fStBbDKSBdsPyAEjcGqgRlpwK
+gnT3lL+c88zZuxmgIwk50vPKXeYgVMmCidnBe2nBcgt+ePk/KT9NJXOwVbW
d+hzhk7c6C091JySHrI7DaVOqXPqQkoN5D4TUKqBVHrXHBKTPNfqxmU8y8lC
ma++iy4YF/+rcsZPYmIVaWKBVutDCZRmYpXaWztDYmEH8/2OwLJhemn5I3LI
xE5GE0XZ1VceaKKcZL2i2OLWzAPeCVYqbUqXTMsGfo4l+Xl4OBlQyUgh4yCL
i5NiJp0ZaKGFk2U6YGJSgRY6Qu0AuETqmpAkfKLj8UOC0sHd+DKHWBAdCYEE
enCvwcRc0rl7glOKBZLl76hTztGeYKASw+nTdQGc3I45yl27MAATnJ0iA6f2
MJga9A+D6HsheQL/5gz0liZPPe0Rog+as7yKJE4gg86B9AGD0OxKOpqXU0xA
NHIX4qheTBQiWs1frOzFdIIsoZNmEW3HBYuo0S+ZNEUhVIAZ7Q2jK/mTzyj/
maHKf5Z20KQJyh36TP9UujpGJfzXgbaq01LJBF3Gj07KkgmV0h7pIugmf/ks
tqctIAljny+iM/npqGSyopIJ1xX0CLvikRS95fkXKIDJeZ30e00zmM6RQj0d
9QQnBtSV6AedjksN1Xlciuim+uW8z+hULnXKBUfetCnKqaS9QBrIbqbnNdH5
hXkvNZbshlrWWrUo6Kmg371gDr8GRPKm015aSGq2htcNIB6lgSFUktJFZ+Yk
5d1zL30wfRnaWPb6OkLB6VRTTcijEs2jNYuVR0yK8chiHln2hqWyCFwXLzWP
3nIHX69c+ly/qgLsAZiygZTaJFKKCbSNl2bu5HpzklSQVZvbwtL7Lc1i6Cgr
KqGQaeMeEgqespZQuTwFBQTlgKB0v1KJKPR6IJWkXAhjc4axrxzVSyZAg17S
1rJ76y8CjaRk+ZyMUzcvrpGOctrqQFwhMYxYIX24i/aZEOkQ0ejoTiFShvt0
QKRPhUrMIxzBmwhFfcp7j8sgPlmvxVKWJ5IjFvkTnw9MHXCo2IRq9N/Hm5I4
VB1yKBvPZ4UWzncTOFTMfSY/EgOSsL158SFCkhFF3tRZuI7SfjkjSiZnEZFn
RTXTyVlWoZzFpJVmzmM6sVYiWjmgFAgFOhGlUvbceTiF8iDlvfKqct+ayJCC
dHLmzlbOyFcFVEmO9TUxUOG/gqLzJFClBVe83zWkhFK50JqGWGI0zaPv1sjn
yHYTzoFITKVUgmBKc1/s1M8XNo0arfwf/lB5V1zNFaTe/Q8o/7yfKP9H3w+g
G2UW7TpDrZ8ZNbUqVFMD+qNWMfoyjam6FYwoBlRKAjp3LoVyUzWmViymhxGr
ldnNonZAKqbVmNeUO5LitcW0s5cuUf6kt5hQ7nyiU+UyetkqHhfWhkwQtVWB
gLKiAor+asEUZYQvlfFeeE45s2copme7AAyr/MBT2IiuMNDL5iGLrsteN8XY
vQtxoAqyEPD1zBFkWdynBVmD2Wx3W7HGOqiVk+CvTYgFDQVEsX5qMfayFZVI
MJv5sd6lwqUmXmhHwDRzKB3uz3MIh3BvIu+I8YEuAo3elGwXdsSofDClY2Ci
luJILhuYzUNuoeP8nwKRJEwq8+66OdRIRyVes/fnaaQDpIcYTbvpoyNUOkiX
zQNEocM7cZwIm05SxPaxRG3eHtRhcx70k/VaFmUQszn1U5U3+snAV0ZQJlqo
I9RCAyVQg0Vkxg4iUOsPSTFXOSlG+1ZCpstK9ooyp4JTOh9OKWgneg0xyq6g
w5QYBQWFGE6lQCb6GKOgFvOJQ5SyQKgU4KRKDJ7ccX+I4Qk6yq4sDxCVRKhf
fCNCIcDzH7xbCDWg3+gu0FEc4c2aZFjlPkohzIt0Efvs/WQdleG+DMGd++xz
ymtoUf4rI5R35VXMK6eiTrkIdSf9gUTjY8r//W+Vf/G/JGKrBNjCwU+7qE4a
bUHqf9xfTIjH6BhqlAZplAy1vBCxSPdgXC1JrDrhHPjGUgp8qwDfGqs05IpY
jiFCXPI2N//FF5Q/doII6CVYbbyhHi/gY7aZPr+FQsc2/mRNNjpkmjXZ0iHZ
su7k8cp7FatsQxNWMA7ttXUCNyPPNkfCRQt9RuDmbFheCLes0WN0ICJGBNYy
AjfnraHibq2mkL2zXp0ZcbcQK27u4Lp1K4FnWaO1GkKt1TRBu1WkY4GuUcp9
+xlGW05TLRLxifpK90u1DPvgEapBcmm0Wd61FwZTfAQaq2EhDylBup55dtBo
LPpWhmlBzCdMS4NpWTAtBZwBbCK1InIrax/bTm+4lZuzf53yt9Rx5WI6ZJvl
vnC/VK+AaWWGaZK4/99jWiR7fzb3aWeOrMjivDGG+ZXV/FpRw3NDoHlzF52S
XyngC9WhdIYsp29RTkfl8hUMLUeHgLhN4Q4DLM0S6ywQzHvuJZXPMO+114JY
EDIryrG/X36J+uw58X1MXPgf34hjCAmxpk5sIrPCeLAI7hSWgjKiix0qLK23
VWaetEKSseb6bLc2qCwobAr+tyMhjS1cXcM08+pb6Ioqw/7cIVzddvBjCIva
ZuXR1vFnEsbvvFH5g28IlGUMa4P6w9r3gxjyG3Isp/vaCuEYtXyG4YpXhXCx
mvi2nDg8b7ryp/1BeXNo8yyeyQY7LGQ+LuvpWG2QBgeN63HBsVW1giUiWY4B
lmG9R/wyTb9NHWcBQLEW+ppr6vC14xotZ2wuoAvaLIauIqPLlrIRz9DKiToz
2EJNA50MEkpiLfJe8JK+4Ea6MGxu4pjRaK+exWJPEatMbh+LExpY4XdzAKeh
FeqxXEKgmEKfArCYV2l2q862VzyvnFdvVd5Pv0dh0nkMJAzpBqLcya9LBp9C
8sCQ2q+FV2BKaTghDswGdEprOh2N0EnsqVyUTu7ud5S7azW92wb6BF7z78R6
CQUlFgwQNdAgqjM/n5+MqGO1BYgqTNENApMsewuPf4CFsFmaM0uvGDB6jER/
FrhkwfZOuQuXYd6FZSvYh+Jm1BQWmcL9clwcl1Xki6k091ZgTQFKgiYriiZM
CPoHXB7mzSmIAAHAcpwNeXjCbWBb/eof41MmjASDscdlkUgQtjmEFWAEYcVL
J6eAI9oMc8azbQ4mcfuUjohP6Gj4jI6Kj5AbAY6Kndq5tBevUvax4wGS7EPH
41iyGEvZAEvzJ5M0qFD+fRQQvPiIeFspQOlb/fHojP6CxW+Ip6zuNZ7gVkkc
OJvRZDGZsliOz5tH1HqbvvB8ul7R386K+Xgv7HSQBXjiVlcnQsvAqYkeW1Wj
s4Ks1SoxDow/NY9Q0FkuidAopGCz9dVqSInWKo5qLTRnA+2+NZXEqXkhp0o0
p9YuCix42lchpzq7KHasM5yyeDpxcKqXQ130aV6/Zl2dMGtLU+BlbaSH2mZo
W32CLo8UbHE2j6ePKcRWJkFwZQPBlY+tEvfWq+QMnTdC2TtW0JZ5QXlPP6A4
RrzycsEV5/P2n0pO5QAsHHkUNR6SBgeL+w/flYgRIEsSW6lCnPkb6Kg7tJHa
BkYavQJQS9vHNihn5YzATx8YKTk4HtVbZvjI8UJ6xfz0VEKBQUb3mC99S7Q1
8FHRYCwvKJ8lOISAMws4i6iqHAPNgEyHiKywJBwklmXyMDaP/QhgrCSKMUDM
mUPHVvWKApVl9U8x31Dsum9GsYt+qtzHH4gve5AQLRqVBai5jUs1zyx7U4us
PofJkUlL8YFwYpfO9/LyvehLvKsu42gRQHP71iofidHtuxVkbDRyZKmVsj88
ieRgbROBjST/vKnK6yGevluv3GFPKPeFB1SEbucw3TJRunGr5xleC+PIrwu4
EvRCtIwJHN1FFHpNnU5CildbaOCK/3IKCIlu/rxZ3FLuMsyF18R0bKgI6yPE
VMvG+IbGAqwOeoUP5aba0BFLaV9Mx5Hxx0Lc6dAy5w97UcJK0wzzumqBKyPM
6EAKGLeEGEd7FPPYbKQfvrEcu6zQ3i+J2/vO6ibNumKGWwkLMh4ALXCzO+lw
aZ0mVOOhcoKznJCMh8rpmoaAZLp4KiQZAvZQj3Ezpr0eHicZxLQz8g46L85R
mC7c3olTcwdSGN5Td4scW7GEY8VAjh2Iy7EU6AaAEdAIb4y4rAHdrlODzuK+
mEEX0W4GctBrHhZlOMTTbxHmMOmZaDf7IImH/T1yQX/uIZR/hxWYjRHF9o9C
Ds6YhhqSLI30zqBZmml20y0KCAswps2tPIrR/5Xz+O+ly4VoxDHaHf2BrMy4
8Ukwgy7LDxk10NxbbwmAdqClPIgc2Qb7r9MCLTrG2ISNzpEtyr/798r7+c/M
4gJJg+0ypriBQ0dSaU4blzXxAnTO9NHimgjPpD+ONM022rPbDNVKIdP4eUQ1
NOfd3QHZINdANxbkRDccUVjuK6DajMmaaquU0ziXJZv3u38T///MUvHLGHA/
BOAsnZKsI2LVN3wDkmVEmzkrlilv1qyAYk51hQLBUj7UsuWWLyWYLeUCCMgt
hlhjtZAECUyrH4jVC8REp9Fn4aPpZU1VOrcZ2vstVfouJzub+D259yaRVJw1
TWm9Jn1TJdML7KItGBRUpJ21NTF6pYEv/Cd9GOFLV0wUmv6leaZ/d5tyuuq0
L2bZfY2hbivhPmN3UFBZN0HmnEbdOGGMDoB+OFYCcEmKsSjwvMxgXoJVoMPm
j6Zt8S42lrPyLeXdeT0dJXR6Xn6+csq5/hs6zAoixw+5plM4dYD02H46wg7s
wod8PU5luM8FjIoIMOd94tCBdXj/92VOOjqrdlN7r43OogsDEXam5pOu+WQ+
lfXHp4wsgMLJRNIH9vZWbpw4+RbjqIxxdN75Kok/wX3Dn6XltM0L8ZON4wfo
ScJPvvOeDvGDX5eIn99+I/y473Yrf2unlBdEo0LY7Q6GfZmosK824I37wB3K
ff4J4U2K+wyrKL6KbMvnTs59/tEgPMznDq4yx/GeQ56VK8szz2O/gz2lAXvm
Ttfs6aLIc4vwh1RVwJ9/+baKAOhcAChr10Cj1LFTpAlk+NMvhRrr8ygENIQB
I8NoNpdYEY5oG9F9/+23lbdogQKJnBq+BjXWYv4rXNbr+ciqD4tO0diKstjR
SiNgZPY11nHxhAUSSeApWUu+tFHPjnxGwOOUY0bykQKetAYP8o4dNZJ3ZPCk
xJoHeHgigI21TBihzoqQOlbEjV+r3fgBoRvvXXixpBrbawLqGFcLvBFBlbW7
YO/RYVI1VtoKzL/EMd3riSoqnRAPFnFfHFNRpkKUmOSM/O9ANimeDEaVuW+9
JJqpeqqy95BKfPw25T79VFhbdXBvGBASiNIgEZi0K9ROmVMwyaQVD7DvfoCL
HfZvY/4473UrrxeXiF0YZLmLJym5/WZel4NPp7MSqhnK+rO0eOHQTMRrf/Ru
pV1C6s9mBBW5D5Nw/OlPBTdsjetbYIckT0kCcnKMnGx+/YFBTgrMoQtMXgSX
YeJYUeKoFJijrJgXdf03oU46oM41V3A0V5IQyKXjdQrQPd7y2cqtmc8WBR/H
xKR+dc9RnmEWvQUWgURCI+kR4cFBz2eS28OLjB48hr15hb74VXA8AiaVxZj0
zkph0he7hUsNM5lL4JHhUlIe8bva4Koh/BCl0OiUq8FBUIcTt54vT4izAKh6
wRCs7cDCyiOR5c2mi8aSxcqp5AI9IpCIoQxzob4i0pabyM6KiiJtsadFiNXy
p6LRU7kWAuJIQ0kiupT4WXQvG8ohZ8m8ZCqtZZVlTKwixlAW0ZvBEDftqp8R
NdTbOQ8o6CnTCqd5VoQzxI4K9pyINkqG0RJy7BpeRLMf7pQxaHIx0BBk3Nv+
LRA7GjBp787f0XXmWmI7fejuWpztNWZgOuIxtsa16XRgN/2oQr6kE/iSDkz0
lL13CzbG7o3Kfne9tB1ddL2rUu6GOqELfdVdmB6wjRsPA37oAeU+co9452cn
lG+W/sOgMUUiPBhafHITiRm/nDlDrTSBM0XMmUwSZ+iZ1Su0450fWX1t0vwu
Rho89PcrLv36pHnxGQ6xSvqPsEyBgdNTJxFWy/KANO79tynvystoM+4yiseK
Kh56j0LSZLm3ouY4vRY9Pe+Y8hqalSf1Z6BN2qmoViAOGogjIqjEPniSXvqx
cump3sJFEoi1aTGEgixMREjwSbHPZEXZkwifsw186kP4DOQ+Y9fQiV8baTVV
et+l7VpokHrMQrl4kVAnBeCU6lEyjTXhKJlGLMJLrDkVZupCxASY4XIGzZrm
qrh71KLrrigGMzLInTNVATqMmoxxzVdIzdZa/hQDnGIAJ5XgicdQszqCmlJt
gnfSAV8zIcBNyq5gNGh1w8zJBDonDzVWQuVUqa40IOI4ox+QyXspZknZO/ka
QMhx6qbryszHaL9vUfYHmKeKzknijr2XFM6TpHCGPBkQh37cfm10m1qoD+gA
JKgAKZiUjHNthBS/hRi7g2ugNFOIJS10KXvgv9kQdR++h+T3Q3RAbwjFS7Rk
IBY9malFOG6KJODmjMvDSWOIk0FiUwfpt5deUYlhUnFYkWT1B5L8GAnjFMuh
kfKCpG3/3ycx4/km4cijwpHYMJR0/xzxm5Yo/zidbX8/ye9UEoZKgdcMeSKV
SWBG1ruYYuOq+bQ535XGPvO7CGr7QUU6ajsDEaRfjmK7alKIKpE+Fi+JV2Mx
Ko58RJ/yCcP+EwyKYWxovdJdH2JDaxb7Uzh9YAejQ2Vg5rAJVFAicCZTIh2j
RE0NgR/7JOcsQ4X+fOXNeFv5dBHw36LTcyYyaeWsOKrp8G6sFac5y5GRZeo3
IxGRhXe0a4UKeJlmg6XZYAwauDIFznLIBoRHgRjJRNP+1RLJpgNvpljHRBsq
Q/v4LMECj1qZOEm5bSuBiv6CH6Lf9IggeSOgBEajGkrkuJfpcOuwrgPWd+D0
WUEYJIw40ztfJshyllNo816rAiIAiECR1NLvO6oBsbeDJ4G199KW20PXsEUj
6Tryc5yy+3eLOZwCFmhbAAzvbQrbrg0GEoN4hp0+OkZ6UQLRwdPS2TtlABVg
YUBhb24XObB3A326zuwbYJzozBMhpwAGv4kp4GJgnCWEMHRgNiQlpEpEbSSV
/NCbJ4Y0uTgfYJ4YPkSNlFu+CR8yUT54v7yKoxo6M/oNa0zS3YgNLD9nxIYz
9XXZvEd5bNpRHgxyhILQQ7TrjmxVpyCIbLhqOjwBDo0PZ/9+5VevFLGRScBH
hvFBV4+TjI6wfcwY+QhhT31THCM73yF87BOMaAUClBhb5lQwMWWUNU2hAhnE
vRVlC+Y+ZdjngQW3pEDoHgFzxkw6P+jcr63mlrVrGRN1sIClCXtkwJzFOkWH
RJpCaVAo1CggVA0DAW+p5QlOULZPGrRPbMKhJpElxiXmITGxHFfGuMac4ifF
AscYkUeMSD383QyRijSRsAJBD4VEXXOg2mIJLUyiEhIpkrwv0kRqo/OkerwQ
qRIzomnd8lpIpKxETEyk2vHcIM94qkfQqfoNwVGJuDLOqAdFWF72M+Xs66MT
v4+xFNUrOFp2AIsH1giS3qf2QTs7M1jy1t61QiNtoUZTyt7Hh/J7m+k/N3LD
gtM8Tw2RyUREtB1FxmBgOmTMVpYxW3kqZCKUN2Koct8ex2RyZk1QHl3wU8AT
Pel9nb4Cns5ISMyfBlKZKKTMOht0LQwS7u5NN5vseSGnSvur/0knKxkOiXLx
kAh0UilwSlnRWkV16/8YVe7I5yXzdApU5cubiAOTRVzkPvt4qHEYU9tg/fMA
IE0s5lVGU+vE9pBaGUm3u889QuHVlUwtNCbWxo10nO1R7js92izeRd8oMVKy
NL8gf45+HOdXhvlVFOMXoifDLy2FUgAYobJ+eoAwzTAryjAxmLMJ/k0+wKo5
eKF9nAK7BFc5HmECnC1coFGm8VVTrYkzyACMzv26cm5whbB4hpZM5QKrmlot
ljSp6qoLSQVCoTGtkN2qjGumctFM2VAzmUw8ynbDKqRqycinAkIZHxlzpa3F
kjI80XQXDy/oksxVJLwKs1ddrZy9GgRwmXQVZvKNGcc8MUChgOofV7Q7QLnR
0qpGC7pq3tBZ+WLv/HP1QlVzlPPeBuVhpu/965R39y26/HGeIVc2INcHmlz7
6ITfg1Und/FUT4//XrlPP8H5LPF6UvYenkF7Fx3pOzcFLQ2SnQJk7hqS5asr
YyDzXh2qvFeGMsTQOB578iH6bwHZPik6ioEsOv1RCffZqOXDTQ/eTUfGyyHF
1Z/nM5D7DKe7fvJTFcNZWaHsMkayvlyn8+Oyon5hlob8ino8t/1jPLMiGXRi
mvcJj1b7+0kjLE2xYxZ9VibqNml06C46K4NoLWMEV5RkQApj7PDW0FNOJ2BM
V2Xbx2jnH91IKLuEIr8qOtC2K2/bNsYYqoQwqZKzbWuAMyPGwDPJu/MihSHM
Dn8Uh1kRw+ysAjH2x94YzKKCLCDafb8RX/qKf5bbWM4+BaKdFSIMUAK3NLiK
3PkLeXicXV3BzV2yiK4Fs+l2CT83DYIxiAZqgNXQE2uQE1rOBeCQQswtaFPT
ajjEq4U60y5zTSCttBuUZnDpiA+0YlmVwr10aAMFafic7oEtaLPVkhEDuCQJ
xjaXhhck0zJlsCX9whBeZ0brJds5AaYH28WDQCO5Vs0JIUaSK5sgubRJ7SwY
prwJjyottqSveiNgGJ43mheDEo4BY0Z+uU8/AodnK8TvSrqQox7yqsuUfWyH
RliaEYZY8IM2XtmE8MGFm7urWX8ZDZbSTvU+umITwhhjRUAXPfXdjYEai3Is
YlEbjnmEc2d9s3AsJRxzGhYLx9a3S9sk4WImwrFDeRyLJumLvxbHCr1rMast
TpL9+MdSf10az37lQ0uHGEmjRLQKS6OIMQqvfth1xzdil7Gn3b8cCthlwkdm
VyayxGmCX20y9G6TZOmjuoz96pgu20q/qRBollZnEaBxO8bTbR3lVbWq3hZA
beNnFoIsyyDLRKNKYAwRpTaiLAAM+GKEZbmnCxa87RPc3PrGEGqkchhqn37A
YEuBavTBmAkMXPtkbcA1IhSrNHfyy8w194kHw1qA2yWtpnLOcmLW/EUkuGYF
wgtMA7t0wJfO51ouYNoAwzQ6ezTXNNPoMbGv7CpWcNST6KsKRFkNNyg4Rk5D
VRA+Bo4W2NYkakxJZVE2GjPy7Ag64V+i7SxDtrV1YWrfFBStw4pUS4RqGUO1
efmSLEiu2T3NyVTLaXmGvH7EAGd5lk1wwTXa3OlPUyD2XARtxUI0Ge9L18VF
M4lKm2FHbYU9OW0cazD/+SGcxgXHgDGGGDTYPh62v5d70mH2Dtok25Yq75If
K/exh+GZFyJrt0ZWVhjlbH4n1FrCKMtpq1L+sKGk/bgydj0WwXVmTAhsLXqt
wOpDAtUxDauBCXM4fVNY5VnhjKniwlR9AqwSQ8aiEFYoUDSwsiRqNP43/C11
5/8aqRA9FpCqcF2UbDSHzxEkMm0URQqsMgVG+WGe/E9IdWRrYTofpDqxNUqo
tLNhpfJfeUh5t15H9HkalmcUUu47a3FIA1LZIKu/ojZwywEnFldpoAhgOiG1
34DSzNmJUILaEjBZRmwBTGKmGyq9NUyoxPOmBlTKCpXcJcuVN28RTyEREGkZ
HeDVNSa4o1i3QhaX1lQqDqhUxlTizJxQSVoGYGIu6dRbVY3QKaUZRXhCdMrJ
vTTeiLNmKT0WBojCJCyNMhGVoKgiMclfrFP9wFGbHiyyEf5ZqK/WlAuJihKC
w0EhiZxJE3kuAyFRiRZUTW/H0vy5hKAwiTrGw6oeEwqqDPeWM/IBuT49ej+f
hn3Y1TvoYlK3jKLBW0lJXansj48pt7dDedVLhEYfronIKBJBBKF3G7gpXnOa
fu8CvPfMF5V32SUc/WkqWQGVdhtbSyPJ624KXHaDJH/ky8pB/ej6doOkNK/7
+thD9GmEIApdDZUOJFGpPU9CWXmTNzGJxNOKZupkApsmE/iF2bnnXzht9VA2
OeYrPiWNYmWLd/+PaOT87QgeK4z50mHMV2wS+0YomTIi0Md47XGfndgC+giD
slEXi9sR/L1RoyfLk0gTepyuBQpHh1QMLUdKFgjygBCTvNM6KTCwrryarkD1
EtzlwJ8M88fiBOCRY9TYxj98FDHYygblvT1bCgBaKoVFnxzIY1Epgj/n5AZm
ESa4cJ+/V7ljHw+CP3fCUOVdd6XC+g4RJGFhyReZRDzt1mIEWdWoFqmuMQLJ
qaxU3qLFGkVL6aNiKEqDPugl6jMtHUVRXTKKqis1iozzhXpLXjU+IBPb9Jjg
wLSUTN8pfy4LmlM+h6sCSrWNBZZxQUCNjBjRpnopgHRmxFTHTHhI8w1IqKzO
aSCtXhaa6tSKE2SQdQogFUZ4FquiS39G5xIvgAkgFbtL5yj/l/9Ov4Q+7kM6
7g/up+PgQ9r305TTsoSPMXpP4k9OLw66GfVTC7hJ+dJMnMwhgRC3vcfLuQUE
yvrYKMjx6eZNHU87FfOJAjwZ75KLlDOPALxjg7T3Ippo/wauEWDuDEgocjwd
fQoc9Qh9DHkio2eTa4pyp6gpOjV/DuhFQNhDv7d//ljSH/jykPKwgFh0WiV4
6Ps2KSFPGLc5C6YprYP6jduCCQBQVb1jdTRuyxT46ZBCAxlDOcbQYWoHN0gj
BHnT6RdOGaavS8RuLFZ2xRWK0dM/gNI8OFcvFew+94KOx7LReIzb0ROMoRwT
6Lv2ocPKra2jI3GWKKIohUgVuUe2KW9DlXhQX7zL60rYH9OWO9aonOo36Zfd
qbzrrxQU3XiN8l+8j1B0tXIfMShSJaiwB4+c1+DjEi+qa1kPMXwIOv7Cxcot
rxAmMYEYHCX5IRq71zV4Xi2GNOYxqNYwKB1lECQR8wyRliBIbk0JOBKH5Xra
Kcx8BxPKoCiFe6byYK4YXykBYG05j64ojw92QxoS44K7yzliK0uwoAbmZ/1a
QkBFg7VsxEuvnxpTTQGlorJJKJWJUopbzdhkqSRkspzWWjrXhivvsSfYZ3qf
6xZ30VE/XyY77lhEoEVR5wrMxxlII/eh33GwxkgyYNJQYjClE4zylHDKXdum
3DWtMU55U8bT1+SYjVGiGUUv2cEsgljaK43eWpj1QQKzoqUKRTFmVeczK53P
rIFhAjDAVaq/sqXcKcqWSk7FqgKbaXAMV1BQQb21dYpZ4CIpP4OrWPBm9R+8
RacHgHJySLaiWkGIlY755iSeBmnNhG/wwTrahOuVs3al8qYNZ1BlhFPepedx
mHYaTmXsI9oces6w6nn8KMAqHQDqKLTScTrQCVJp++BBpc6NUUrHbd6aJkn7
fUoS75PNyjlAR9ZOet462jjtb9P/z1fuNpKIS0bR59yrvBuuZlJ5//0rEk1D
RDQRqbDL2QwjUnm/p6Bh+KtMJCidGhQ3sIypiURZ7HEXa0JFwjUtmSyWTEQo
ppTopUzIqjodwkktJg/vxZvrigfxmfj/6nn0CUCFIK6+Iij0thuWMqxYMTGx
VFr00lLlzp6ivInQS7XL9Yfb1SgeoItU80KMBCkI3GKjQy7iWgSY42UJ5QhZ
U46wIIQStdIEbzzVD5MojDuFWrKcVRT4Y+3SyZP5XH0fSSpikr2G5O8qihya
6pU7/GXlDb6L/iYut9IPW71ITLL1tB+2QLlu5W+Zp6MGGQm16euQKsOKals3
Uwr2EihlMBXEcQBURmPqvQimrAimTLFCdNam480RTCGpHbGbNK2Muoom+IJ6
hQEygISTetobT6qdKkounSqNM8qM5++HUff/rzHK/j9HlAnrhFE6pIOGgvfN
ddoEJOMogUlGQwUh3aFtHM4xmMq4L7L3rxc8UXPoEOX4rXU+LwZr72oycgpr
jzlzdYRYLJhCPQIwFUngEXmAIELRiePKoRMS5d7eVYjtVornfZSDuiNc+n3o
qAKpWFJluafHjiiAi+GVkT5AGIV7fiWhaUcXRFIrJ1N3tBK+iNUfb8bP/Bh2
6sk+mLvHWujDGpRDsYb77B3Ku/dXwrAnblLem09SZET7+bG7lXeZZtj5UFu3
Kef111VArzRTRhBWKw12dxVsKwiq6nLcK4RUrUCKXy4yalAQzRk5Fcioioic
wrznJrBbFpLKEkWF+1ybAEAV64QizJlKOosr6GxeMUdw1UTKqXORCpVUAbN0
Mk+qEARYRRGfO78MoTRBOgmm0vmYsoRQ7q3/nq+aCC59yhtJl78XX6T4DaUE
gFRxAKn21QKqZtp1jbQNm2m/33uvcmZzoTghK2V38HLDWlnx4sRbVhhxBScc
EV9MXO3aHCLL4r44iiw0CCuvq5GRxW74yJdxPDKuEP0FuMpqXO1KwNX7uiTh
2PoIriIlCbnT4ypqjQfBYFk4AwCWcjOYSoWMSg78EkAFOqUTjKcHvzGlYIHH
KUUB4i+v4OAPhSIFgZ8oqbJo7QGUlAn+MNAE4Ir54CSlBmopFWGVN5V+2FvD
lLOKhKa9hRdzxfrThCwxJjF8jJegdh+7PYwEixJSdmldTX5Io+s4j045wfUI
Nboe4cqrNLZSoFaRhtXBQyGsRG8Vuxu3kkpfr/wRr3Nz6+rkPpdbVSl3dx8n
AnlNwhM7lbd7tXKOrGGA2R9hYR5IcToJiF/u3krlb12ivGduJx12l1jpKXfi
UN7pY+jAvCvCr/PYv7oNRIrpLrGUNMgqQ5Cl+wsULXAN/fJQi6UkboQR4g0f
wZhD3MgxQlV1+EEp/XExXVYl9lVUkvG3qUesiIW+0yH1IpaWjiOhy9yZU6MF
FMV21WKhniFfxRyhHxyFxgVCv9KEOHJAftKvycx2nhRHpmMD7CrH0MvBwQFR
uYYWY6AuwULYeFqZJgQstfcQAddTGLi6J6RgC4V6GIatSejMmCRLBeVAQuqj
8g3l+htICGjnPRBsoN/uqGCzRKF5rfSGG7sYecZtN8iLBZK5hEDSSqheKE1Y
WioJeXqyuv6R14g4kMuu3DWkHKeOZOwFpVVFp4gfy74+8h7+x5CXlPlLa+T9
Px8qd8QzUuae6jd4LDY1CiZwNMgz1jtqFBJ1Win3mYB9768J2EePCvi20hbe
odem3lFrwIfQEvb7acF3RIeOxxhqR5FIcJ8dIpfvoTyza8C8kqhAQ3N2vafA
PK9rjfIbO5TXvUa56zbgfWgjnQn8eW/PVG4LhbTN9cpvowh442pCG0XD9MO8
dykMJQzaJ2hTn6CXUijq/7GBZ6l2/kQoPMmrwR3n5SMJge5zd4ppFpDQEhLe
wSQMbPzbQCwMFK6ulOJTxIoh/KRJBIlEYXW5ceddigDdCZPyCFdzGsLB4Knj
t6vPl3flmnTKMk5ZKOlS4d1A12XCcgpDOEitRTifKuYK6QztKunvugXsNoW0
i5Q4lEVcs/vukcRiEu0yus8b48fST5BXGvX2C5BHkWmC3huYr/cAO/uDvXSW
07G9ms6P9s447iD8GnD8NvNmb6xU7rBnOWDFKsNz8RVb6KetmsKNQbV1vdZ6
KcAO4UokRk2h10Gps7FbecReezudQNMmxZCHegfOWAJ2JQlBaSqCvIOScQyn
R4/UQDDyUnmzqhzgWWHYO8vPNuYYdTlnPWb1Ity9U6781UvpBB8h+YvXRqj+
ItEBQrv8iZjSYSRqnH1Eoo/8rwLP/j8fmlwhAU8mmiszS/xGRV00GoWoCxz9
wzvoB8TA5tBTJPhcoMGWsjfzdtxC23EbHanb2atmtCEUDTRdcQLaUhptBw7T
DgOxDhm0Ze2j9BjBCc278grZ0JVVGnBFzq49caC9s1a5W3YoZx8dvPTSLINt
oDdzFvGcpO3B97m5aykYbqM4HJf3boLdjneUu6dX+VvaCXIUWBymAOejDbQV
P16Hr0Jcs0/QYX+CU1joc2Cbd8OVYX5y4hDlrJyinHmY0xaIM3S7Fciq1CMn
QlUXKLgcK7hsVMGhGbZZGmuV1Rynam0YxKpW1O4Pk47LtN0vUGOmcUQqNprl
TRobyjRL9xGZhs9bRN+b2IW7yAsQudqj5IpEqaXxhKSzuk6TqyhhoCEJs4FM
qZJogIqGGnln8QjljHokJsak4qEIgHJaQj0WB1QPfad2XtzZ8MlIMlncp1km
Nq2WkZskzRCoCqeK7CZMnzdJuXdep9zBg2W16LVEis10Cd+xkb7pzk2iz1CP
uik2EFGAlYZGc7ublTd9KjtouQQDrfQU8ixaGVGSUBmRPQ2rYj4/T3sKVhUb
VoFTaG7fCjoRqkl7jgqZlT1FZBoBF56fAK6ohfbY/whckeA0CwsN4ELzfiFB
KoLTyJp5vKoCaiKwgmcevmK1EbougglWnOfzU3MrpwvLKDhllFmMMtqCtJmx
WBNwtq0mKtSCHECJZAKCHMD+g9IOHGKK2YcP89c4gu4Q+2YH6MEPKF5exvPB
YvQQcGYBZyl303aiRiOvD2EgdkLiW7bgIizEsCRQ0tm4gSNW0A0S8X16g+oK
zNfeTmCnY9DdSygzdbMYeXmctsRJHLdAGwGO/vtjRLR0hf+oQ9Ot2D7RoJza
0aTgSKrdcEWYUNCUs3c0FFBOqIRjSZMOo4jAthQoV4x7Ut+Vi8o2bpW0pZlv
1Spu44lc03qtNNBqHJWa6anMUoTlGnfB4jogXdZoOBOsOuWzOXGQiig3DT7k
EBehSjSAXg3Js7aFGnoDIqOC7r6Hs5rw44oTKi+MRIsOZzQSbRDDLxeVaACf
e/uv5IwMo08mnrt4jvJvukUkWYR2kGNCvHSMeM1YWTCQZTydDjaBM208U0+I
R6HydCae8+Zjevb+DtRt2d10FvbSkbBxLYu1nB4TtBlfJgo+bcr5s2Yot2IJ
SbSp9ITCgLQsQrz3TkG8pAW0srLWcRiQCvQkFi3N5x1Pjx6BnffO8gB29JpN
GKfhXXI+A08kWnIJ2MCvxTtf8+6Jb8Q7b019fhVGjHcmQkVkKryzjFTTRRdE
O5U1AWms+IKkmolBI4iLx6BZ5luRvaVGTFk0zTggzhSCFeks5/4P6D3e5+bV
EeewFKJmHJSb0WpMpiMH8dfh/eAdD3IizklkiiVxgbaUu+WPeM4JSTtoskl/
LMK3HPffAt8QkoJszr5dyt25XfkUnkLB2R/uVV5rowLwvN5W+j8SCCz6t0gx
HLB3ZJtMR3KCHj/Ja41w0P8RXVs/otPlRD3jtR5aMp93T94U410Md7/Hj+Nj
ia7DVSKflgvkIPeWF8g4HZ6meQrGqmrdqgSaKNqPe3DRAg7tu1nRQo4gRxop
6tCZh2yIO7rIkNDjuo5qjAwQZbdiYRCYxiRejeROMQtxgRVXGrHidOI0IF80
OE33MzySVJ86g8mXNbLPGTlY+efSdv75ZbR91+XLPI5FH3tCoLd9RwC9NEMv
F4MeWlOjzAAmA+b/f9beM7yu6lr3n8+ukgs1jSQnOSehJgFSzjk56QUIAVzA
xoBtMGBjG4N7x6a4914lS7Ykq1my5IZt2bLlGltyN+VQTUKS+79PnhwCK+es
+6wP68O+4x1jzrXm2ntJIbn/D3Ptrba1y5q/9b5jjDmmwK8O/aTXK//h/sqb
OELglwD3aBLe+hXlzib7LODDMc37YED7wSpo7YcAUZBORYSunXNX7UfEr6J+
/BBJiBJWfrmp9NIO71dG/gWl+cDg1TEJiURMaVpxTJlHOh+G1QxDEX9FdurU
basrgGAm5J9/883Cv0QXS4g6gWA6JjY37B8iYEzSNG2sqow3RMKlwxSEXQoL
AJqCDiP3ghQEzfxuUQQat+ptfAVv4lH0KjiCIlEiIDZgshlI/2RIb7aresEQ
8++S8I/+GMdshIOvE7Vee53tZsg/+lBOHlPevleVX1vHTtevb1De6LAehKjz
PpYvMfnefTskXzEfU/CsuXl0Th1sYeolgEB1HfdPeq2dwYfhXD6tvPY2srDk
fDsOKfcCvebXteJ9g+6/iXGYThly7u/TOX2FxN6V/fRwv92L//zBTgHh+zyV
3+OmvxqEYehuzgi89FO1HLhEigbDdOm6+SZeaOZOHs+xrxLNQqDQ4JALyWKg
GCRgCYqcmkhJCLCKGYIkLCNPLz/SeYhSE52LROwSQVkbkhBkwma9qHQgrpB6
RuOZFGyEepax7WYnIBol/VocUy+SillLSeM6Bt5VXq8fSAuKfn1JBhHJiHOg
nHM0T961nyK47pdI247dmnRJm3T0Mhu2i8CjJ6KTDcEA7iCFCXnG4dL7HhF8
sLj+N75BfyzEg+BrIbC2HWTBB8oBaUd03T9gBahhuA21DLc4a3tNjLVNxJSw
FcW05+qSbZx08Ac/qHJ7yrltKXhGDwOgFdlAi1tedPWn59jwf5hjWL8dUXLg
2MevC8c+eUdSrCvn6TLapF0CYpScca4mtSAYOx5g7PLhaMVH4yqNsWLLqVpq
LgmMYSn8LUFKwbkMil3EWQOC9fB2v8oEc4//Ruj1BozpJeXt3RsSq44u9Afp
/57HppUfvgs01FYq/9//lStF3KpK+teF/CoSf+pevKh8crG5nftDh5pkiCUN
xLjDZAIYS4Jj9LQCkh0mkkHK0RX39TZdPEzn5xt0nr5NBHuHztl3sbnxlb3s
YulL4hmTjEYKIEt4z/UNsrDP6L2WnSN0SXz8Ph7+7TfpijgQ7D4i2ATWchlt
WmMyDJvxkrdUaNVWFKg2rhexy23L+H4g3EKPKt8T9ZbNXwXAW71WreH8AtbG
FYAry8dUfva0OIZdxVYzsDkvK3fXVs2uTGdLJGcYidbDnThQ+TchAvdN3pU1
N3YUuZHDTKyINuNikIMwors6xxVcqBZnGPXVWp+lORwHf07AgkENcwdapDF4
CVQMq26WSNtHIq2tJUSWBOfSHn16NqqcQ7sDLcYaQS8NIDJLiYiVNuChm+4U
x9SEpMMIXJb77RCeMARQRPZjcKE1Bk4ZhNgAp3yHeU0USqafVzo+FTBCuCSB
tWidf6JrLgXlHrLqMWs7TOcvr7PG8qaQ6hvyKP6OK/2D3ZW1zhI+pTkN2lAa
JgXQZKJbNCNgl3ggDVCDYhijsbK2vsJwV+heYZe48BFISrpHj+pFj/vgFbGU
x9svSvgD0ic0PmC+AkQZBtG/fS8AEXtJopCIp6yBj3/sFLHkPP34inKPHGcQ
aQhl7I1IjKLyWnaCt4KiVkLRPvrzg+Iq8R4ziuja9fo+GsSbN+kEeZPOxbd3
4tTYzevR6csrQJElrFLO+zWcE4VT7xXkDBLey0/R37UBBe7S8YVQ6k3CYMpE
jqXZvrITKOForQoIlFQqMJM6bpYAkKTKIxuuDIimDKwYGimxdfR/CUOVa5S3
lETE4nmWrloT4qkoD0+1ku4sijGUxTHZzqJODWV0VSUNAVV37wFJZLrIZbTR
u350t8qNIVgdPxhKq6qtDCmhVFpTqmlHSKkkjknAKcVgyjCYtHm0DWSMmELC
oweTqZhrVHbtkAFCHdwrhDpxSPmLF3GUDOVvfB0kMplGE7GLAq7XhDodQ6g3
DwVCyu4I1hmhJI85UxOKfwpCpU0SIOL9ronpe5OJj/Y/+/exKRGTpkxqNn1s
sQn3P7ocpi2FTUlTk8HCKSlgMiGwoJr/jeMmxJ8CmGD8/AUTGEwsmHri9Sct
33cEC1exhcB65Q38NffgF4VU5J44QTggsDXR9Y8mGrqZSsbyDDc25v4QCXAJ
4SSiE3FJRBIf087vSBP97k3yfCO15xtltFHKxpP72pvQK1ga4NXWB8Eu7KSk
O/wDTC6W417mdMZl7Kl6GV3IBFGvEqJaCFF0OXztAIfkuHkQEHV5j4zXSeW/
QTx6C5h6eycHV+n8e5/GewiE0RWbAOW8h7DxGzTjr3LLxylvBNHorjslFtb3
hwqwcjfTaUS8cto20JwbS8Sii9/tNwbESgBZUp0RQGpzlTAqHQgnwVJ3wZI9
7IVKdkg/ryyjGh6H4VOFUlJgiSsyAKSMwdKqEEvFeViqzsOSVYRRFE1lOrvr
47GU1CIqb20liyhJbyYDEXX7N/GptO3j3vH7mFO50c+JiBr0BG8KnOoSTXkC
qhYbdQinLMdnu76s5hTqL6wov3AqaXOKvsIxw63dEL1qQeqTTplD+1g9ZSyz
N4TM3onDSn3WQpMtoHSJWVFMqUUqRFPKRhNHU8ElQVIyyEtOnohORoUoykY7
QwBD6rm/yaFPOg4o9/3fxHLIWovdM4hBffwm6yPnE7r98/nAw4FEpnLCLCwy
IsmYuCAc/9apAhYZ98b66GrLvLVtllUdLRtQML3eyNWSEgk7JSXsFEFSVZ3y
d+xRXmsbl3XR03jzLUD95GnB1Olz0iLiPQYUYYqVUxJIQhT8Dd7fWwJnaJTO
XPLaO1TuwJGAS1nmUtJfSt4aIgs7gWsouXQOoD4MYBIopRhKGecy9hk5prz2
fQSnZoLTboLTXnp+lxB1uszT4LW9AqbXdgmc3tyh4fQOp/DfphP0ImmVS2SP
LtKpfXEt/gfIlI0n0xAiE+8l3Ib3zl1GZHqCyHTHjWaBZsr/2c/J5PUJdsdl
GpGItRWT7eYCuVRqKijKOQNZiKZgAlaQvKlYI4ghJAFzXOk+eyYrpjDFmIen
7jEZx7jOE9m8zeb3bOOIVBZ4SneylBJxd80jsMhoJeFRwjmErLFbVyVFFVNe
MIUUu+gzKoRRKtBJKmkHn7SfExxpP8eebtFL7OmMbNJlFib0zjgS/nAA3t1a
xQzy1qDHyo4mfHtXM7dfdPY30uTYrpd5p3iZ98qljCOMz2kitefRSFd/ZWO6
dSXzNpp4e4uppRAdZtxc1sodEpQYSVfFt9jKxsSVRv9NNkX6RCQ6q4hIAEt0
pjCYXpcA039dlFQhGTiAyQTJzeKiAEzokV+6KAySv3FM6Y5aQYTc27xQ+fPG
invjCv1rdD0XGjOhHcp+rjXBMeu0rGfBZIa7cKzyv/MdQVUCgEqATvQyNJuY
TFk+SlP4ukalhZMcf/t+KJ8SRkS9w/KJB9GKlNZFTtKVMLi4cILAlU+sbkIs
CTjtszdKSrsdbQGxwCvn8kkOriG0TrxKYM0ndt7Yrfzj25V3eodyz+5B/D+K
rdeNnqIz8xKdOOeQkz63EYr9LL0fZwgCZ2jSXljL2HIu0SBwCbYISXfdoVc2
3c3YArCcIzSOkgAd10/5P/2u8gb3DWpje/W2A04pwZNJDepSfbZzAqji0MbB
KmK1EYC0RuBEUGIkJYAowuSGJaFuMmAqs8DUIw9MjQZMdlx8T4NkAzMxdRBG
JeWto+Q6iB6hSmL1mK+SDu3n4U8ilTR0KEubBMBED7pjd1CNGiuamFMIL0VF
E6cG02G5qnF4ADVga1we0yoTlVDG6nVnCZV1mpt0YIpu6b6LhSNo9D2V9/Sh
7yacJt5LsZn4sgNvSYNA7GATv9yUja18j6dLIzIxVRFJs5wyxBagJRnAWwNs
WRk/EIp51TN+xXYctcb+Q9SK1DUktKIyUacgIv42Kyquc3jvmFzICF4RRSXu
LpV7eUIYEn/rpGZWipl14UAQcWIxdZXG1WHdvWkfRy/2oeCRmJUAphIweFIp
l3uQPulDR2kcoadYyCVj6z64ks8l0k9vBVxCH2issfKXS5/B3B13MoR6CIQQ
cPIXL7Z3uk1FIXQynz8k9A4AQqd2qlxbPUMIIwUI0UNc3Mk9nZwO0jBn0BeT
Jns7KtPPbBAIJcAfutuxUihEA8ILS1C8oXcRge4Nsnqgj1BoOEcleMfBtmqy
dH14WATCEh5LJpkShZotOtC9KShTKOf29JssjYTf38hrsxNgUAJAok8SSNI4
4kH3oZPctUstFIUF9ChsD1BkMnbZmLBS1l4w2SBLhjIx/i3RyfpJ6CUhU9rW
S+ASqKQlU9bdQx/QlKnKwyL6cYR2ut5I2m4X06EASWl91AWpsUgyQSeJvDGS
XPQZNKm8bGeR8YwuYgCUmmhs384jiW/Qmb2a3tulS1lWCZsyzKaUN6Cv8r9x
m6C2rQWBlsPq83qt95k8Hr3NpCosTE2YUvookHit0BMPMZCi9Qc3CY16dEWj
glDTuH8ISJEyAwMkE2qCkgKUYPFISXG4qX0nWT0SF69MDqpLbSXl7iZ1RVAK
4uBQUpmQSnadQSIIN2kqQUjt421BcOzu7NvIospdQGfPYyQMvqWjKN+9g968
x8nPLNdhrfcgOJlR6DHv01nlt7Zq7ZSMEUtXLuFnFzHlf3NE5XbuJJFE1vfD
9yLlBwZSKDPIg1QyhFSrVkhweGLrRCUxptJAFGslbGVwvJGRpWR726Rzlk6S
c9j5jU+S01xxdppOjlPo5btJRofwyzmDAUyf43CzraM6aGKfWcarQ5biYc/R
iUwk87/zNWWSewQwdtF0RoNdT/QRGCtTl5pyp01hWrmV4tokLZeJLv2BXlrP
WikBd5bAPdQjrBX9tFmMnfZ0kE5BhUEqhldX6ZCT4ZVO1GVibF3GjoTTdWl7
hYWsqkJk2ascjZjqJsgyYopDNUdaGFsaWUVO617uRIRebNjciDtMAF2TpzG6
OqdW0iz10aX0dMwYZFUKsuq44JeRZRYBRVSUDpjD+UFFpXQgygIWfW87KhuA
rJSPhWgbN6rcwkXsCi1qFXkP9yU11peePxFoG8md5sYwYnW8NQCYLap0eRUi
5AXlB0lTbRoDr6N19CfMLpxZAbu6/13smvAPsysvhdcjUlrgvBNwy/1jB7PL
m/SMyvWl5769nNmldZRXuTIwgCgQtYjlbQlr3xNB0s6yffu4Wd0+rtp+7D4i
n85OfecObuntltDJePkoW2de0PXaEeWNfEKWYF/N1KJ39h3lnTzJ1HIvvSap
vN+9pwVVUSCoiFvAlnvptLLBlQK5UHlQpSsP/o0zOtroOe9e5oubS2eA7CZn
8FVJ+Dpo4esYb54g4BKV5Zzfo9yOXYwttx2Svb2Bowh0Up2okHESNbF0VhxH
QcpJLkACwE6VMcDoex28ChAQA8wIYkyvc7wO8MxKSDEkuzwIrSf70x9tU95T
ZPO+e0u4cuiVZ8jKzsUfHEGo/FgVSk1NfVVx7qavKx/VCdMnRyPk1aVSuV7O
lj2kFUiF8BJ9JymSi92eqStgicXIui6mmGBHPKPS+dk6w6hUJ4sRoaMESt2l
kOBbyl1GEDhCM+9wi0gOApLbWK9y8xcpf/5Cmsx8pajnrbpnvULvy2yxeHGh
qIwmk6WnhExZkCnBQMo41RuDWJRJ44Xh8YwJjaMeirUUUNS0nU7J7cw+QpFX
V6sAI/g7fw2vdQtIJBoMFKrnCLcctxNWdjexWHSO7Nex8nQkVm62HkvHFHom
CmkUpO+OYFvISJicOdRJJ66imB7Kk/7/Q5HxdEZC6YwdPJ333hHlnpCOokZC
CYqS/opZyn/gLml0k9G9ki+1hgXqDKHuncmmBBik6w69Z4Yob9gT9Hbyg+CY
dS4cYRwBRjzeOEoouoOX2GgRdRUWTgNJ7sULzBhG0gcmAKV11JXLzCG/tSXg
UJY5lHZ+/65y6yojLNJxcnKDaEhxQblHdMlTBEqHlL9vm2IcpSxNRSjSOBI0
XaATh8DEcDpNmuoAByZBprQsrLTGce4McQzhaQIUOjQRl06DTTQdO0qZSWDU
eq51WUdswqBpTmTyhv6KV/MnnBONSn3OOUXP7VyNcjdNo+sfXezu/o6Or/9Y
CFVJLul4FS9Zd9rp7DxTpXL9fkZUI+367RuDthZenweUO3l0IJpYTCErZ8Wh
tmhC8Y8ruEmM9oDeEqkuYD5dH5+2S8fYPs0n7u31zdskbZfuwvbZCxKNhiqK
BqS8Jwbx6cgtYtoOyZqY/buUt7lM5V6aTcjezMgCsOSWvPM8evqkWboiVoGW
youlp22AWbk9KZISO5i1ZFXNbHGpL79MJBBwEcNYWtGA+XNrqrXxg+Sij5no
JQSTo/vydFJmtwrHiviYdrbTRXAHPdWDu+mV7+WCCl2TkApApqulUjG1CAHH
aqRzjs71mRKEZEy6rzi+W1dRTHxqSoRjEFqXm7bYHMvaHMOI6QPfg62gLafM
fZJVkFPOXy4qf9IQsoTfVrlRT9PrZIbBAfKTLuf1E8wwd//WoNBAGNbNElLY
rmUfZ69ZTrkLxiuAzLgUUAw0SzkX2E8CYhdJrkRujwIXkFjYV5M3HQPNJHjV
gzcgI6ZFuPbaZWHa796m+x0RlhWDZUmgDHrdMoUZDTJemXOBh1dbyQbRgMx5
7ZTyjuxmmAUgu3RMrzXiXehxLEbvCwMyp4POSEKYd5QupSfqeHU416imgLFu
IBjoVib7JJwgSJ2m0c6h2Y4N3K5zPQGLlO2Tj5D4oo/mJF2uiVgJiDW6Xpyh
x7xAE+hyVQiwu/QynocIYHOGK7d2jsqVT8VDnsIKMucUzaeVzylvMLnJ2/9F
lzB8XXm97xWAbQ4pFWDKOMHNgitxg2kTRA9GOf3yZ/LopRdQx21ukbaCVkQu
DqenmF4Zm1489JLCBLCFPCL2kZ+uzMoa3rLC1lttBxDbO4h53UJyq5pO02XL
RW41btPskrY1CWwyiQ1JBGF6aWEhx7KdKa84jllRrTpedCcWcaxlEZNajG2j
92nbcnpKNKpn0XXkp8rr318zLWWYZgLt6c5xZhtEOg3rUXhArxFmto7O5q3K
xR9pfaau1UwzdlEXMaTMUpw9QRGDjEKeGVFmQMYYy8a3tymK2Q5xWgRm4FtQ
ei4wy3QGs6TFsSCk9WbAMGgx/3KLaLFeP2KOeU8OMFoMtjA3ZIA0sxGOpdz9
VYEfDAvMo3YwIXbQUCxqCYfwdnVQYsfwd+cFXUAY/V28Rju/j/72m2QbR2qN
lgTGCJMaZF47ecdDBwJ4dWMhxpEvEEwoJkeIMv4YIMqkqCqD3mCGZRgcCq3a
bALywJnz2knGGUZSE42fdatNNHo1dB08t4tJRl/J8XR9UNQqNKPvHSOQEdIY
a0V8vM45iiadK2mskNFG4yi9ycdW0WdyryRxj0sXIuc0/Y8OmnIdjTQapE0a
CHcOa9MJceoatwyQ6x0G8+c8qbxl2IOPZs+hJTQW079ZzLfukuEFkEt4D/yK
r7hakZlhVJpd6JmIqUPPl2a6bCEdYx1T0Vwhr6FhuCV1itBaKihYkx0zrgqF
2EB6qw4wy4AyXq/SvF15JSWhEAtghj1R66tjQVYco8DiqhnSVrMITS44SYlv
pVB5xkZy2QsK0EqDWEi/zmVusTnJg5ZXVsajC2jxWTvzBYFWtxBaRbnSjSTg
KgXTTdtCUUbwgii72tJkpsfXO+joJMttrJIHw64gV3ikRiVj8oSZrtBVEN2a
/v9Ir6Tz8Rs6M/gWPv+PuZUouj6AXH88rbxN9DluekXno2x2ffXLosGSYTzL
XzgpqEIvinGRwq5MhFvfvTPgVg/GVpFRXAW3wNVFrFQlZunPjJyl1mBS5GAr
scuXCFyHGFz+oYP4HSJXllGVyveQCR3Peu+NgFT4Hoq/jJU0wDIqDNjCUAnW
YhzpYsHIT/kQP1VQl9kFNXamWdiVwpEXCRliHS/PJ1aSqxIOr2Jq0e8dRhLO
G3yP8gY+TFOQPtIDiHLQOEqn2PEmkWTYcb2jWcgFap3j5dWXOcn1Gr3gcrpm
NM8gxXu38iZwjrH/j/FxrhmlvLWjGFfQK2jT3boYYnfJM8ob9EtmV7D2+l4t
x5KotnLXLZblMnGY+mxM1pAZlbEWx8x7UdKESVZcabuAgUcjP0Sh3JLdXq8O
5NZyHd7CUjo0j2lqZDT5y1aQ3qKfbW8UTLHekh0jsWARWi9gVRO9d83owlG4
lMboLquoIaBXfXUMvcLQPGykll7ugpnS876etz7FkZ7DEkaXf8tXWHIVM72S
hl6QW0gxdoWuIAzWXcJgXiW98PJNPECvZKjAnGYrQgZX2VMTzBRv6a3LEmbB
YFj9wOOdyjA+fwR9pwpzi+m/i2Az/m6CmUIHUzVqay/nrUg6ER4S2sub9JTy
pg1V/o++o9xVwdK/ZK7PL0RIvs5BdAHZ5cOkiL6l/GcHsAjLxlhJKxKWDiNh
xxUAhlt6VqLALITJVygjOKLEne3j4Q17lB2lmMki5623SGe1K//oMR7AmPP+
O8pva1X+uVP0ERPFipliaVCMIUoUA8Cc915j4cXreXQUzMJWxsZWoLr21mtt
mGZqadXF40wTR9eZWdozmhGga0uIriwfU86xUt0RfRUPoVfKv/1rvMyM6UUj
7RxqwMX2MJ2QbY0CshMY9PWZBq7uyi19ip4QaaqORfCai/C+0l3vlYE8cv1+
rEAwb+WzAb+cVprHBxbJLcuvZ/BxDf6l/rgyAJjX51fKrguF0fxCXspQ94WO
2+M1aYXjyUdxON7gyzaMOiov+ErHyCrDK4Tkd2xn+QRmsayqIIA0N2tpVS2o
SsZoqzhYFeGYAZ2KgaMkKGT0U6WUyWJdhD/gISy2MfrJnT5E+bfdpvVTApKJ
uZPuzNiRSaiuUl7lFgWZhAHwADhFDJxUvmLqbrm9s2GllbAmYxc2oN+M4Uwi
JgeYil9bXBwTrXrx7waMWVcsgarrnI/fLqxZsILtRiIxSP7POQYNjB63Sahc
rnL/9DnljXhC8yXpli3XZ0BfpZvBXGMcXoGr0+rIcKWz2x4GN1otneeq8HPc
lPYMnWBn6f0/ZwbJoe98Q4Ly3Zk5Ke88vejftPPW0+CNWMCk88HbykeXFxoS
tMrzfcX5MazhHL0CfkzcyuilQtWEY8J/lcOdRjJhnN/PASsNnqjFS+CYBnqK
jUzaGHAG0gXF/Uwb/jA0aTCKmTafcbDr8IF65ZbOJxvxc/JELxEqZtHf0+3J
Bco5ReM0tmOicWaRcqvpA3l5IF0M7mfc+BNovpNccmumM2YS4AxLJvrHhBuo
JW/gL1WQJulFtCGzx3CxEWMtH07G2LZENOPn7txqEJOyqxKwLk/E0fUIohtx
hBEuIrbEEUCze0cQODfiiGGD9JuGDSJKFbz7kG7/yiX5WC1cyeLJnzSJ3kGs
ZGxqjmVPnlBKBSgCxzZHfJ2UWqWD8n0a/sP9iNvTCxSSCbRrhQRlhOA6a6O0
RSr/tltCN5fhY9YmlV9eqryKcr7vbq3QBjSBV17UhVIqZnr1ZHJZHWNkpw0j
kaolYbic/jtRS1Yh3/R38erlf4hXiKwLr6RK/RMdXLfqFCCIYOk4GNXrp8wp
+hsilp4u6OJH3GKdL6xCKRS/68tZcR/hBhzk6NwlUwo5NfwpdnGMohSroExn
vMroXzp7mHhEvOJbdMU7I+1kSYMwtrjQiu4RxjroXW7fGyDMObdDuetnm002
ePFNgLGOs4QxAja5QYQSeU+gD+iNIJ55/3mReea+96aSpGJP4wgrVO57t3N5
O8rctYwy1Q3SK4GP3fNlFCcSL5FcI5h5h5s1xuj5d+zigoYGWe0YF5/KaIy1
rcvDGFRTGK8S792CIolDrMY0xswgNNBJ/lVWHzvLydw9qbwx/WjuTqOJQxqw
lkbdZJqgE8kITVLOfjJSB2aSQCI5dpqI1yHEc6vGCe1GadqNJ9qteFZod3BR
JK7lHFqkfBJh/q//TXmDfx74wwfuwTVu4qiYaNXKSCKxC+xJtKpOolUJYC/R
yYI/FDokWVldaxYjB8oqD3ZuBSmr2fNIKdJ7vYO+v4POItQLYK7XiyuEEKoE
/SpNVIqYgP1KYmVWcSCz8kJY2ZgQVu0mQR3b5lgnmLQD77oMIongBEofGHK2
HIv4vqSkDeMgh8wCJ/sIdPgef1WEI6vJTLxSy+oGgqd1wYRhXVAsUS1yhyyg
nUVMdIm5yBaKs2zMZWzMYZily9JR4Qt2DYTjXNGLcN4MEafLsEy83Z+kubVv
vXL+5zzLMv+H4v38O7/BZZ4gHG7Rp0XQluECxkG9wtQgkFaGRNPlUzBJxth1
JcX49vxR5pm5hQpjLdbRKnUo5vasBboEgy7pdOwX0HVwQ/xz3I506AAO0Avm
opoNt4BdQhepkn00ETAIa94V7f23mX0Y7juvq9yFduZfBvjrzvgr8t6+rPzX
z9HPTirvjVY6dZYSCu8IcJiIukp3Z63BYSqCw8snJB+p0qChC1PXsVsiU+2N
OvZFv2G5SfpeJ6GwtIYjB+81HFN8zDAYDy6Tk3Bvoyzu2I2Wx/u5HnovBA1J
w4a1pCbuVu6i4cQdgmEVb8ZDSFSfZyjWT6FBQKybKLf140kETaC/pdECiUeg
bH2RIclwfMWCI6TgauJcqwDRW/csAXEQfc1R+9Y5BMNBPwv6dN30NQU2gowF
pV/VkpxMxHhNIWKRnZwEDwOfqVcciggsNiIwIv6QiAQL9+y0i7y6sfhbskw7
TV23bioqaolk1fT96gpBYpKRmDI4dLY3K1mNuK2xc8UXS8VMhIqmy0PlOpTP
8XrN/vS2jhuutPQTMNYuCKP7Goz+ytWh+mMwpnRdvV2hikg+iEi8tJn4uUDw
pboQfLLl2lUc2H/LCL1tHMkX+FUH4AP34qlXEPCa/anAJ8VfX7KXSTP8Pnkv
TDIy+C4r908XAi+Kgonczf/EgS5Az8DPmzIs0Hbwonw75CF+De6y6daSE0LB
M6QeRjxFkobm8+vtCvALbi9hfgOEKRZuDDi5FfGWZi3HbAtvJUGC3avy+Fdw
y02RzyDGTwikM6ad2HF2B6s9Lmk/0xT0oKfnwcSzQYgWz4zId8I8AI/3jJ8l
hFkE1OWtUVebkWNIRHrs/7xA5KS3/MpF+uX34bW95/S7OGqYSRWkQUd/9Eir
r80pbXTptV8SkSjFGkeUe3yXytXQOXyEzqjTdNad5kkkeDxZE+Ix3TUe06wd
D64IxwGeMi0cqGqRpVFAI1CyDcuVucxoF7J26xmQGLkf3U4TkYBX/QKrRmLk
FA1Kmv8Ezjoa9Rznx7G7U6fBWT+WJjfGaHqcsQLO/fQYB2fQOUdX05kDcF4R
LmliEixzzz1AT3AuDcKjcxD99Q0osX30V8RN2Ky8Oj7XKazsbhdyYPDJMW8G
K8cIJ5vWmDRCEUQjIBl0r1muAblvFztg4WM2ohe5nqtZM7Je0w58o3+D9CBE
VUaic8xHLRPpCdIxG5MnKAoCc4p7a5i4nMEgLztaOj2KQZ0lgAem/xbow9zC
xRYG89IEeiUkPLHfpzenBGwUfiVQgglbCW4LlGBSN88/c0hv2rZHuZUvcArT
rMrOb6aVT76cJt/cv4N8aXsRtgwWNMQ+kqWfSJMa749nxNXqEotA8lnkwy2L
5QSEnuoR2FUinLtpdZRwF0/wskDWcLg9f0RMqs7wWkjLaqtqvnXGNDSjX7Wp
1tEqQEM4i0RdOznJ9l0yzuxg0YfPzV37sqypJiEH92p4VhSuPIqKulQMy5Jg
mcArHQcvAJB/7UqHAsOEY3zsBqknpRslUqYxdpRFslOBtkuwtuvGOYyzLTzc
o40EspXKPVwjIGtv5DwnAndFQbyO3rCjpbp5jR6HSZ8d2kBjPddHCa+W5vEq
zbxKOntJSOwg8DVwaX/DWm6gNFX5/X+uuQWnO51X7k3DNbsaa46IT7iFA7YY
5tRP1LfTxBWz+BvPLEsAZjBFYwRpjXTbNJ4EyQO8K6aQLOmtHK480O8Ap5IM
y1j0ETgW0/Vz8M9ULM56xOBsm8FZN9sMS+zvIW4dKCgjjOkFk0KyjDtpkJZ5
RO82OttakPhEchkEK4LCC3MJerFPY4PelwP4qeHMFoSe2enOUntCMmN2u8Wo
vDSO3W2Sof2EjuIZksHpItOQL+jgdDndkJF0QylrfV7ZLSO2aDYRul/gi9Xc
LYGagxatEyNrCTnObb7WyvszJ0WOA1WAFIMqLgo3P8Iq0OsT8orxrPpMIave
ChWaI/dzlw+wPUW2wH+ytyg0i1HmFt+XJ9kTmHI3rRIsYVyw7CWsprllBXZE
hQKskFfdNaE6UV4J3JFQWyZwoBBfANVpMg6nmzWrUtiYO/f1f1G5ocOYUZxD
SOmMwZXQaYreSiDYlggLXuPJlDFkOh2SKcXHjFu1ImJEczffqD058geMo+7O
uYMBjnig6c2hKgtLUgDL2yJltOk8tkX6jx2VkXTakO86xJu3H6RTmIDEUMry
MWWwxGMPtnjRYKLJs30Diyj6CseMN2GI8p5/SINJi6rqacImFlUJsAktuBCb
A4Xol+qmakWlycTWFHQiRVU3lpXXBMQfQCqDJxqs3JClmPSQ8paRJp1HKn/+
I8qrGq3c7fQ4+2bhiR0weKKXOEe5SwoRxaE7u1eXVbbBeBIrmrHTnkG1RpCH
yHjmOryMREnLfpFMdbVaVRVBVfmLlkhNhq2q4NZqoUJqqrW6SgXqSg9dWoZM
hEGTCCwVrYcNsZQXg6ORjXGZSX200gxGXrG04kqM7UZeZWweYUgB/y3qDlaB
WZZ5qN/Hrx3cQ2Lj9rCBVvcY1CwU1DzFxzS+nY8ZzZl/4soHwxkHTvANFUT7
EQIjJ5g7/2oY5f/BtyMhsOD2rxeU898n6ed36vD97cobPlie6k3/rHIP/ELl
xo1QuRXzcbVrQvLJa96qXLRMBF4SfMwEkDFDf30d7iRDpKSc9n2h9jmNTlOn
duAK3lJNQnQF/x9v4YvyzvfoxMK9z6EsgxTppxUHk2LNkvdPhSzJ8LEILDGx
PZ7PJngPOXMOjXQJHvQJnt0vSuZkPWGkMsTISV5jdgTVq4fLUHjMm4gdLtE6
htEhx5YVXQNkbx3i2gwQHbNnZZNmgKQ4ZLVgeACQBAhC9JjKBZBa0eghKOnm
1EzRKJmqhxE6UyycTMRZPoGnlmge/+GfKG9Mb4iA8fQobslwhohPAMm99KDy
lwxSXulIjn05O2dIunT/LJE7aJw5RzFOloY4sfIA0i75uvx8p4lvyXKhWznS
z++CtYrRnfK48hHHgLLRFKGnXscrZGrC4lNTJQFl00Dva20teqpyHZalaiSH
yfljDu9jN0tRN9sarVC+ihanpmNiWMVW62Qrss85zGyMc0uG5RVBZD9l6x3N
ljCHWcgXCWj1Ud8QmQNplsarsbdJ9/r2DnLOsF2BtimKb2y86NMy54ZI6P2T
d63lOhJ+96+clNXPpGtyP/gWh9nzNQ3fOnRt/28SMX85pdxXVzJ7wBt301Jd
dEXXjh2VymuuUHzbRBeKzauZDYnc2iVYVbRhufJ21yqPTpjgdmeNIKlnjPlq
PygUootBx0GJtGMYbQNdQxxy9xOFyugZla+m6c5ts88jEu8NGxQu9emmqfR2
TGApy1QCg+iPTKQIEOqmUfQBff2eRlGxiBsTPoLGA37SGj1YXYNVWkfpZR2p
Uu5e+tzKFyqndTPXSsVTJ6Gp07oupI44qqxQpyGgDqDDZqppIxc1QrWwhKiY
xrgBa3gxC2uW6ZJCrJLIOUgjMaG0UwNPpT0WBqEHmSb+GaNnglYvQNIkVi8T
eeKMZ7/lLnlK+cPuofk+kT0bUkfVE7AehDjk1IxVQqLHQxItfEx5a4cqt/x5
eeAGegK7iEh7iUgtBA2DIlI2qPf6mcWhFHPomoBDui+yMVththGVCbI00ev1
Y1ExCxcIYOrrNX+K3S0VYVWpUTBwVfQrTg29u9UcUBZrBVkCx1THWoThw5O4
eku+vyruTMh0RqDKKIGqNwYEijguS9ygwIsRkZICeYgbd+vWQOBYUXRJL9bp
FjlfCcmTzScPYMr7olfwacm9+8s3widMGke6Ui9N/fYt8nl0EhNf8mlx1DPA
EbKA6GbFhQ5vBlnA3KX9YSD8+quVN5XDswQhEhauxpF7hv7uJEsg56OTgqWP
TtDvDtFpv8EkC5B8JColUOtBAOH1dWZf6VblkprJ0TzydhOqdlQEt35tCd7Z
0lWIZ9LnwpzCIE7hVpwZR8JpioJGXNggNOIHqNmo/Ip1pLXQj+MsJBTTCCWp
Qbl7t8BzMXsIJ/95kQUQB4MIP90NeS6HIqi7kIfN1Lfpwdai3AmbOJzgtm7H
dxBxsDRLyvYRAHB3r1N+FXL+ZVz4gTUUbUCQ4ObAynzcZAQ3jYIc4EbHmTVp
4Iz8fj9j2mDaT9e4SZq4M0dvJIaTFLaAMbxssIbVT4Q5UD91eAzyTTjFSdPU
TuaBH0xk+T9B+RMeUO5KmmqVk+iXKicKb+g9JOA4NTRqx7PDcjcRcpY/rnIv
9GbkeCueZOTQr4/HiV87kVHmNBJ5dtLT3T1TyHNwdgFxpAFNAJzqEDhBIq+G
BNDUJ0TkfOtb9GbtYYKkROR4JaVRgcMWiQBTS+9pDcRjNZeAV8MhycCbUxDO
SeDIu97SkWaqET0IdDUGRe226omrZ+gWLIrmZodFXXgoEjpBiDohC6K5hGHV
asFMxEtZK6ANb9RnPi1rZLc3cp10ISTgOGW8XnXTOuj8iWMC9HhD+yh3nfwD
d9Novi2KaWO87B9DEByYQdAnbyrvD+2ihlorWQ2ZmlCNoJuc/9EIghoCgpwT
GkUnIijyf6jjsaSOuNgMm9BcOqQiGKKvveNNyj+EDNIOLjeK3KIAvt26PbNL
tvGykAXaaFwlGVfA1E7E2XBkNQWbB0wRV3fSi6JfxS+6bTsRGucOVYi+nJfh
bljEmklXlhbqpfffVoZZQBRYZZhl1NKViyGzeuCoK7dRuOFW0LQiXjnH6Dxq
q2VaJRhWKaeVTowDpcrbtlz5WxdavDKm7ND6kFfFfEwHvNpJc6tJu7AiDatx
Tyjv+X4WrOjpBOEcWx5NDW+rbV00BRNC5BJwpfHEwZ4pBlEZlkrgSq2Eor05
jyp//AP4j5N51k5icrFSsvCVYnQhOGRC12BXAuBKgFqpGGrtoP+8+wXlPfpj
5Q38SWDVemExojuVhFXTKvrhXcobcD/ZlZ/LGThnNr0rIm+0BEqGEogXDDVx
I3P8Tm090wmY4PRYtcihAkmkAzvix9BogeY5dubGoPmO7RC8+QuCmLOtiZhP
PbUIYvFTFrZcreJUQqENS8SEnRNhHQG8GMiE17I9gibjvRhNxZ8WTVfnoamc
+6oBTal8NNElHuiGQAKdMIClTEycaIVNqC/EESpY3/dqdZAzY5FkBNJHl5X/
1mGOQ5tKAQikwKcZgeS007MnLKmvOR9rQP3lhMDqz8eV89fjym1awZBiWVK6
VKB0gaTMJdktC1DyD29j6DCM4m4BJQZVFFKRW/ycg8+nmknm7IBuBrTAIcZW
wmit0uB7DLIDvH6/AFB4vrzW2Rg6q14qCDOJoRMc2YQKYkt2Bq2HZNA4Tn3n
bcp78mGOyXovjSY9VR9QCpByDuFifABb6PlVC5VfvUCkVTZAFeqbQmOHOHR3
K3q0E5WKdLrTBajYsm5bZuQLKg4YAQE2oaZqGiVtEaW/1yMgFMxb7RRNI1MZ
FRIq9xRNq1XD6dmGdKqYwIP+ayWDqdroM3lI0hfj8+mUZDoVOZVjadaMkVFF
92vpoRomK6/vv9O0+768bDp+7evCoG3bLCeWAYYgkrw19FY10fnTSEKptgGk
KaBPRkskOypUiai/bJZNM9ebTdCZtwC/RNKI+8UUh6xJBrtl6e1fAxlkVtJY
MihtwshAjMnQy4JkCy5prlN/YaqU1WueKNlsOxnhyWdjeFIUz5Mk8yQNnvjf
pXft8lqyM/dK8DkVA5VVNlQ+3yVUEHiG5HHeLXRdZ3ez6zJJeMcxQR8TcD6r
NFGSQhQaHx/nhD4dv8xUoXvOn2lSfdym3G2L5RU9M1j23mt/lYhCqhkGxZY5
oEZndDFksW875PeZJvRUTqOPiQz9vUzwvdMygBxAJQXJRPN2R7nK1W3kgS2V
seGlD1FFvGHmJLxWvlASa4JKpXy7lnY+eIsjRGZE4WIlwXpKzIg9G8HFOdWk
vMVTVO6xXnQ7LQTLQUaHkGXrgjyypGLI0rKCnhVbNme/zrnXYR/jEqYLZJBY
NpoMayTHtGU6UyaEDJu2pPZqge6ZYpBSFCBFe7gAO5jkddAxMGppJguHiyaw
9vFmDWR0MV4qNV42j8dXOBY7lRNYDAWjGp35NK0Q8W5gFBFzVAbQ8Wf3lwjS
Ih1B2jQS4BlDJs2/5Ys6PEFK/RYdqrj1VkLPQ8qdQVQlzLDOWYwyya0CmPpG
TH9s5Gd8WMYyXpyq4qot9lxGyXS6NCbObnW3iFNjEwdvyLowwZ7RPkwvl4lT
Ohxw5lgzh5pxbJS1hk0NLIG43Gw7zapGtG9g/tRvNvEfs4fs52P40535kzb8
8b9Db9swouA5TmoAQhkbQjaIEvFBoNU2ir78N1HEObB3wxJwuK8PT4WxaGib
aUMl1/V/zoa3H7eLkIHb+kSLm49R1QgSXeV8RDPvL8eERL8nYvx+v3J+S7Nu
9KOSNhr4oHJ/01xAmxTukPDr2Nk1gECVk03RW00bTaC0+Z4hD4OnGz9+kdtG
mNm/VUYLjQNVKrdtg8o9/AD7rs7C1FdM8gwxoZA9QZzITpZdxccsmMONDw9v
pmsYqZXxT9J4WrmVC/FYwprqeSFrMqGKYcdlwtHaayWdfShT00t2EkBNwmkw
oaGUJM0f7owzOE6zQ0ScTwdtUiJlpgYjqTNi4EI18KNHnVExU5RhDtRMUqOm
gn5ly3geWK7FR3yt1Q0G/5KmEh65eqIJbBfz0hpijls2QnkrnsiLW9O7VjqC
BRJh52p36oP6en0/aeYSOa9Q/0eGHv3FvGGP0Xy6Tb7/la8q7+EByp35Mj1z
7qhXI0exWlrqBCGhFIeEamsl7FxfJwl1DSfYK953XFQPt/kkxcMBoTSOyUD1
5CGpB44pzSDebSfKoMhyFhFBKbOemHPo2+oU9+jkSmv8M6yt2czDe6gX77Uo
Moejx1dFxQ3g4pbMpAe+UK8dUxIxHQMX+h6OGXwNquSTZa1Nlq92RRb/1F7J
rNuu6WMU2e2NChz3XFTk/E97JH7DIucjETlsnXD7EceQ/sJT7I9klf6wh9BC
TPjDbuUeIevy2A/p/foiL1Bx18yOFTVJxkAm1jkRNjJMkKxNFfdgrTKGiUly
DT9E2mlv1s1Cmun6p9cDF3dhiuLwEZfgulrqCnnlM96pQ7wGCUf63gKWLv64
IfgvjBDn4EZlMFKIEB1i1uHllLOHztbtL9LVaoZepkgUSYIiGU0RE7OxKZK0
KWIFagKK6Cx6xB5NYGjgzybi39fqYIuOMXtzHmOhAnYIGQgVaVAjiS/TDIq0
s2WCMKWCBqxODUsTeiy6pG6byJXTEnUGMAYwMLin1I1fUt6CobqhsfQ685qq
lbebXMuF/crfSDhePU+5hxqVW76cLqyPcRMv1i+33Iorft9+sZDoJCaDPSUI
CTAcgXKZbSmXuO4n2b+lXCQmo3j/5eIYr2RJFYSM/TFjOK8Vywj/1ptlL9Zr
wgxTEiFfgIJhYZAxYXQEGWkgQwSJiQIj27xWW2o7BLzepkQK7siUJ2PBrQR/
fxIEf//6vjQC0CV+7v8+xy7IX/2iLMD4Acr7dDjlv3XJjWMFef/rRHjLzud4
eEugcP5Xi3J+1ySQ+IDEQPNs5b/SV7lbR5J2e065c+QaAlgEwd6I8NhZKECM
rYHwOBUjRPRtATKuZ2SkgAr3aD2dqrJ9sIiNVKRS5713ugaFlY/SoHDebKEr
Xj/l336zAQWhgVRmy3qaBONUbng/5a2bHvgbp3UDA8N9ldsJ5QHDxHczWnOQ
uXF2ziFgzMSDEza0tIXRqeWmoA285ooMj1kLoaSML2XHVjCSeYokFQSAq6fp
+r5qE2NJ2UFgAUz1JN4gamLAFo6TQEZotrjrhrEgATc0TMCVUH5orCQDrIhU
qaB5c4NEUkbT86FRM4bsSz/BxsgHlEe8y019WOVeHqg8omfuxhuUP20yfcZr
VW423S4ior5FrvM1lEJhe5823Y7hgHI3zKVPZwC3jDDx4r4PBQHeGgsmrDQS
XLqXRsUfhzRMVLeKd6hBgCMtoY3NOuAyn+Y3932HCGH9ERCmKGbdRJw3SsZ4
I0mFZ21vxKNuifLv/T4vEBPYIDxVJ4uAGzhy3cClhxZ78KJ7dIaday3s3Pj1
ADtZwY6deKI/vMxphRMLwvDLxk/BnLADuMPl/59wpzNijvfBCdk0ZZLkrd1X
NzBvkGw6h3Pi41NicT7SERewxqHP+L+saIvxOn/YJV7nd/QBfLhX+UufpvPi
UWLN88rZRyfq9lF0C3c9Unl9ZetK76kBSiuSVMAbO15LP7RQQ7+E76XcVnR1
3xDgReiSNdaGoytkabz9ldy0n6O1xRo1eb6Gwyk9YvJGV+myv3fRa4kc77k6
caiDH1DOQSzub+Etx+Y8q3ITByq3dhHX8ZfiX5AesRGTsgnTujYkTNq4GjQO
e0kJW2IIk2LCZG3C8AjiKrxzpuFLRKtwiZ+wRbSKCbRMtpPiV0nt38QoVDgI
q+FSMzF0QtVjycXdT85uqPibgDPju+ZMGpyh5/k8shU3E0C+Q1fkEnrAC9g5
5tIGTNfXNypvy0Tl9/kPlfv5L1Vu1Ehmi1dFL/0SWihf4LXQ51EtSvr3HAad
cudIc58nDbxhFugy7GGzaShA4/XpqwlTHVqZqiB+KwHclCVZjJ/JxEgWBspV
1hZ0OncUEMR2NpogtrPBcDfPJ1P3nCiJgCC1eQTRURRYG+5ZVMG9HjphyPUS
SnFK1yrvvl/pdq7CETRyxh7IJj8UhFIAkb30zAb9hF1OyafgyG25zcuU+2dd
M8Mhk7dYw8Dc+LtLw/I9aBZoF+iW/z6jgoit4YitVQw/EDcxpob0Cm6ZIcse
V04zsWM7caRxBPPDaXpWbneR/H3xARJ3XwhMj/Akjh5JHR2h+0wQ1MnQcFvr
UGNaiBAa3t4q/l3usZ9wTjaqvLaRRWHD26S9Sl7WV/WIyfYYsGAfynN1wZBa
sbGAwnokU2voJCG4+HNHMVyAFkDF3bNS5cpeUe4u6eqI3LSQpW2TMqsOQKdA
u+yax4aHHriQLGmQJRlW1kj4pHOc1LwQ4iSFI1sd0mEmOGuYAYFSbbGEv0cc
qEKWZjyxgz7XcferkBwZ3E2EzicGHcT9KX112KMXzf9NyMttwLf3zmNi+Pc+
oHK9BxABls4jAjz2CF7V5pXK3VvDuMDvcy/Ncy3SB/isrJ9DLe3T/QNt0ocJ
USGR2Gpe6cF5Hq64i4RjDSHwixFCBBkflL+BEixJiRDdBAm2i/GXTlHeGnT5
+bKIilTXSEibaIcJriKoKlT4gsZAyZpCDHRjDBTzNWz4vYwA98wy5R+arbzW
V9SfTi9Unzz1C9EUERbcmM8CoMB966jKYeUZIh1OCAQ2MUZQXH81na4bdD74
vNz+5UQIg7/EGBcDA5gXiInf71Fue6nyV41Q3hISE/tREUFKgl5P47PCg20Y
z9B7OZxv3Zn3K/+2z2tf0ywMkLlvaKDpkDI2xVBAIJAGAEyWxgAAPSa2GwK4
q14K63qLYjzM+9rD9Og0IZN03qFr2PltPPfpcc9xVcTqSRLxaOENP3As8tZN
ZYUBA2OUBUOAfhcQSNoMOFQSMiAZjZny7BcGpNyXBimbAxlgQNZEJv0B9wTx
D8EAdLGU9nIFS9L2LzW6iMX2LwmNh7wC3yT7l1REUlRNQHxlLC6V2nlwdnjZ
UOWUj2c68PTP5DsZThJ35mS+5N/8RTrv6XK3np7BGbpAnynRuzvJNnWghlc2
UeXuv1N5LwxS/rfIwj/8BH3/MPd0wbaAbjNpx8XkmIc/o0ASf8YE5ZXTxfvV
rfQY6MWLJnPoIux08HZ5CNujP+8ZvlCcgSHxnibf+WTvsBlMb0zcB0Rx0ItC
cla7G3/iRHJvJTo3ZOKoKlpYV/Q34iXcF22zJk2em5FUc8a4mdxcAnH1QuVO
Gcj5qk6Zg59IuzU+YQgyX7Ig8+t7opDpzpDJ4Gv/ezcWACbx4QWckgFnCvxL
cRxrvFe3cIMyrkVx3jUG5hZTh8Ki40ff1muSdDT1k1NhYMTcfmTSw5ZxMYKD
DIt7nBzFqLuVW/YUCYzRLC5YdOwdL7fbtegAbOow6DStHUZf023108rr9U1t
ah5mrdDE1fghdUw2JtAc13aBmyILN1wUYpr3ZON9TAQ3di5GcFPkXN4ZkRtO
OwmYE/QPh9zHW1cWMW2yAW02TBHS7FyqcivGidxI2KhpXa9Rw3E4QQ1iq8bI
ZAQ1Xv8fkdu7T1BDL5BRA92xLuwagQhJZ7RJWauXCDapgDJyN8jaVE/GL0zk
JZGW7kBFSJWuDCE2OFvoY60YrbxZA1h/YJ3i+AAvGi0aLIV4STBe0u4Uk3zp
QxKighGDouxSZNd2L1D+NHrwoXfRx0Vv86UtMv2HkIzbupke4mIbniPXEh2Q
eqfLrcptKCNVQReVcc8JbV4g2pQtVdiwFFGzvXzcE4TbnVO8I1cldqYb2pfO
uBAy/s03M2Tc6VO4HIR7j8Xt+dEVTeq2FNIEe7FFaRI4G2/tDKYJ1l6xjp3J
alGa4PPCTb6A4r/XlNEzm8gB1hsYJBmYFmfjqgKY9GCWpJESBkv8o/PZr3xy
bC49loAkKL0tAMkNnYJk3Vyd9H0zSPoi6ppDTQQEy94NAhCkZz45K8ldjnac
sKIex9mt0Av7M88tiBWThjleQhOI3v6yoRxlBThEsFzPgoVFyoiQHea2hi4/
ZQPpPKNR/hh9ip+Vd3LVLOZHATuu6YId3cEONHxpVAAI1AqvnLCtypV38pZZ
54Vbi2LyMoKStPPWwUC58DjD59EJLmS580Z2MUITUTBsZeaOUP78Ecqtnx9h
CoiSYKJkncOlQhSMAytUJPBaFEMTuiRkmSYpbiCnIyEgyacACVS70S2cstGW
ZqquBpmikQLNkjFhD1gXaBa+rUQwo5KjchWjmSwcek2CKAmnbLy+yyJmM9Oj
M8oU25QBXUIBQ0/xLJmLM5sMYa7yNk1i4eI203y7RJfrc0Sgc0IZb94S5b0y
S4SMQQyvaEcXljO8iyxWpp7bTx9EKRMn17uPyhEq/NKVymveQs8SsCnilmu4
bqGX9gnsp1kre2kex1p3fGZHS8krPXE/rvZ3SAvP3A03KK9ff5r9L4U6Rgdk
tYwh1d4FdMQo6WKV6hLJFncX4ZLrRS7/4QcFMzSwSBxuKeHU1ii95LuOs9e1
FUwZr+8Dyrv/XvV5TRmSKzZlgBVQpidTJoW7/BoOzFKf/GahyoSAUbGA+X4s
YErmELbpCf71vcARoa8WHFFQy/8/WqH8N8HlL6cFKlAoCH/EOSEolN/vY4Xi
VdIH9UIf5daO1IqEAAOqbIMyGR7e1muVUq9VSuWTdA6CLIPoHHtMk+Yx/p47
WRrYoyuC/9IkocvVXdDlakuZILoaGKE4ZfL+2yhV65wul/OrYJPOeyTALzXb
vohU1CYWK2a4K8cF8RLUhsAtuXVzVG7yIwFlcD+kS9oUw/LYv4zY/DJ7yC6o
wj1Q2Ql9GqpwcCRphVgLwq6TgjAqTA+voa7SIREUr24eTd8misDFiBfyXhmg
vJcehbcfjyWI47VeMUiR4GuEIF6vfw+1yTmaYGe3aAvE5VcgSMqfTvpkGOnc
xvn0O5X0bfolcitDSUTc/l3lzVmgchU0F08QAo6jYKB9r7Y5MDzG9OzDfz1D
X5/dp7wtZKgqN6rcgrkqt2EpXa1o/u2kz+w4F4cd53KTY/RsjhFBTvA+Yid4
/c3JzbKD7ohBQZMD1HswRV58mdvMEACsgEpdheybW8WJN26yW11ivA4WSm3h
3o44FqH1hLecLNy8aaxS3IVYA0GvebNcD1Mx1OCzauIY9dnQ5DgbVkaoQROA
hYlBhrdymPrwtTU0Vqu/zY3r47jBG0y8c1JqRnRYlZ2NFiXovcfO5hOkgdsD
QULPnkih/knYYTua3ZKCWTCEU75O05hAjHAaptE4mRHhLVgBJUJOxqkYHKqR
sscit8blIFL2Hf1SkcZhYnTvghvX5zmaIISa0dywS0bee6dLbhQs8EFPUwT1
6iMGB42joErAC5gc0SN87OEcWMsw8DZMCrjhzx/JzJBYqvzc2bNYOc1z6KV1
wYok91vAX29haVHBYsICBQazgkMm0NRh0CRPhHA1GRbocGBElg52Y9WxJTQw
HC7B/c1y6658iuVHQvxM2XiRG0KHjDvlYdEUyAGsm8aKzWnHWrx2zipgt9n2
EhJk8yUmMp9Og/Oo1jrD72E7zean6PJ796+V//wEhgMWS3G/AZzBR3fIOLZT
6ZWgp3ajnHEPJOOJ7cqrWK28rViIT4heSZfIZtIee0pliXobPZU2mnxtW+Rt
P8JX/yOoD83d9U3lXNwfDLdkgex1YgpVbr1FIVzrvjBN25kgGoKA7GZGBX1C
GhYbldlPGoRYCZHGlfablpE8nUYyea5yZ9EFtn9ftnpoXILWWPgPnDayVEbS
5oXOvgRGJh8Y1wov+CJLE/LDN9aEvEiHEZGjhheR6OtnO+XFu7+RyKsxMdAY
zz8mGuOvpC/+qg3Mx3np2o/4Kgvj8qVAW/xes4K0BUc+tlusMLdwLoh61A8L
ox/lj7NbYV1hbklXuBN/SR5UR0OIEk7dCH7PhuMtvfULQtnVs7nOrFNefK7Q
xUBqhAmXLgHRkb9qOc3C4uL2qG3JhrbFG/hrCxDcwYm07bzhmg40txFdRVuW
XQvoXGiaxcnamRztYDZ06VH0OpuZHO3okhAmzTLdtKPTy5vDRTg4mbk8XpeO
8ajURWIVOtJRATlBdKBfM8yo0rf0XQQ/IC2Ai6xlVkx0NSHg8Hp/Xz4sBJ/P
0AW8o5LBkWRwpAEOjnaM6a2gvxANQfCT6wA7SMqfhgbAegG6Eg+6hybsbZyg
8XbSeQx+JJyDaG7Zyk1LcHK3NQtGNEqcow0QcCjZbOOg2JEaogkabZCF3DCX
XMtcosk65e7fxEujEkAJPbsj5VwF57zeinf5dVnCRR/9mXp6KTOV9/RDxMJb
lZXyidtHMGjCrmlSU8ajCEBhniD/TR6WMMKDQJJySpcie7eGLO88es9KFvPw
+z2ovNG4sJL9nTRY+bfcwp9zyJOazYFj0RUhGSM+8nlyXRhk/WTor1Tu1Zci
TEnHBFk1Up7mY7A02cYJPQXUhmTZrqCwAMXvU4aKTYHs+Ih3XIHcSNpyQ8dA
ejJKdBAVWVtv8WMaJRZGOFPzbCA76G8JJDjrnxS5AYtCtwncQfuHX9BV63MB
RRLASJopknJfuD9M+hJJEoUg8ZvLGCbqi52FUjNdGJZuMZkbA5LX90aVxine
dI9BYlyJHf8wSsMMzBRwxZ/3jHI5zSos0VWpYfQ04TS8YAOlhq5edRtQ6MTr
JpZOp2vVL+hdmyFD9kbezKHRLVODojMMJk1G9EcVLyeuIC28BfXq0BVjg/gm
51ptnaFDG8ISHe+A2ODsbTmvwCvjI+hBDyZS40s8vXjPU02NFBOjm0vszD3y
A+XNo1PrHM01YoXTQXMLtDhFkuDYBu7SnkAfYlTxycoizs4cbJGF5SlAo5ih
kXL26WY0GPuxH+bBag2Lq5zWCuU2kcKrWkKgmKdyaJFaPk95dcuUu32VXCk7
jkqxGq+IJ5lxCZGSU3iMMxwXOIkNl0khDrqfzNFNwaY8RAxe1Cv9yKOio4bj
43Rk5UGejrc15N2oaTJvWo4TA5RI+gtnKG/Zy0wI+j0cU2xUFuCDmcNPMAqJ
MiLHTWxQdLVqMYsODQp33HNcQsYT5un+Kte4QrkIEosCSXHu986vES02MjUS
wIZKAhpghnDjb9HjGpse7pF6lRvWTyKq2rhEhAjIwYGOdkn3khBhiIgAucGm
RiT1AmI0jAppYVGDb2uHRkWHvnUn/zIInQbCoxsjIwNk8Ll0280RPnzFwkOk
tCMd40vefyeKBzvT0k3j4Z22aHi0nS+HgREJEryCh2KnZV0ED84BNKRepPw5
T7L08NY8z+usXjZ6g6DAYCjSeOhn42G9wYM37knlPddfowFN/ad1igeOaYgo
YUlSbSIbOskC3VE5RQEaCVCD0yL4fQmDAhg4w1lsxJgTfA1eIK9bpMMYZWOD
WIW7BiGUM1wN2k7zh+wGw0LcSbG/cSLp86EiMBgXEBaEipOkr07QOMIFt+BF
BrxwDkjHcn/CDOVuKmVmZICMDCND2uXtqeJB/2MPL6HbQ3N3DzZDMIO+3o3g
0d5SGP499G9Ak50blFe9QvkVgiW/5VXlnWhTbgdaq9IpfvYgUQzNi+sUyOEd
Rc1qbh8A4JEmcU/QQ3dwoWsHbzTwdF+F/I3J3SS8flx8AgGiaQKryOklHfXg
UblBsJLCtoMJYIX+CO1isIweaEkLYFCaaySIBkzaWBxIEa/XT9je6Lq4NG/a
wN0VakJ3k2HQJL01y8J6sxQfs7bjyYcPPlKulThGBH2V/g4IktBJEVSMARHG
JyeW0FigZUwgYSLpnc4hhKhr7oVnAwi5/5/UoAQSBhByzkYK5VPMn8+H/CnR
/BlaaHzs4CoHSuh+JXGq4glhj1YuMD3+LZ9V/m03MHtErxQzfLLuwn40G3+m
cv9Kl8Y+tyuvz3flnRrSH7suhU7n+Db6Xj92OlndutsqLBH4FMfkZnRrJue1
3RGD0124Y7K8FndSgSxpIem6Y562NGnGzguE74XEj1JkwDlQWoiaeoOaIg5+
zBupUTOdUQM1AtgANcmAMRxCZR2CRSKTtQSZGEgRnNbjQ7yMCTSIxksmwIv2
Md7LksjVHsad2F/5N2EBFOvrU9x56NQWzRThikukyM0lBYMdXZC+pe9BeiQA
E3iHtcFGCFqGFBmsYPjf+hflDxisvJkk1w40s4/JAi/JGLwkzVHjZQ/7oz28
uhfx0eYNMnbglrsP0T3Vw9m1Uc6OHc3K271D5WpqVK6pkTsaYgVPrn4dXb6I
Ra+WcufhBFIzaTAl4Vxgjl6sVd4zBJdhfUKTg4Ywok3Akkqkc7ljuGFIRqDh
LXslVCUpORr/4tJ0klVTBbwI3Au3KUkAF4YSlo8poERaKOHvWRdSoqcufS+Z
GVACWgV+qwtSqFhS9MSPzBo9kMJHLb8mBZud+ePlKoS+ooiXhEanOChL/bOV
i0Eepnqm5GHKeP87AgVJLBsZuIVUASqqntJxkUEBLtzJd9Fp+ll2MO6LvQUt
kCpFTIt0AS1GcWKxegSviXyAMEPO547blLviZdJQx3HusVE+wrs7Hq3nBpDY
XwFaJs7lfKD7/xfH5GGMjHm7NSpj4HJ6xIRLpE4tyTJGx0rRqCJgyazHlb9y
JCnwccqtnswLXREjtVkCp73OrJcJ7AxUQRnrknLhiG5REoEJRPb0IFoSrKfR
agUo0XKFq0yBkbGiSzazqangfIutVSoCm4N4KrBiFAu3A3hAa5YV07gXOBCD
yZfghEaW9QixxGsmm7NijHJfXSLcOcVRzULAiG4ptgGD4Q28S3Ixi+j+jjoJ
lhSDMvQX++tDwKRxFKIk4X+cg/Xc4p++2s2h3V1Emb0kmOjWnTOBbNmd9GRI
hHsH9uMlNlQrf3u58vZsBScaeOu1A8SOg2SrjjVwhDbhHOWu/thNBhlgGArB
TNo5XyP5Z2SZMFi2eY/fE+xZdTOdKL3uVe6k53GJKl/Fn6a4IKZNKkaopPnY
zTghxGDd6dOlS50BTm0VOyEARyiTcdeTo1uyINAoxhglgB2aNnngKYrhTveQ
O/i1P9HVj/zQP8adHvnc8coXhRbpYJXoRyzx+xj2qENSOWKL0s4fW8L8Dcdk
Uf3MnOkZSBKwpXqYcKVscMAXk5+BDHFn9uLfFSmS6QIuRQyXJODCf0xwkYQN
k6WIyZIEVbCen181q5NETOF7IiYsm4nJ2xRbYdnLO6J26aqYaIpecePso6vJ
Tpom22fjcYUzK0Yol0yKW/sCuXywZrSxR1HOmNDJkmnR0EkZh1gFNpY3EsQk
QtikjD3iUcnSZrJAJq1FC8o4No/hIaIlGYZi+a7J6uIfRjTLHaxZjnGbMEw0
IooZ7oGVyi+bofxVE+hr8T4RnrRqnqQ0VSye0O/hmAZT/LvulQDsjnphSpFm
Sgu6ilcq44aqsFAae0Y1w2k0sU3dQZb5Ifrz/v3JPteR/iDljZaTRwgTx5AF
4sJXOlES3p4tuPDWrFO5ZhIsB8kMHcI1iT7co8QtwgkSv84RNHgg83AUPKTn
eoiXRLWtQBSSEOI9frdV1PZ13gSZOZK1OKJND30VaBd/wQvCkQwfi71nh7Hh
8Xr/nOOuUY5UmGU4bGv8FYsVGx1tbPLg4X/7NoZH9xAeiK8wNqS+PmnA8eEb
pZ3CIxWT9Cm14dHdhgcKRzysWDDWZlAfuQTtXs/wELGSssjx+32RbI5WKFeF
ARVNj5pnxMhsJiOzebDQ44Fv6dRaqExSgEeyC3j0FHhEPE2PAB49o7IE+7Ej
ApvJczdog53qCh0d+ehIOW8dCAOxZHaujsn2JjU79tLJ0kRXh8a5NObQOQRw
ZPxVIxkciKt4lZNUrmQ032Y6ZUcqElehkTIaZVocNpK6ZiTQJJO5vmOyxFES
YAZbHn2vnKGxZUzgbwJwbAl9jy4Tydj6xNYlwpAiJEGc48SP4wirlihv+0KV
W/CscpuXcmOVBNYiwrWsCvGRjsFHSo48FQkdzoHdoeexyLGbZcHuSpEk4Efo
eYQlECRpr2oZ4ZmeyToy7X3uUf7jg7nM5zT7tYNEhSYe4FoTTq2jTYIXGi6J
G28fKRYUQ24jHDWsV14jmYpmurTuoqe7kz7gPdx/bd9CeLclOA8JK4CK04bb
Jbz7sLt0OO+z7t/+LwV4SdkqZZnQJRHGa93V84QuWT4WsTPqLY0ubbKgK5t/
09dhoPAuu+sI4NglbgPXURdQxV33EvrPm4BJELktDiO3hioYKQZLMkz9rFY2
VWZ9CqrgZPltB1PFbyeLefstvNkHy5GPTuFUEKD8oUVyOgueDHI6GiihFDGj
gmCy5YlAjgQwsaVImo0Oa5E4mFwnLLEdDv2JYcn1UZaYcG06ZpOzLlliJXWK
OskOw+5cw0DJwO4YoDj7SSzupOnROA/h2LmcuJmtgBNGijifpLt1GkdQABed
x0n65eMYMK70HOqUMHBB7rzhsYTZYhNGbFCUOllGDPEizO9oaZJlWVJujS1W
ficvvoIFvv6AH2kxiO2NwZTuzpEyvfvaBtIkq5Vf/iKZO9Ikh2RhEq8K4Pg1
Bxx3LWbBtjQ/oBIFTNoCzJBRDJggZpsHmDSOElTpmQ8YaBWvfKHy181WuWUz
lFexULnbaAbTVdp79F66cD/Bgddj9ACH0CYbfLnaaaXP+hCNg6QGWugR99Er
3LGKPqSFyquap/wq4tTmWbyY26tfoFz63J0dC5g1eIXzoZOx7oGII4MuMC3z
6VUskNvWRbzROW7dJUN5o3P/9q8WYCfIDWnWcAbZKJkiObrjh+t1RD8PqlI4
9PIQqZv77tWsycIFuWuWR+IthjF0ShdCRrcaCNNDpRxv+Qcx0y0fM6bdY272
xDDSQo4njzBB/LWJT8ft7BhNMAVFaWUiUSBVDFm8ft8L8kSaLGl3cf9CiXIt
Y6WbUzNS4R4PfT8aUHmJaw5uiBoe7kedCQ1P2t6lTMZbYe2JnRMq0krljX2h
UiGDc52Oo9zxdeXOp5dHFzCszWOakDoJaJLOo4n0SOVYLCgComDgfiIGKGkG
StKp1wttCCYQFFGkbJ7OWOkcKUUGKSZdzKWr4nbKx4RuR+RLNzvrY2SMibD4
t9wQyJSElilHK2UXNdNXkhDi7lyucmum0wREZr9Vtgqgk2Yvim84QhAlC9EE
QVpDEW/WAuXNmMEUScdQpAhHnflx60hD0LzzS5cINWqW0r9fh2gKV7jsK1Xe
Y/crbyhd2kikIF8Ml4MV8a0caTXcaGH9g2PS2VvGjbCdBtYOOH7JaSYS7aBJ
SS/NbSCXUTNf5cpe1myZq7xtxIsdi4QtzcSN5rmylmoXXVx2vEx/R6fEHrq/
m8ZeMAYDO5YQl2h++nPpejsouoHS/XepvCRzsRgj7/5fBtbKQEQqYkt497nV
y1is5MPj+piMTjqGHcmQHSmbHR9eWmHyy5HASSE+Plm/RPkbFqncN26SQO2b
hJL+EptghfJfJ7TjSQk+wvSNkKM4MDvEBA7BkslxJ/0yQg58NqP4sqt/Tw+j
SxJACE2pUQhE9WdYGH0SgKRqOB6m8hmI8qH45V6yIZr3eD+lMRKJyML65MuV
941cycYkdgxB7KwyeR1NEOc4zZYFT5mQTKEesQmy4HEhSJJRkQU1jOHBd2LQ
IVlkNAWworIF9NgcrN1L2/SQMUUFAOGaExsgzI8k4CHy4zrwIljk/yRxeVh/
eso0I45WCCTaygJIOHvWKL+MZs86UuXbl4r+0JSgC/MyejuEEnAFexeJ1siG
sRCOr86cGSRxMJfjUUGUqN3AlMjNfZGHhz4YO1GKs5dXMxqJ8eRAEo6titFA
JoTTt/u3BIAwYMD6x6Vo5LwcvCQigAaGCKIy6PnuXMR5OQTUneZZ9HiN3MWB
YfAi/WiGym0dR0+Tob7/JXZqsxTvHTvwx8r/5pcNB+77pZ74af8mMTyIp7oz
dDOzJM/6NCxK7p67dDtbLRc+FxMmTeanZ0pRx0pHHe7I0TMLCtI+zZS/FkIi
98QjMr73TTElKELDaTD5aTYkmO3uH1uV9yGZxD+TWKd5X5iHSbISyDpVQ9mN
uFN/Rdecz0e0Ar1N+J0MZjpmud/3dtYKZppfnTfDq7ntJh15mqd5mme9dYTb
NY8pb8PjKreCnvXX9Xq9ZTOV+oJWD0etcKmZ81YxSd6cv1yoGuxkLvmRa3nO
p50ja+QMqBnLbc79277KBWMF6iGj537VZJWbP0jmvviOtAl2+H3/Q+Z83Xpr
zg+JRDisOZ+x57wxI3aco0JiHDzh2YpkJLDBUxzy4LMsF0yFGSQBOgHdeTMp
VqJDRylpmdnKH/qwTHf0m8aU3reWpsQylVs+hWT9XP7a2btKBMFuXnpM8z2j
tQHm+8754djPscBw3n/n+5JXaa61ilDz5n2mi3nfgNjJAZ7bB2luEwGCsY/D
snu5MpRMhDfgV8obQkw4sgtpsgJtkMGxO2Mg69WT4agjDNTOUX7Fi/Rv5pD+
IQPQPI/PbfaWRABnO0JVEwh9iCo3TsX73EQfQvN0GU2T6XI/UHnL6d82QS56
A75vgSCtq0C0lUBA1NgHVIhwB0y6b0PgBmZA1mYARiRNkrHm/ydtCyTc+Wnn
f1Ew/+kS700ZJW7he5LHQOmY1Jhm/P/cpdw/HOSpjwBnbuKvVW7dYJ0ZKeJ4
Jk/6e6OTfvtonvjChrQ3+ucFc177gyQu55jlGLhEDWXOPa54utNUpzdyfh9o
lBWoy3pUeSsG0M/ond70uHJKByt3wt3Kv+lzknslFHw+9BGIe7KPSIc+IoVE
rO0jsjF5kqyGgZ2PJQtxrRYAraQpG6YxDJCWH8vBky8qr//PONgZ2IoYUYDS
DrdyIsMBl6TAVhAU/F7kS6tWGyaIfZj5t5lguNAVE5RulTwhqPlgUYLMrA5N
2MS4zp2k19s/TZwipecc3yhV5afINH7tK3TFG684K7RrFc0KosdGelkNS0gg
0DTbQcKgaTGHbFKARNoSBRoQ+IqPuxcwLBgVSZEL7qLhYdW6BgZwAVhoSKS5
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
ppHgj79qCbTlTG89LwQwwzJF34SihrVmd69DsRLCWd7d1BGcUc3ruzTR+gWZ
FzpAaxi09pW6P9qvNQ8B947TIN8lmlfE5ji+y3YNs4UM9mVytZqGNQoZctoB
gRJ6B2PuXcYc4qzr6WGqa+EyVVm0HK7wGjSgyshRqnL2143BEsROYFBVFrwB
Q7aBDvjt8Br5yMLHwjOoKl86VkBTTL98klOLn0Xm2d3Wgj9hFeKw1RGyd4B3
gKDufbgvA452KD32tlJmTm6jnLlnHY7xnrXwI1r1Ae/fBrwNfxJKE9wAgiCC
q4Gmum8dH/vXMXTyxkdF0KrMlJWr6Lko1sN75+uKA+CV12tFHRs92t6hKphJ
jCtoLdO7GDzovec0Zoq6MROwUoQTI6tvT5WHuzxNMpxUHjRpXwr3ZaTdp0Fl
AFUNqkv1Zd781++TauU6D8D/KR5p26e6trWprrGvW3BNHCNiFW9fr9I35zGu
+hpc6U1zBJmBUADvacWB2UMzYm0tNKqsQPRapgwGOIo3wxm+A5K4H85831aN
I5QVABOqZQvBKR4/MgynPbiBbgMXBqtp7TXCqdjdgVBab4/9rSRPNp5henPr
g9VUDJgVkG4iE5fU9YHba2Fs5UjEqLDt3j7PAKyPE9Wc2jaILbzZXD4jYdx9
qZ7Ti5ymH8oWfjXbZLxV/RFapdv5c2azufeylLCV59KglmBJaZA1Sa+i3clf
DjO28K87b7xZda5eDxXFctxbhoLcNVA/rxuSlzqOAZWugLjauoQBNYBeC927
4JrtbKUjnYxPVR9N8X0dgqBVm1kBxYgNbawBEdrZNqxaKdSvswcIE6KJJ/JH
hsG0AfJ+M4OppVlrUw4lCX4joggyl2dwNbWpXvud2yyOLFRCfldVStbUoKJ7
Nwp3yYO0PnIEkGNMAUlrH/Y73WG7WLaWt1X1P3YuEpSQAC0affQ4PyBQQO7i
L+8xSvCUO8ZOIPU5sm033rEFUZKcy7cSRtWB06i2s/70mndRgi2lVkS8Rgti
Bc2GNIhFJ0oWTLWic2A7XlQETGXjChXvXku6o4Wn0L13LcElnvC8gQxjJodQ
gW9FI9OAwWzEwlOoFh5qqwlWji49UbaRlteqA46G+Tz55ZWKNxDlrYnRYyIq
l3zHZPLacbwDvrl626tsEaIblfAtszhys470QsiEpqYkdtMGoTZ736xcbUFx
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
0f9C/dn/B1dvJBE=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"ff28e781-bdaf-4e52-b3b0-4897d5282b0d"],

Cell[TextData[{
 "Oops, that\[CloseCurlyQuote]s no regular polyhedron! What did we miss?\nThe \
base flag was not chosen correctly. This is what we call the ",
 StyleBox["naive",
  FontSlant->"Italic"],
 " flag in ",
 StyleBox["Section-5C.nb", "Code"],
 ".\nTo find the correct flag by Wythoff\[CloseCurlyQuote]s construction much \
work was done."
}], "Text",
 CellChangeTimes->{{3.906234039962646*^9, 3.906234064291238*^9}, {
  3.9062340945102377`*^9, 3.906234222439213*^9}, {3.906234429579658*^9, 
  3.9062344297785387`*^9}},ExpressionUUID->"0f7f9b51-833f-4ddf-aa47-\
849dfb282379"],

Cell[TextData[{
 "First we define the linearizing function to work with the golden ratio \
without approximating every time (see ",
 StyleBox["Section-5C.nb", "Code"],
 "):"
}], "Text",
 CellChangeTimes->{{3.906234269022427*^9, 
  3.90623430655908*^9}},ExpressionUUID->"1b0270f4-1399-4232-a94c-\
12539495ea2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Numerico", "=", 
   RowBox[{"\[Rho]", "\[Rule]", 
    RowBox[{"N", "[", "GoldenRatio", "]"}]}]}], ";"}]], "Code",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.532697464695129*^9, 3.532697467755123*^9}, {
   3.532719129086279*^9, 3.532719134272582*^9}, 3.904150168172997*^9},
 CellLabel->
  "In[418]:=",ExpressionUUID->"213124e7-a5a6-4248-b3da-24255bbc8756"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LinealQ", "[", "p_", "]"}], ":=", 
   RowBox[{
    RowBox[{"PolynomialQ", "[", 
     RowBox[{"p", ",", "\[Rho]"}], "]"}], "&&", 
    RowBox[{
     RowBox[{"Exponent", 
      StyleBox["[", "MR"], 
      RowBox[{
       StyleBox["p", "TI"], 
       StyleBox[",", "MR"], "\[Rho]"}], 
      StyleBox["]", "MR"]}], " ", "<=", "1"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ReglaBaja", "[", 
   StyleBox["n_", "MR"], " ", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"\[Rho]", "^", "n"}], "->", 
   RowBox[{
    RowBox[{"\[Rho]", "^", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}], "+", 
    RowBox[{"\[Rho]", "^", 
     RowBox[{"(", 
      RowBox[{"n", "-", "2"}], ")"}]}]}]}]}]}], "Code",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.533398203379736*^9, 3.5333982998404417`*^9}, {
  3.5333983983243933`*^9, 3.533398470079064*^9}, {3.5335168387474957`*^9, 
  3.5335169164255247`*^9}, {3.5335684490408077`*^9, 3.5335684544070473`*^9}, {
  3.53356849838363*^9, 3.53356850940991*^9}, {3.533568544549871*^9, 
  3.5335685536833067`*^9}, {3.533568596543367*^9, 3.533568650944015*^9}, {
  3.827578497063059*^9, 3.827578498918269*^9}, {3.827578785506315*^9, 
  3.827578798624302*^9}, {3.827578865968276*^9, 3.827578920790349*^9}, {
  3.827578951716607*^9, 3.827578982890522*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"324a4d55-0811-45a2-8a2c-f67f90b44e8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HazLineal", "[", "pol_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", "pol"}], "}"}], ",", "\n", 
     "\t\t                                      ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"PolynomialQ", "[", 
        RowBox[{"p", ",", "\[Rho]"}], "]"}], ",", "\n", 
       "\t\t                               ", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"LinealQ", "[", "p", "]"}], "]"}], ",", "\n", 
          "\t\t\t          ", 
          RowBox[{"p", "=", 
           RowBox[{"Collect", "[", 
            RowBox[{
             RowBox[{"p", "/.", 
              RowBox[{"ReglaBaja", "[", 
               RowBox[{
                StyleBox["Exponent", "MR"], 
                StyleBox["[", "MR"], 
                RowBox[{
                 StyleBox["p", "TI"], 
                 StyleBox[",", "MR"], "\[Rho]"}], 
                StyleBox["]", "MR"]}], " ", "]"}]}], ",", "\[Rho]"}], 
            "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"Expand", "[", "p", "]"}]}], ",", 
       RowBox[{"HazLineal", "/@", "pol"}]}], "]"}]}], "\n", 
    "\t\t\t                                              ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HazLineal", "[", "L_List", "]"}], ":=", 
   RowBox[{"HazLineal", "/@", "L"}]}], " ", ";"}]}], "Code",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.533398203379736*^9, 3.5333982998404417`*^9}, {
   3.5333983983243933`*^9, 3.533398470079064*^9}, {3.5335168387474957`*^9, 
   3.5335169164255247`*^9}, {3.5335684490408077`*^9, 
   3.5335684544070473`*^9}, {3.53356849838363*^9, 3.53356850940991*^9}, {
   3.533568544549871*^9, 3.5335685536833067`*^9}, 3.533568596543367*^9, {
   3.533568775527371*^9, 3.533568811100272*^9}, {3.727731899515444*^9, 
   3.727731926633685*^9}, {3.827579008948431*^9, 3.827579048142242*^9}, {
   3.827579114080023*^9, 3.827579120852111*^9}, {3.827579179151499*^9, 
   3.8275791804555807`*^9}, {3.827579213992777*^9, 3.827579216861252*^9}, {
   3.827579266778852*^9, 3.827579278467498*^9}, {3.827579444295848*^9, 
   3.827579445274016*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"b3c21eda-79ea-4303-90b0-94632ac8b175"],

Cell["\<\
And construct the icosahedron using the reflection matrices found in \
Wikipedia:\
\>", "Text",
 CellChangeTimes->{{3.9062343168166857`*^9, 
  3.906234332020668*^9}},ExpressionUUID->"aa914149-ee50-4c55-9cc2-\
7a410483ce84"],

Cell[BoxData[{
 RowBox[{"E2", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"E1", ":=", 
  RowBox[{"HazLineal", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Rho]"}], ")"}], "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "\[Rho]"}], "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Rho]"}], "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Rho]"}], ")"}], "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Rho]"}], ")"}], "/", "2"}], ",", 
       RowBox[{"\[Rho]", "/", "2"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"E0", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}], "Code",
 CellChangeTimes->{{3.903286200831295*^9, 3.9032862139944468`*^9}, {
   3.904063133655281*^9, 3.904063202525786*^9}, {3.9040640972128267`*^9, 
   3.904064097575598*^9}, {3.904064522712743*^9, 3.904064573643632*^9}, {
   3.904065943240423*^9, 3.904065949027985*^9}, {3.9040660944933367`*^9, 
   3.904066099078072*^9}, {3.904081575479621*^9, 3.904081577155512*^9}, {
   3.904081620260375*^9, 3.904081621384323*^9}, {3.904138356937647*^9, 
   3.904138483505809*^9}, 3.904149051667768*^9, {3.904153435360661*^9, 
   3.9041534392897863`*^9}, {3.9043162268509398`*^9, 
   3.9043162354065323`*^9}, {3.9043164193116083`*^9, 3.904316439023012*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"d238810b-e498-4be2-88c9-db2073ccd3e2"],

Cell[BoxData[{
 RowBox[{"v0", ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}], ",", "\[Rho]"}], "}"}]}], "\n", 
 RowBox[{"v1", ":=", 
  RowBox[{"HazLineal", "[", 
   RowBox[{"Midpoint", "[", 
    RowBox[{"{", 
     RowBox[{"v0", ",", 
      RowBox[{"v0", ".", "E0"}]}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", ":=", 
  RowBox[{"HazLineal", "[", 
   RowBox[{"RegionCentroid", "[", 
    RowBox[{"Polygon", "[", 
     RowBox[{"{", 
      RowBox[{"v0", ",", 
       RowBox[{"v0", ".", "E0"}], ",", 
       RowBox[{"v0", ".", "E0", ".", "E1", ".", "E0"}]}], "}"}], "]"}], "]"}],
    "]"}]}]}], "Code",
 CellChangeTimes->{{3.904150250360507*^9, 3.9041502713081703`*^9}, {
   3.904150532701367*^9, 3.904150571027421*^9}, {3.904150732769535*^9, 
   3.904150739381835*^9}, {3.904153626321821*^9, 3.904153659058982*^9}, 
   3.904153825644039*^9, {3.904154876395043*^9, 3.904154893207798*^9}, {
   3.904154931257386*^9, 3.904154938055279*^9}, {3.904154985663465*^9, 
   3.904154997426023*^9}, 3.904315762572461*^9, {3.904316092277796*^9, 
   3.904316093202608*^9}, {3.9043166214846783`*^9, 3.904316630279489*^9}, {
   3.90431683188806*^9, 3.904316839074512*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"f4d36296-20fc-476e-92ae-42d4ca9c6a06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v0", ".", "E0"}], "]"}], "==", "v0"}], ",", 
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v1", ".", "E0"}], "]"}], "==", "v1"}], ",", 
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v2", ".", "E0"}], "]"}], "==", "v2"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v0", ".", "E1"}], "]"}], "==", "v0"}], ",", 
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v1", ".", "E1"}], "]"}], "==", "v1"}], ",", 
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v2", ".", "E1"}], "]"}], "==", "v2"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v0", ".", "E2"}], "]"}], "==", "v0"}], ",", 
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v1", ".", "E2"}], "]"}], "==", "v1"}], ",", 
      RowBox[{
       RowBox[{"HazLineal", "[", 
        RowBox[{"v2", ".", "E2"}], "]"}], "==", "v2"}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904154279853559*^9, 3.9041543687830467`*^9}, {
  3.904154456763191*^9, 3.904154469172247*^9}, {3.90415452578857*^9, 
  3.9041545636668377`*^9}, {3.904316470176362*^9, 3.904316547347529*^9}, {
  3.904316589744546*^9, 3.9043165898717813`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"659904b2-cfa4-4921-8eac-3d17630c79c3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"False", "True", "True"},
     {"True", "False", "True"},
     {"True", "True", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["\[Rho]", "3"], ",", "0", ",", 
         RowBox[{
          FractionBox["1", "3"], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[Rho]"}], "3"]}]}], "}"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["\[Rho]", "3"]}], ",", "0", ",", 
         RowBox[{
          FractionBox["1", "3"], "+", 
          FractionBox[
           RowBox[{"2", " ", "\[Rho]"}], "3"]}]}], "}"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9041543225158577`*^9, 3.904154386210373*^9}, {
   3.904154453192923*^9, 3.904154469663739*^9}, 3.904154513492382*^9, 
   3.90415456572934*^9, 3.904154640703148*^9, {3.90415489743372*^9, 
   3.904154940114828*^9}, {3.904154988695608*^9, 3.90415499938452*^9}, 
   3.904315768468392*^9, 3.904316291716195*^9, 3.9043165479620333`*^9, 
   3.904316590205552*^9, 3.9043166407040462`*^9, 3.904334224609023*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"74c67f27-a0f8-4e08-bb23-\
ac9b1422b8b3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"flagIcoAbstracto", ":=", 
  RowBox[{"HazLineal", "[", 
   RowBox[{"{", 
    RowBox[{"v0", ",", "v1", ",", "v2", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "\n", 
 RowBox[{"flagIco", ":=", 
  RowBox[{"flagIcoAbstracto", "/.", "Numerico"}]}], "\n", 
 RowBox[{"gphflagIco", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"flagIco", ",", 
        RowBox[{"VertexColors", "->", 
         RowBox[{"{", 
          RowBox[{"Red", ",", " ", "Blue", ",", "Green", ",", "Yellow"}], 
          "}"}]}]}], "]"}], ",", 
      RowBox[{"Opacity", "[", 
       RowBox[{"0.7", ",", "Magenta"}], "]"}], ",", 
      RowBox[{"ConvexHullMesh", "[", "flagIco", "]"}]}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{
  3.904316868917542*^9, {3.904316940463491*^9, 3.904316995921873*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"f0f74a2c-ffb6-426b-990b-fae6e55dbdd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flagIco", "/.", "Numerico"}]], "Input",
 CellChangeTimes->{{3.904316785508101*^9, 3.904316789836405*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"72587a0a-95e8-4396-964f-a82637e1b4e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "1.618033988749895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1.618033988749895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5393446629166316`"}], ",", "0", ",", 
     "1.4120226591665965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.904316775851425*^9, 3.904316790260437*^9}, {
   3.904316990867347*^9, 3.904316997479602*^9}, 3.904334228758616*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"ecc99a2d-7da6-4c17-8cb3-0d587f0e9bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["gphflagIco"], "Input",
 CellChangeTimes->{{3.9043168802043047`*^9, 3.904316882855311*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"bbdca224-8879-47d9-b715-629cbae90394"],

Cell[BoxData[
 Graphics3DBox[
  {PointSize[0.04], 
   Point3DBox[{{0, -1, 1.618033988749895}, {
     0, 0, 1.618033988749895}, {-0.5393446629166316, 0, 
      1.4120226591665965`}, {0, 0, 0}},
    VertexColors->{
      RGBColor[1, 0, 0], 
      RGBColor[0, 0, 1], 
      RGBColor[0, 1, 0], 
      RGBColor[1, 1, 0]}], 
   {RGBColor[1, 0, 1], Opacity[0.7], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5820176962892015380}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}},
  Boxed->False,
  ImageSize->{393.46791064696276`, 292.3282713282697},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.7633558508670637`, -1.355667743786785, 2.550047276359586},
  ViewVertical->{-0.9189333514539324, 0.31918614854782446`, 
   0.23169311202720266`}]], "Output",
 CellChangeTimes->{
  3.904316883273025*^9, {3.904316978958823*^9, 3.9043170001604023`*^9}, 
   3.904334231067637*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"11c04df9-41d8-4df5-a9a0-b74118e5b839"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fgAbs", ":=", 
   RowBox[{"HazLineal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", "E0", ",", "E1", ",", 
      RowBox[{"E1", ".", "E0"}], ",", 
      RowBox[{"E0", ".", "E1"}], ",", 
      RowBox[{"E0", ".", "E1", ".", "E0"}]}], "}"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Face", " ", "group"}], "*)"}]}], "\n", 
 RowBox[{"fg", ":=", 
  RowBox[{"fgAbs", "/.", "Numerico"}]}]}], "Code",
 CellChangeTimes->{{3.904063614072187*^9, 3.904063644896964*^9}, {
  3.904063993348566*^9, 3.904064013676835*^9}, {3.9040661982395973`*^9, 
  3.9040662146974573`*^9}, {3.904066611871447*^9, 3.904066614389949*^9}, {
  3.904317045938669*^9, 3.904317086114786*^9}, {3.904317171067444*^9, 
  3.9043171930905952`*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"3288f7e7-bd13-470b-8d76-8f9ffded499f"],

Cell[BoxData[
 RowBox[{"gphface", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", 
        RowBox[{"0.3", ",", "Green"}], "]"}], ",", 
       RowBox[{"ConvexHullMesh", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"flagIco", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", 
           RowBox[{"fg", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", "fg", "]"}]}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.904064339289616*^9, 3.904064352851487*^9}, {
   3.904064385724352*^9, 3.904064482413807*^9}, {3.904064553573503*^9, 
   3.904064564113749*^9}, {3.904066179497774*^9, 3.9040661845892963`*^9}, {
   3.904066247649316*^9, 3.904066270992784*^9}, {3.9040663075026503`*^9, 
   3.9040664774678183`*^9}, {3.904066512758973*^9, 3.904066570647482*^9}, {
   3.904066619704451*^9, 3.904066629015912*^9}, {3.904066765675371*^9, 
   3.9040668033934927`*^9}, {3.9040668745704527`*^9, 3.904066878124846*^9}, {
   3.904066946785125*^9, 3.904066953587708*^9}, {3.904066987014703*^9, 
   3.904067035084453*^9}, {3.904151477541033*^9, 3.9041514889495373`*^9}, {
   3.9041533456926537`*^9, 3.904153371600148*^9}, {3.904317024555532*^9, 
   3.904317051641596*^9}, 3.904317087795435*^9, 3.904317174188336*^9},
 CellLabel->
  "In[434]:=",ExpressionUUID->"0867f820-a86d-4b5e-ba28-0d73d7d24443"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphface", ",", "gphflagIco", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904153365586257*^9, 3.904153366711174*^9}, {
  3.904333371674469*^9, 3.904333375259487*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"b3e1b343-666b-433e-a80e-e29c2d4d72d1"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5820176962892015380}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5860453092680737922}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1244438766939071917}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {-0.8090169943749475, 
        0.5000000000000001, 1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7403945419904134356}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4471832521298410822}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7428059659501118612}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.04], 
    Point3DBox[{{0, -1, 1.618033988749895}, {
      0, 0, 1.618033988749895}, {-0.5393446629166316, 0, 
       1.4120226591665965`}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {
          Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 5820176962892015380}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{326.2502231561274, 364.51761430801605`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.5761512212444064`, -2.4485173172537604`, 1.723516833360851},
  ViewVertical->{-0.8414728503343641, 0.08051662736760168, 
   0.5342663332716256}]], "Output",
 CellChangeTimes->{
  3.9043169028648357`*^9, {3.904317007715539*^9, 3.904317054134383*^9}, 
   3.904317090014421*^9, {3.9043171976170797`*^9, 3.904317202356216*^9}, 
   3.904333376102934*^9, 3.904334237685822*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"fd8d2f63-2790-4459-9be6-4bae001a0fdb"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"fcAbs", ":=", 
  RowBox[{"HazLineal", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", "E2", ",", 
     RowBox[{"E2", ".", "E1"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E0"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E2"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E0", ".", "E2"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E2", ".", "E1"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E0", ".", "E2", ".", "E1"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E2", ".", "E1", ".", "E0"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E0", ".", "E2", ".", "E1", ".", "E0"}], 
     ",", 
     RowBox[{"E2", ".", "E1", ".", "E0", ".", "E2", ".", "E1", ".", "E2"}], 
     ",", 
     RowBox[{
     "E2", ".", "E1", ".", "E0", ".", "E2", ".", "E1", ".", "E0", ".", "E2"}],
      ",", 
     RowBox[{
     "E2", ".", "E1", ".", "E0", ".", "E2", ".", "E1", ".", "E2", ".", "E1"}],
      ",", 
     RowBox[{
     "E2", ".", "E1", ".", "E0", ".", "E2", ".", "E1", ".", "E0", ".", "E2", 
      ".", "E1"}], ",", 
     RowBox[{"E2", ".", "E1", ".", "E0", ".", 
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"E2", ".", "E1"}], ",", "2"}], "]"}], ".", "E0"}], ",", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"E2", ".", "E1", ".", "E0"}], ",", "3"}], "]"}], ",", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"E2", ".", "E1", ".", "E0"}], ",", "2"}], "]"}], ".", "E2", 
      ".", "E1", ".", "E2"}], ",", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"E2", ".", "E1", ".", "E0"}], ",", "3"}], "]"}], ".", "E2"}], 
     ",", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"E2", ".", "E1", ".", "E0"}], ",", "3"}], "]"}], ".", "E2", 
      ".", "E1"}], ",", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"E2", ".", "E1", ".", "E0"}], ",", "3"}], "]"}], ".", "E2", 
      ".", "E1", ".", "E2"}]}], "}"}], "]"}]}], "\n", 
 RowBox[{"fc", ":=", 
  RowBox[{"fcAbs", "/.", "Numerico"}]}]}], "Code",
 CellChangeTimes->{{3.904066891624024*^9, 3.904066904521446*^9}, {
  3.904067191546102*^9, 3.904067283259609*^9}, {3.904317264254551*^9, 
  3.904317284360714*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"f464cfab-cd06-478f-8aa6-7b83ed63c2ab"],

Cell[BoxData[
 RowBox[{"gphcellIco", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", 
          RowBox[{"0.3", ",", "Green"}], "]"}], ",", 
         RowBox[{"ConvexHullMesh", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"flagIco", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ".", 
             RowBox[{"fg", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ".", 
             RowBox[{"fc", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "fg", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Length", "[", "fc", "]"}]}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.904064339289616*^9, 3.904064352851487*^9}, {
  3.904064385724352*^9, 3.904064482413807*^9}, {3.904064553573503*^9, 
  3.904064564113749*^9}, {3.904066179497774*^9, 3.9040661845892963`*^9}, {
  3.904066247649316*^9, 3.904066270992784*^9}, {3.9040663075026503`*^9, 
  3.9040664774678183`*^9}, {3.904066512758973*^9, 3.904066570647482*^9}, {
  3.904066619704451*^9, 3.904066629015912*^9}, {3.904066765675371*^9, 
  3.9040668033934927`*^9}, {3.9040668745704527`*^9, 3.904066878124846*^9}, {
  3.904066946785125*^9, 3.904066953587708*^9}, {3.904066987014703*^9, 
  3.904067035084453*^9}, {3.904317293764833*^9, 3.904317333338525*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"8ed58ee4-6600-4d4c-b448-f3c72f390825"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphcellIco", ",", "gphflagIco", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904317443369754*^9, 3.904317444673826*^9}, {
  3.904333396381782*^9, 3.904333405428421*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"9c535847-e7b8-42c7-bc26-bae8e3e12654"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5820176962892015380}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5860453092680737922}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1244438766939071917}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {-0.8090169943749475, 
        0.5000000000000001, 1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7403945419904134356}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4471832521298410822}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7428059659501118612}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6032565822166953561}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7796557843898798532}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 1.618033988749895}, {0., 0., 
        1.618033988749895}, {0.5393446629166316, 0., 1.4120226591665965`}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.5393446629166316, 0., 1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3802372667910518893}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.5393446629166316, 0., 1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {0.8090169943749475, 
        0.5000000000000001, 1.3090169943749475`}, {0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5872720723874967215}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 1.618033988749895}, {0.8090169943749475,
         0.5000000000000001, 1.3090169943749475`}, {0.5393446629166316, 0., 
        1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.5393446629166316, 0., 1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5874721033715789781}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.5393446629166316, 0., 1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5000000000000001, 1.3090169943749475`}, {
        0.5393446629166316, 0., 1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3956442538725587800}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5000000000000001, 1.3090169943749475`}, {
        0.5393446629166316, 0., 1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6031964087450815956}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3539682320966173706}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5000000000000001, 
        1.3090169943749475`}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 
        1.618033988749895}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 187561173147379588}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 
        1.618033988749895}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-1.3090169943749477`, -0.8090169943749475, 
        0.5}, {-0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 276173632233898036}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-1.3090169943749477`, -0.8090169943749475, 
        0.5}, {-0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1171482434672792351}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, -0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.0000000000000002`, -1.618033988749895, 
        0.}, {-1.3090169943749477`, -0.8090169943749475, 
        0.5}, {-0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2226275362716999693}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.0000000000000002`, -1.618033988749895, 
        0.}, {-1.3090169943749477`, -0.8090169943749475, 
        0.5}, {-0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {-0.8090169943749475, 
        0.5000000000000001, 1.3090169943749475`}, {-0.8726779962499649, 
        0.872677996249965, 0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3823053413051577949}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.8726779962499649, 0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.8726779962499649, 0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5638031762292535203}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 0.5000000000000001, 
        1.3090169943749475`}, {-0.8726779962499649, 0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 
        1.618033988749895}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, 0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9133589874837395729}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 
        1.618033988749895}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, 0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-1.3090169943749477`, 0.8090169943749475, 
        0.5}, {-0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2806339196079185089}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-1.3090169943749477`, 0.8090169943749475, 
        0.5}, {-0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        0.}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, 0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2561219883611348504}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        0.}, {-0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {-0.8726779962499649, 0.872677996249965, 
        0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.0000000000000002`, 1.618033988749895, 
        0.}, {-1.3090169943749477`, 0.8090169943749475, 
        0.5}, {-0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8676448039463425553}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.0000000000000002`, 1.618033988749895, 
        0.}, {-1.3090169943749477`, 0.8090169943749475, 
        0.5}, {-0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1924541080165092183}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {
        0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7144891853491153521}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5000000000000001, 1.3090169943749475`}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7741451859707829082}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {1.3090169943749477`, -0.8090169943749475, 0.5}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2782010771795770222}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {1.3090169943749477`, -0.8090169943749475, 0.5}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7177933575899886722}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.0000000000000002`, -1.618033988749895, 0.}, {
        1.3090169943749477`, -0.8090169943749475, 0.5}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2389107954265368703}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.0000000000000002`, -1.618033988749895, 0.}, {
        1.3090169943749477`, -0.8090169943749475, 0.5}, {
        0.8726779962499649, -0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {0.8090169943749475, 
        0.5000000000000001, 1.3090169943749475`}, {0.8726779962499649, 
        0.872677996249965, 0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1720140059415852060}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 1.618033988749895}, {0.8090169943749475,
         0.5000000000000001, 1.3090169943749475`}, {0.8726779962499649, 
        0.872677996249965, 0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5000000000000001, 1.3090169943749475`}, {
        0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3292471806122454913}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5000000000000001, 1.3090169943749475`}, {
        0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {0.49999999999999994`,
         1.3090169943749475`, 0.8090169943749475}, {0.8726779962499649, 
        0.872677996249965, 0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2341091149632087537}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 1.618033988749895}, {
        0.49999999999999994`, 1.3090169943749475`, 0.8090169943749475}, {
        0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {1.3090169943749477`, 0.8090169943749475, 0.5}, {
        0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5498802875416739870}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {1.3090169943749477`, 0.8090169943749475, 0.5}, {
        0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.49999999999999994`,
         1.3090169943749475`, 0.8090169943749475}, {0.8726779962499649, 
        0.872677996249965, 0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7434811754810848350}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {
        0.49999999999999994`, 1.3090169943749475`, 0.8090169943749475}, {
        0.8726779962499649, 0.872677996249965, 0.8726779962499649}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.0000000000000002`, 1.618033988749895, 0.}, {
        1.3090169943749477`, 0.8090169943749475, 0.5}, {0.8726779962499649, 
        0.872677996249965, 0.8726779962499649}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8623016564349429424}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.0000000000000002`, 1.618033988749895, 0.}, {
        1.3090169943749477`, 0.8090169943749475, 0.5}, {0.8726779962499649, 
        0.872677996249965, 0.8726779962499649}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, 
        0.8090169943749475}, {0., -1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1059206884364439211}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, 
        0.8090169943749475}, {0., -1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-0.5000000000000001, -1.3090169943749475`, 
        0.8090169943749475}, {0., -1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6306126411675725393}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-0.5000000000000001, -1.3090169943749475`, 
        0.8090169943749475}, {0., -1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {0., -1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5825178034264768505}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.49999999999999994`, -1.3090169943749475`, 
        0.8090169943749475}, {0., -1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-1.1102230246251565`*^-16, -1.618033988749895, \
-2.220446049250313*^-16}, {0., -1.4120226591665965`, 0.5393446629166316}, {0.,
         0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8645930380108135848}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-1.1102230246251565`*^-16, -1.618033988749895, \
-2.220446049250313*^-16}, {0., -1.4120226591665965`, 0.5393446629166316}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        0., -1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2441768165504470773}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.49999999999999994`, -1.3090169943749475`, 0.8090169943749475}, {
        0., -1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -2.220446049250313*^-16}, \
{-1.1102230246251565`*^-16, -1.618033988749895, -2.220446049250313*^-16}, {
        0., -1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3758815648037561683}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -2.220446049250313*^-16}, \
{-1.1102230246251565`*^-16, -1.618033988749895, -2.220446049250313*^-16}, {
        0., -1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {-1.4120226591665965`, -0.5393446629166316, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8021783561758620255}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {-1.4120226591665965`, -0.5393446629166316, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, -0.8090169943749475,
         0.5000000000000001}, {-1.4120226591665965`, -0.5393446629166316, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7904712046998667680}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, -0.8090169943749475,
         0.5000000000000001}, {-1.4120226591665965`, -0.5393446629166316, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {-1.618033988749895, 
        2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, -0.5393446629166316,
         0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5499662008302824503}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-1.618033988749895, 2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, -0.5393446629166316,
         0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, \
-0.8090169943749475, -0.49999999999999994`}, {-1.4120226591665965`, \
-0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2220126607161741675}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, \
-0.8090169943749475, -0.49999999999999994`}, {-1.4120226591665965`, \
-0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        2.220446049250313*^-16, -1.}, {-1.618033988749895, 
        2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, -0.5393446629166316,
         0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1911137840450234996}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        2.220446049250313*^-16, -1.}, {-1.618033988749895, 
        2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, -0.5393446629166316,
         0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, -0.8090169943749475, \
-0.49999999999999994`}, {-1.4120226591665965`, -0.5393446629166316, 0.}, {0., 
        0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 564896945462929812}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, -0.8090169943749475, \
-0.49999999999999994`}, {-1.4120226591665965`, -0.5393446629166316, 0.}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5000000000000001, 1.3090169943749475`, 
        0.8090169943749475}, {0., 1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {
         Polygon[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4949205468997564612}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5000000000000001, 1.3090169943749475`, 
        0.8090169943749475}, {0., 1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5000000000000001,
         1.3090169943749475`, 0.8090169943749475}, {0., 1.4120226591665965`, 
        0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2247650589385600659}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        0.}, {-0.5000000000000001, 1.3090169943749475`, 0.8090169943749475}, {
        0., 1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {0., 1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7693133898885815792}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.49999999999999994`, 1.3090169943749475`, 
        0.8090169943749475}, {0., 1.4120226591665965`, 0.5393446629166316}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        0.}, {-1.1102230246251565`*^-16, 
        1.618033988749895, -2.220446049250313*^-16}, {0., 1.4120226591665965`,
         0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5976349558401774804}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        0.}, {-1.1102230246251565`*^-16, 
        1.618033988749895, -2.220446049250313*^-16}, {0., 1.4120226591665965`,
         0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.49999999999999994`,
         1.3090169943749475`, 0.8090169943749475}, {0., 1.4120226591665965`, 
        0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4045341538899351952}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {
        0.49999999999999994`, 1.3090169943749475`, 0.8090169943749475}, {0., 
        1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -2.220446049250313*^-16}, \
{-1.1102230246251565`*^-16, 1.618033988749895, -2.220446049250313*^-16}, {0., 
        1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8234977426186000077}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -2.220446049250313*^-16}, \
{-1.1102230246251565`*^-16, 1.618033988749895, -2.220446049250313*^-16}, {0., 
        1.4120226591665965`, 0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {-1.4120226591665965`, 0.5393446629166316, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7156007113103208633}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {-1.4120226591665965`, 0.5393446629166316, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {-1.4120226591665965`, 0.5393446629166316, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3605405635742583575}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {-1.4120226591665965`, 0.5393446629166316, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6715717135571873173}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1227451666491291057}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -2.220446049250313*^-16, \
-1.}, {-1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8058721088169282183}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -2.220446049250313*^-16, \
-1.}, {-1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {-1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7031625145709620497}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {-1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        1.3090169943749475`, -0.8090169943749475, 0.5000000000000001}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6455650294478020111}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        1.3090169943749475`, -0.8090169943749475, 0.5000000000000001}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {1.4120226591665965`, -0.5393446629166316, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2543184136845407989}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {1.3090169943749475`, -0.8090169943749475, 
        0.5000000000000001}, {1.4120226591665965`, -0.5393446629166316, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {1.618033988749895, 
        2.220446049250313*^-16, 1.1102230246251565`*^-16}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2810180007440554315}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {1.618033988749895, 
        2.220446049250313*^-16, 1.1102230246251565`*^-16}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 638003069109000508}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 2.220446049250313*^-16, -1.}, {
        1.618033988749895, 2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1.4120226591665965`, -0.5393446629166316, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2464004828855009710}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        2.220446049250313*^-16, -1.}, {1.618033988749895, 
        2.220446049250313*^-16, 1.1102230246251565`*^-16}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5796942509133345250}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        1.3090169943749475`, -0.8090169943749475, -0.49999999999999994`}, {
        1.4120226591665965`, -0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {1.3090169943749475`, 
        0.8090169943749475, 0.5000000000000001}, {1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9112081490172187155}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        1.3090169943749475`, 0.8090169943749475, 0.5000000000000001}, {
        1.4120226591665965`, 0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {1.4120226591665965`, 0.5393446629166316, 0.}, {
        0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2092604115775438279}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {1.3090169943749475`, 0.8090169943749475, 
        0.5000000000000001}, {1.4120226591665965`, 0.5393446629166316, 0.}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4541982396655377105}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1087373664796245441}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {1.3090169943749475`, 
        0.8090169943749475, -0.49999999999999994`}, {1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -2.220446049250313*^-16, -1.}, {
        1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5948696557811734248}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -2.220446049250313*^-16, -1.}, {
        1.618033988749895, -2.220446049250313*^-16, 
        1.1102230246251565`*^-16}, {1.4120226591665965`, 0.5393446629166316, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {1.3090169943749475`,
         0.8090169943749475, -0.49999999999999994`}, {1.4120226591665965`, 
        0.5393446629166316, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 740015114748936340}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        1.3090169943749475`, 0.8090169943749475, -0.49999999999999994`}, {
        1.4120226591665965`, 0.5393446629166316, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 0.}, {
        0., -1.618033988749895, 0.}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8882313991369944877}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 0.}, {
        0., -1.618033988749895, 0.}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0., -1.618033988749895, 0.}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6671398060052192436}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0., -1.618033988749895, 0.}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {0., -1.4120226591665965`, -0.5393446629166316}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9148478480345992107}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {0., -1.4120226591665965`, -0.5393446629166316}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8044639676596993100}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {0., -1.4120226591665965`, -0.5393446629166316}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2523947989350652333}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5000000000000001, -1.3090169943749475`, \
-0.8090169943749475}, {0., -1.4120226591665965`, -0.5393446629166316}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {
        0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5765645448416336857}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {
        0.5000000000000001, -1.3090169943749475`, -0.8090169943749475}, {
        0., -1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6975824755382216390}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8715511815312259547}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, -0.8090169943749475, \
-0.5000000000000001}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {-0.5, -1.3090169943749477`, \
-0.8090169943749475}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2084992115180972196}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {-0.5, -1.3090169943749477`, \
-0.8090169943749475}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, -0.49999999999999994`, \
-1.3090169943749475`}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5332822267792550509}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, -0.49999999999999994`, \
-1.3090169943749475`}, {-0.8726779962499649, -0.8726779962499649, \
-0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1.0000000000000002`, -1.618033988749895}, {-0.5, \
-1.3090169943749477`, -0.8090169943749475}, {-0.8726779962499649, \
-0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 106180680964868332}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1.0000000000000002`, -1.618033988749895}, {-0.5, \
-1.3090169943749477`, -0.8090169943749475}, {-0.8726779962499649, \
-0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, \
-0.49999999999999994`, -1.3090169943749475`}, {-0.8726779962499649, \
-0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3651803941871890336}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, \
-0.49999999999999994`, -1.3090169943749475`}, {-0.8726779962499649, \
-0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {0., 
        1.618033988749895, 0.}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5420582683005549524}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {0., 
        1.618033988749895, 0.}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0., 
        1.618033988749895, 0.}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2629592550125922524}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0., 
        1.618033988749895, 0.}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5000000000000001,
         1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3875897089316735142}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        0.}, {-0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1516808047196435987}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5000000000000001,
         1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7856617925629442215}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3068355766382879081}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.5000000000000001, 
        1.3090169943749475`, -0.8090169943749475}, {0., 
        1.4120226591665965`, -0.5393446629166316}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4931938552666667032}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8644317067860781392}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3593627763373902219}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9011251144092293639}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 
        1.0000000000000002`, -1.618033988749895}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5059988326565530694}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1.0000000000000002`, -1.618033988749895}, {-0.5, 
        1.3090169943749477`, -0.8090169943749475}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {-0.8090169943749475,
         0.49999999999999994`, -1.3090169943749475`}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8893061719414811570}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {
         Polygon[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8191511959004929694}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4772398359675156318}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        1.3090169943749475`, -0.8090169943749475, -0.5000000000000001}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {
        0.5, -1.3090169943749477`, -0.8090169943749475}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2765063913898783505}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, {
        0.5, -1.3090169943749477`, -0.8090169943749475}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 712699534701761473}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1.0000000000000002`, -1.618033988749895}, {
        0.5, -1.3090169943749477`, -0.8090169943749475}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2343420300892045186}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1.0000000000000002`, -1.618033988749895}, {
        0.5, -1.3090169943749477`, -0.8090169943749475}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1666008160211864554}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.49999999999999994`, -1.3090169943749475`}, {
        0.8726779962499649, -0.8726779962499649, -0.872677996249965}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8460123256888472999}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {1.3090169943749475`, 
        0.8090169943749475, -0.5000000000000001}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {1.3090169943749475`,
         0.8090169943749475, -0.5000000000000001}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6085761217775373556}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        1.3090169943749475`, 0.8090169943749475, -0.5000000000000001}, {
        0.8726779962499649, 0.8726779962499649, -0.872677996249965}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0.5, 
        1.3090169943749477`, -0.8090169943749475}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4008408609477313329}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0.5, 
        1.3090169943749477`, -0.8090169943749475}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7770574657787564378}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {
        0.8726779962499649, 0.8726779962499649, -0.872677996249965}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1.0000000000000002`, -1.618033988749895}, {
        0.5, 1.3090169943749477`, -0.8090169943749475}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 440586067222313716}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1.0000000000000002`, -1.618033988749895}, {
        0.5, 1.3090169943749477`, -0.8090169943749475}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {0.8726779962499649, 
        0.8726779962499649, -0.872677996249965}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6312173235665053896}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {
        0.8726779962499649, 0.8726779962499649, -0.872677996249965}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, \
{-0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8783729727744515216}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, \
{-0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, \
-0.5000000000000001, -1.3090169943749475`}, {-0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5352210147565098470}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, \
-0.5000000000000001, -1.3090169943749475`}, {-0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6347103516572258388}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-0.5393446629166316, 0., -1.4120226591665965`}, {0., 0.,
         0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8155131929115741545}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-0.5393446629166316, 0., -1.4120226591665965`}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {-0.8090169943749475,
         0.49999999999999994`, -1.3090169943749475`}, {-0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8908271424272618088}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {-0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.220446049250313*^-16, 1., -1.618033988749895}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-0.5393446629166316, 0., -1.4120226591665965`}, {0., 0.,
         0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7341474767157454116}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.220446049250313*^-16, 
        1., -1.618033988749895}, {
        2.220446049250313*^-16, -1.1102230246251565`*^-16, \
-1.618033988749895}, {-0.5393446629166316, 0., -1.4120226591665965`}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, {
        0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4464468988858292658}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, {
        0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, {
        0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6485958587522790897}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5000000000000001, -1.3090169943749475`}, {
        0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {
        0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4131099457362713161}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {
        0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-2.220446049250313*^-16, \
-1.1102230246251565`*^-16, -1.618033988749895}, {0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5738122270394431078}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-2.220446049250313*^-16, \
-1.1102230246251565`*^-16, -1.618033988749895}, {0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {0.8090169943749475, 
        0.49999999999999994`, -1.3090169943749475`}, {0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4020429373824362528}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.8090169943749475, 0.49999999999999994`, -1.3090169943749475`}, {
        0.5393446629166316, 0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.220446049250313*^-16, 
        1., -1.618033988749895}, {-2.220446049250313*^-16, \
-1.1102230246251565`*^-16, -1.618033988749895}, {0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7555074394228306082}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.220446049250313*^-16, 
        1., -1.618033988749895}, {-2.220446049250313*^-16, \
-1.1102230246251565`*^-16, -1.618033988749895}, {0.5393446629166316, 
        0., -1.4120226591665965`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.04], 
    Point3DBox[{{0, -1, 1.618033988749895}, {
      0, 0, 1.618033988749895}, {-0.5393446629166316, 0, 
       1.4120226591665965`}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {
          Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 5820176962892015380}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{337.0762897193249, 349.99648177480555`},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.3022697549561233`, -0.5757103596317099, 3.0696337024373523`},
  ViewVertical->{-0.04803121938987476, -0.8582660199724235, 
   0.5109524840184432}]], "Output",
 CellChangeTimes->{3.904317320794343*^9, 3.904317374359804*^9, 
  3.9043174375561733`*^9, 3.904317497253909*^9, 3.904333469474374*^9},
 CellLabel->"Out[243]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
X3+eTpmjnp+0/wSfvvb/v/H/7TeCf/T/Akcr8ck=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"70a3021d-e236-4a41-984d-ad9a7f1c8bd9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Vertices", " ", "seen", " ", "as", " ", "the", " ", "orbit", " ", "of", 
    " ", "v0"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"v0GAbs", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"v0", ".", 
         RowBox[{"fg", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ".", 
         RowBox[{"fc", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "fg", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "fc", "]"}]}], "}"}]}], "]"}]}], "\n", 
   RowBox[{"v0G", ":=", 
    RowBox[{"v0GAbs", "/.", "Numerico"}]}]}]}]], "Code",
 CellChangeTimes->{{3.904333545989408*^9, 3.9043335988867188`*^9}, {
  3.9043338549693527`*^9, 3.904333869964525*^9}, {3.904334046232003*^9, 
  3.904334057178156*^9}, {3.904477592291623*^9, 3.904477603241333*^9}},
 CellLabel->
  "In[437]:=",ExpressionUUID->"268c8fec-ad96-4a3c-83c2-ca8e52285e1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "v0G", "]"}]], "Input",
 CellChangeTimes->{{3.9043336026841803`*^9, 3.904333605348269*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"c1200373-8a1d-4c82-9ce9-52258541e863"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.904333619750593*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"ebf578fb-2612-4645-a6ff-eb0d51af06e4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Ico", ":=", 
  RowBox[{"Polyhedron", "[", "v0G", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphIco", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0", "]"}], ",", "Ico"}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.904333664093555*^9, 3.904333743668453*^9}, {
   3.904333913121642*^9, 3.904333959662511*^9}, {3.904334628640608*^9, 
   3.904334629028646*^9}, {3.904334923461246*^9, 3.9043351186973143`*^9}, {
   3.904335219223448*^9, 3.904335253242777*^9}, 3.904335283255673*^9, {
   3.904335319832323*^9, 3.904335370240883*^9}, {3.9043354066120243`*^9, 
   3.9043354370174837`*^9}, 3.904335531170557*^9, 3.904335564087598*^9, 
   3.9043357239175262`*^9, {3.904335816786832*^9, 3.9043358195843563`*^9}, {
   3.904335921230493*^9, 3.904335939692378*^9}, {3.904480396745482*^9, 
   3.904480407339158*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"70be6dcb-7b4c-4997-91ca-db66dc938850"],

Cell["\<\
Now define a base flag for the pentagram by Wythoff\[CloseCurlyQuote]s \
construction:\
\>", "Text",
 CellChangeTimes->{{3.904481018251162*^9, 3.904481070717565*^9}, {
  3.906234359225103*^9, 
  3.906234367285343*^9}},ExpressionUUID->"5ccb22c1-a8c1-41d9-b2dd-\
6809c1b617e4"],

Cell[BoxData[{
 RowBox[{"P0", ":=", "E0"}], "\[IndentingNewLine]", 
 RowBox[{"P1", ":=", 
  RowBox[{"HazLineal", "[", 
   RowBox[{
   "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", ".", "E1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P2", ":=", "E2"}], "\n"}], "\n", 
 RowBox[{"w0", ":=", 
  RowBox[{
   RowBox[{"v0", ".", "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E2"}], "/.",
    "Numerico"}]}], "\n", 
 RowBox[{"w1", ":=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"w0", "+", 
       RowBox[{"w0", ".", "E0"}]}], ")"}]}], "/.", "Numerico"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"w2", ":=", 
   RowBox[{
    RowBox[{"Chop", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "5"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"w0", "+", 
        RowBox[{"w0", ".", "P0", ".", "P1"}], "+", 
        RowBox[{"w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1"}], "+", 
        RowBox[{
        "w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1", ".", "P0", ".", 
         "P1"}], "+", 
        RowBox[{
        "w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1", ".", "P0", ".", 
         "P1", ".", "P0", ".", "P1"}]}], ")"}]}], "]"}], "/.", "Numerico"}]}],
   "\n"}], "\n", 
 RowBox[{"flagPgmIco3", ":=", 
  RowBox[{"{", 
   RowBox[{"w0", ",", "w1", ",", "w2", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphflagPgmIco3", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flagPgmIco3", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Blue", ",", "Green", ",", "Yellow"}], 
         "}"}]}]}], "]"}], ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.7", ",", "Cyan"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", "flagPgmIco3", "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.9044756321215153`*^9, 3.904475681136639*^9}, {
  3.9044757299631767`*^9, 3.904475909413459*^9}},
 CellLabel->
  "In[441]:=",ExpressionUUID->"e988d527-f426-4f55-97eb-0eeabc464e73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphIco", ",", "gphflagPgmIco3", ",", "gphflagIco"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904475927731045*^9, 3.904475934883513*^9}, {
   3.904476619152442*^9, 3.904476624554809*^9}, {3.904476668663731*^9, 
   3.904476680365601*^9}, 
   3.904480532682575*^9},ExpressionUUID->"2646302e-b542-4898-9476-\
3fe96cccd46e"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0], 
    PolyhedronBox[{{{0, -1, 1.618033988749895}, {0, 1, 1.618033988749895}, {
       0., -1., 1.618033988749895}, {0., 1., 
       1.618033988749895}, {-1.618033988749895, -1.1102230246251565`*^-16, 
       1.}, {-1.618033988749895, 1.1102230246251565`*^-16, 1.}}, {{
       0, -1, 1.618033988749895}, {0, 1, 1.618033988749895}, {0., -1., 
       1.618033988749895}, {0., 1., 1.618033988749895}, {
       1.618033988749895, -1.1102230246251565`*^-16, 1.}, {1.618033988749895, 
       1.1102230246251565`*^-16, 1.}}, {{0., -1., 
      1.618033988749895}, {-1.618033988749895, -1.1102230246251565`*^-16, 
      1.}, {0., -1., 
      1.618033988749895}, {-1.618033988749895, -1.1102230246251565`*^-16, 
      1.}, {-0.9999999999999999, -1.618033988749895, 
      0.}, {-1., -1.618033988749895, 0.}}, {{0., 1., 
      1.618033988749895}, {-1.618033988749895, 1.1102230246251565`*^-16, 
      1.}, {0., 1., 1.618033988749895}, {-1.618033988749895, 
      1.1102230246251565`*^-16, 1.}, {-0.9999999999999999, 1.618033988749895, 
      0.}, {-1., 1.618033988749895, 0.}}, {{0., -1., 1.618033988749895}, {
      1.618033988749895, -1.1102230246251565`*^-16, 1.}, {0., -1., 
      1.618033988749895}, {1.618033988749895, -1.1102230246251565`*^-16, 
      1.}, {1., -1.618033988749895, 0.}, {
      1.0000000000000002`, -1.618033988749895, 0.}}, {{0., 1., 
      1.618033988749895}, {1.618033988749895, 1.1102230246251565`*^-16, 1.}, {
      0., 1., 1.618033988749895}, {1.618033988749895, 
      1.1102230246251565`*^-16, 1.}, {1., 1.618033988749895, 0.}, {
      1.0000000000000002`, 1.618033988749895, 
      0.}}, {{-1.1102230246251565`*^-16, -1., 
      1.618033988749895}, {-1., -1.618033988749895, 
      0.}, {-1.1102230246251565`*^-16, -1., 
      1.618033988749895}, {-1., -1.618033988749895, 0.}, {
      1., -1.618033988749895, 0.}, {
      1., -1.618033988749895, -2.220446049250313*^-16}}, {{-1.618033988749895,
       0., 1.}, {-1., -1.618033988749895, 
      1.1102230246251565`*^-16}, {-1.618033988749895, 0., 
      1.}, {-1., -1.618033988749895, 
      1.1102230246251565`*^-16}, {-1.618033988749895, 
      2.008412319093264*^-16, -1.}, {-1.618033988749895, 
      2.1203373015704913`*^-17, -1.}}, {{-1.1102230246251565`*^-16, 1., 
      1.618033988749895}, {-1., 1.618033988749895, 
      0.}, {-1.1102230246251565`*^-16, 1., 1.618033988749895}, {-1., 
      1.618033988749895, 0.}, {1., 1.618033988749895, 0.}, {1., 
      1.618033988749895, -2.220446049250313*^-16}}, {{-1.618033988749895, 0., 
      1.}, {-1., 1.618033988749895, 
      1.1102230246251565`*^-16}, {-1.618033988749895, 0., 1.}, {-1., 
      1.618033988749895, 
      1.1102230246251565`*^-16}, {-1.618033988749895, \
-2.220446049250313*^-16, -1.}, {-1.618033988749895, 0., -1.}}, {{
      1.618033988749895, 0., 1.}, {1., -1.618033988749895, 
      1.1102230246251565`*^-16}, {1.618033988749895, 0., 1.}, {
      1., -1.618033988749895, 1.1102230246251565`*^-16}, {1.618033988749895, 
      2.008412319093264*^-16, -1.}, {1.618033988749895, 
      2.1203373015704913`*^-17, -1.}}, {{1.618033988749895, 0., 1.}, {1., 
      1.618033988749895, 1.1102230246251565`*^-16}, {1.618033988749895, 0., 
      1.}, {1., 1.618033988749895, 1.1102230246251565`*^-16}, {
      1.618033988749895, -2.220446049250313*^-16, -1.}, {1.618033988749895, 
      0., -1.}}, {{-1, -1.618033988749895, 0}, {
       1, -1.618033988749895, 0}, {-1., -1.618033988749895, 0.}, {
       1., -1.618033988749895, 
       0.}, {-1.1102230246251565`*^-16, -1., -1.618033988749895}, {
       1.1102230246251565`*^-16, -1., -1.618033988749895}}, {{-1., \
-1.618033988749895, -1.1102230246251565`*^-16}, {-1.618033988749895, 
      0., -1.}, {-1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-1.618033988749895, 0., -1.}, {0., -1., -1.618033988749895}, {
      0., -0.9999999999999999, -1.618033988749895}}, {{-1, 1.618033988749895, 
        0}, {1, 1.618033988749895, 0}, {-1., 1.618033988749895, 0.}, {1., 
       1.618033988749895, 0.}, {-1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {1.1102230246251565`*^-16, 
       1., -1.618033988749895}}, {{-1., 
      1.618033988749895, -1.1102230246251565`*^-16}, {-1.618033988749895, 
      0., -1.}, {-1., 
      1.618033988749895, -1.1102230246251565`*^-16}, {-1.618033988749895, 
      0., -1.}, {0., 1.0000000000000002`, -1.618033988749895}, {0., 
      1., -1.618033988749895}}, {{
      1., -1.618033988749895, -1.1102230246251565`*^-16}, {1.618033988749895, 
      0., -1.}, {1., -1.618033988749895, -1.1102230246251565`*^-16}, {
      1.618033988749895, 0., -1.}, {0., -1., -1.618033988749895}, {
      0., -0.9999999999999999, -1.618033988749895}}, {{1., 
      1.618033988749895, -1.1102230246251565`*^-16}, {1.618033988749895, 
      0., -1.}, {1., 1.618033988749895, -1.1102230246251565`*^-16}, {
      1.618033988749895, 0., -1.}, {0., 
      1.0000000000000002`, -1.618033988749895}, {0., 
      1., -1.618033988749895}}, {{-1.618033988749895, \
-1.1102230246251565`*^-16, -1.}, {
      0., -1., -1.618033988749895}, {-1.618033988749895, \
-1.1102230246251565`*^-16, -1.}, {0., -1., -1.618033988749895}, {
      2.1203373015704913`*^-17, 1., -1.618033988749895}, {
      2.008412319093264*^-16, 1., -1.618033988749895}}, {{
      1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
      0., -1., -1.618033988749895}, {
      1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
      0., -1., -1.618033988749895}, {0., 
      1., -1.618033988749895}, {-2.220446049250313*^-16, 
      1., -1.618033988749895}}}]}, 
   {PointSize[0.04], 
    Point3DBox[{{1., -1.618033988749895, 0.}, {1., 0, 0}, {0.723606797749979, 
      0., -0.447213595499958}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
          Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {PointSize[0.04], 
    Point3DBox[{{0, -1, 1.618033988749895}, {
      0, 0, 1.618033988749895}, {-0.5393446629166316, 0, 
       1.4120226591665965`}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {
          Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 5820176962892015380}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{362.3909806443022, 363.22636120935425`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.40300421755314164`, -1.2498312220594763`, 3.1185749176506397`},
  ViewVertical->{-0.7741502888876944, -0.14035993784789239`, 
   0.6172442126601393}]], "Output",
 CellChangeTimes->{{3.9044759222380257`*^9, 3.904475951882801*^9}, 
   3.9044766414756517`*^9},
 CellLabel->"Out[147]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
C4lW\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"8de3e264-bf20-4dc4-9d0f-db33f5ec5aad"]
}, Open  ]],

Cell["That\[CloseCurlyQuote]s the correct one!", "Text",
 CellChangeTimes->{{3.9062343731955442`*^9, 
  3.906234375970861*^9}},ExpressionUUID->"723d7546-299f-47ca-9334-\
3d3d7fd2e548"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Decoration", "*)"}], "\n", 
  RowBox[{
   RowBox[{"verfig", ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v0", ".", "E0", ".", "E0", ".", "E1"}], ",", 
       RowBox[{"v0", ".", "E0", ".", "E1", ".", "E2", ".", "E0", ".", "E1"}], 
       ",", 
       RowBox[{
       "v0", ".", "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E2", ".", "E0",
         ".", "E1"}], ",", 
       RowBox[{
       "v0", ".", "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E2", ".", "E1",
         ".", "E2", ".", "E0", ".", "E1"}], ",", 
       RowBox[{
       "v0", ".", "E0", ".", "E2", ".", "E1", ".", "E0", ".", "E1"}]}], "}"}],
      "/.", "Numerico"}]}], "\[IndentingNewLine]", 
   RowBox[{"gphvertfig", ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", 
        RowBox[{"0.7", ",", "Blue"}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"verfig", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"verfig", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"v0", ".", "E0", ".", "E1"}], "/.", "Numerico"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"verfig", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"verfig", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"v0", ".", "E0", ".", "E1"}], "/.", "Numerico"}]}], "}"}],
          "}"}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"verfig", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"verfig", "[", 
            RowBox[{"[", "4", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"v0", ".", "E0", ".", "E1"}], "/.", "Numerico"}]}], "}"}],
          "}"}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"verfig", "[", 
            RowBox[{"[", "4", "]"}], "]"}], ",", 
           RowBox[{"verfig", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"v0", ".", "E0", ".", "E1"}], "/.", "Numerico"}]}], "}"}],
          "}"}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"verfig", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"verfig", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"v0", ".", "E0", ".", "E1"}], "/.", "Numerico"}]}], "}"}],
          "}"}], "]"}]}], "}"}], "]"}]}], "\n", "\n", 
   RowBox[{"Lines", ":=", 
    RowBox[{"Line", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"w0", ",", "v0", ",", 
         RowBox[{"w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{
         "w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1", ".", "P0", ".", 
          "P1", ".", "P0", ".", "P1"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"w0", ".", "P0", ".", "P1"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
         "w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1", ".", "P0", ".", 
          "P1"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "w0"}], "}"}], "/.", 
       "Numerico"}], "]"}], "]"}]}], "\n", 
   RowBox[{"gphLines", ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Lines"}], "}"}], "]"}]}], "\n", "\n", 
   RowBox[{"Triangle1", ":=", 
    RowBox[{"Polygon", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"w0", ",", "v0", ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "/.", "Numerico"}], "]"}], 
     "]"}]}], "\n", 
   RowBox[{"Triangle2", ":=", 
    RowBox[{"Polygon", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1"}], ",", 
         "v0", ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "/.", "Numerico"}], "]"}], 
     "]"}]}], "\n", 
   RowBox[{"Triangle3", ":=", 
    RowBox[{"Polygon", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1", ".", "P0", ".", 
          "P1", ".", "P0", ".", "P1"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "5", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "/.", "Numerico"}], "]"}], 
     "]"}]}], "\n", 
   RowBox[{"Triangle4", ":=", 
    RowBox[{"Polygon", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"w0", ".", "P0", ".", "P1"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "/.", "Numerico"}], "]"}], 
     "]"}]}], "\n", 
   RowBox[{"Triangle5", ":=", 
    RowBox[{"Polygon", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "w0", ".", "P0", ".", "P1", ".", "P0", ".", "P1", ".", "P0", ".", 
          "P1"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"verfig", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "/.", "Numerico"}], "]"}], 
     "]"}]}], "\n", 
   RowBox[{"gphTriangles", ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", 
        RowBox[{"0.7", ",", "Yellow"}], "]"}], ",", "Triangle1", ",", 
       "Triangle2", ",", "Triangle3", ",", "Triangle4", ",", "Triangle5"}], 
      "}"}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.9044767819887877`*^9, 3.904476800925726*^9}, {
   3.904476848763608*^9, 3.904477387499576*^9}, 3.9044774363531*^9, {
   3.904477511567275*^9, 3.904477529915188*^9}, {3.904477727222313*^9, 
   3.904477749757608*^9}, {3.904477811295376*^9, 3.904477823852849*^9}, {
   3.904477862951798*^9, 3.9044779328293877`*^9}, {3.904477974517989*^9, 
   3.90447807301528*^9}, {3.9044781332665977`*^9, 3.90447813464541*^9}, {
   3.904478198783874*^9, 3.904478237866972*^9}, {3.90447828088441*^9, 
   3.904478304622573*^9}, {3.904478342123932*^9, 3.904478413978669*^9}, {
   3.904478453414117*^9, 3.904478469839634*^9}, {3.904478509780128*^9, 
   3.904478511972692*^9}, {3.904480414432373*^9, 3.904480441298527*^9}},
 CellLabel->
  "In[449]:=",ExpressionUUID->"e2eddec4-f923-4974-aa8b-2721df26a2b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphIco", ",", "gphLines", ",", "gphvertfig", ",", "gphTriangles"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.904477327898481*^9, 3.904477332315754*^9}, {
  3.904477392528124*^9, 3.9044773982057943`*^9}, {3.904477445584505*^9, 
  3.9044774604051237`*^9}, {3.9044777789426413`*^9, 3.904477780937131*^9}, {
  3.904478213875237*^9, 3.904478216181324*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"24ec46a4-5e2a-471d-a999-0b6eaf344427"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0], 
    PolyhedronBox[{{{0, -1, 1.618033988749895}, {0, 1, 1.618033988749895}, {
       0, -1., 1.618033988749895}, {
       0, 1., 1.618033988749895}, {-1.618033988749895, 0, 
        1.}, {-1.618033988749895, 0, 1.}}, {{0, -1, 1.618033988749895}, {
       0, 1, 1.618033988749895}, {0, -1., 1.618033988749895}, {
       0, 1., 1.618033988749895}, {1.618033988749895, 0, 1.}, {
       1.618033988749895, 0, 1.}}, {{
       0, -1., 1.618033988749895}, {-1.618033988749895, 0, 1.}, {
       0, -1., 1.618033988749895}, {-1.618033988749895, 0, 
        1.}, {-0.9999999999999999, -1.618033988749895, 
        0}, {-1., -1.618033988749895, 0}}, {{
       0, 1., 1.618033988749895}, {-1.618033988749895, 0, 1.}, {
       0, 1., 1.618033988749895}, {-1.618033988749895, 0, 
        1.}, {-0.9999999999999999, 1.618033988749895, 0}, {-1., 
        1.618033988749895, 0}}, {{0, -1., 1.618033988749895}, {
       1.618033988749895, 0, 1.}, {0, -1., 1.618033988749895}, {
       1.618033988749895, 0, 1.}, {1., -1.618033988749895, 0}, {
       1.0000000000000002`, -1.618033988749895, 0}}, {{
       0, 1., 1.618033988749895}, {1.618033988749895, 0, 1.}, {
       0, 1., 1.618033988749895}, {1.618033988749895, 0, 1.}, {
       1., 1.618033988749895, 0}, {
       1.0000000000000002`, 1.618033988749895, 0}}, {{
       0, -1., 1.618033988749895}, {-1., -1.618033988749895, 0}, {
       0, -1., 1.618033988749895}, {-1., -1.618033988749895, 0}, {
       1., -1.618033988749895, 0}, {
       1., -1.618033988749895, 0}}, {{-1.618033988749895, 0, 
        1.}, {-1., -1.618033988749895, 0}, {-1.618033988749895, 0, 
        1.}, {-1., -1.618033988749895, 0}, {-1.618033988749895, 
        0, -1.}, {-1.618033988749895, 0, -1.}}, {{
       0, 1., 1.618033988749895}, {-1., 1.618033988749895, 0}, {
       0, 1., 1.618033988749895}, {-1., 1.618033988749895, 0}, {
       1., 1.618033988749895, 0}, {
       1., 1.618033988749895, 0}}, {{-1.618033988749895, 0, 1.}, {-1., 
        1.618033988749895, 0}, {-1.618033988749895, 0, 1.}, {-1., 
        1.618033988749895, 0}, {-1.618033988749895, 
        0, -1.}, {-1.618033988749895, 0, -1.}}, {{1.618033988749895, 0, 1.}, {
       1., -1.618033988749895, 0}, {1.618033988749895, 0, 1.}, {
       1., -1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       1.618033988749895, 0, -1.}}, {{1.618033988749895, 0, 1.}, {
       1., 1.618033988749895, 0}, {1.618033988749895, 0, 1.}, {
       1., 1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       1.618033988749895, 0, -1.}}, {{-1, -1.618033988749895, 0}, {
       1, -1.618033988749895, 0}, {-1., -1.618033988749895, 0}, {
       1., -1.618033988749895, 0}, {0, -1., -1.618033988749895}, {
       0, -1., -1.618033988749895}}, {{-1., -1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {-1., -1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {0, -1., -1.618033988749895}, {
       0, -0.9999999999999999, -1.618033988749895}}, {{-1, 1.618033988749895, 
        0}, {1, 1.618033988749895, 0}, {-1., 1.618033988749895, 0}, {
       1., 1.618033988749895, 0}, {0, 1., -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{-1., 1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {-1., 1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {
       0, 1.0000000000000002`, -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{1., -1.618033988749895, 0}, {
       1.618033988749895, 0, -1.}, {1., -1.618033988749895, 0}, {
       1.618033988749895, 0, -1.}, {0, -1., -1.618033988749895}, {
       0, -0.9999999999999999, -1.618033988749895}}, {{
       1., 1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       1., 1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       0, 1.0000000000000002`, -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{-1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {-1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {0, 1., -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {0, 1., -1.618033988749895}, {
       0, 1., -1.618033988749895}}}]}, 
   {Thickness[Large], 
    Line3DBox[{{1., -1.618033988749895, 0}, {0, -1, 1.618033988749895}, {
      1.618033988749895, 0, 1.}, {0, 1., 1.618033988749895}, {
      1., 1.618033988749895, 0}, {-1., 1.618033988749895, 0}, {
      0, 1., -1.618033988749895}, {-1.618033988749895, 0, -1.}, {
      0, -1., -1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
       0}, {-1.0000000000000002`, -1.618033988749895, 0}, {-1.618033988749895,
        0, -1.}, {-1., 1.618033988749895, 0}, {0, 1., 1.618033988749895}, {
      0, -1., 1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
       0}, {1., -1.618033988749895, 0}}]}, 
   {RGBColor[0, 0, 1], Opacity[0.7], 
    Polygon3DBox[{{
      0, -1., 1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
      0.}, {-1.618033988749895, -1.1102230246251565`*^-16, 1.}}], 
    Polygon3DBox[{{{-1.0000000000000002`, -1.618033988749895, 
     0.}, {-1.618033988749895, 
     0., -1.}, {-1.618033988749895, -1.1102230246251565`*^-16, 1.}}}], 
    Polygon3DBox[{{{-1.618033988749895, 0., -1.}, {-1., 
     1.618033988749895, -2.1203373015704913`*^-17}, {-1.618033988749895, \
-1.1102230246251565`*^-16, 1.}}}], 
    Polygon3DBox[{{{-1., 1.618033988749895, -2.1203373015704913`*^-17}, {0., 
     1., 1.618033988749895}, {-1.618033988749895, -1.1102230246251565`*^-16, 
     1.}}}], Polygon3DBox[{{{0., 1., 1.618033988749895}, {
       0, -1., 1.618033988749895}, {-1.618033988749895, \
-1.1102230246251565`*^-16, 1.}}}]}, 
   {RGBColor[1, 1, 0], Opacity[0.7], 
    Polygon3DBox[{{1., -1.618033988749895, 0}, {
      0, -1, 1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
       0}}], Polygon3DBox[{{1.618033988749895, 0, 1.}, {
      0, -1, 1.618033988749895}, {0, 1., 1.618033988749895}}], 
    Polygon3DBox[{{1., 1.618033988749895, 0}, {
      0, 1., 1.618033988749895}, {-1., 1.618033988749895, 0}}], 
    Polygon3DBox[{{
      0, 1., -1.618033988749895}, {-1., 1.618033988749895, 
       0}, {-1.618033988749895, 0, -1.}}], 
    Polygon3DBox[{{
      0, -1., -1.618033988749895}, {-1.618033988749895, 
       0, -1.}, {-1.0000000000000002`, -1.618033988749895, 0}}]}},
  Boxed->False,
  ImageSize->{358.26795855192194`, 357.00221878381825`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.1241077268331792`, -3.164927400843402, 0.4118450750762582},
  ViewVertical->{-0.8177312178988431, -0.2757393040482552, 
   0.5052558673352134}]], "Output",
 CellChangeTimes->{
  3.904477413161784*^9, {3.904477451671795*^9, 3.904477474494809*^9}, 
   3.904477524491651*^9, {3.904477767183691*^9, 3.904477794757608*^9}, 
   3.9044778429217777`*^9, 3.904477881225473*^9, 3.9044779499644327`*^9, 
   3.904478026366158*^9, 3.904478093623466*^9, 3.904478151665724*^9, {
   3.904478231472493*^9, 3.904478254870965*^9}, 3.904478322173531*^9, 
   3.9044783752967863`*^9, {3.904478419571191*^9, 3.904478435651539*^9}, 
   3.904478490848097*^9, 3.904478530011518*^9},
 CellLabel->"Out[375]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfWeYZdV15XW9UDmHrq6ururqWJ0jHehUnSOd6G46AE2TcwaBQFBCgDIS
QSAkQAGhYEmWjSVbtmSXbBmNbclWGlnIGqexxsISxpLxeIaZ8dS8s8+9J721
9z0F/We+z/1971X1rffuPnvtvdbe59x0zulbr7zsutO3XnXJ6Wk7bj5945VX
XXLLtO033FzZVPiVJKn5VuX1p9OSYuX38STBb3+eJP+x4T82/MeG/483XEe/
FkYqb6PZthr1XmP+e8L5+NX64+pvY+bjY7RtPN1m/5cUxtLdjpgdHHV2dnmS
2SGLSdl8NP05nv6kzySFxLVgv2dHeq6z84vp13LmWDbabERFM/KC/uB4Yv+N
OB+uSczQwn1kH0v2O3ZPBU4VXKeSkjFLA0hxyv5pW4XMnxHjtfVjPH159vc6
9k/Sr8XQbxpRvbFe0pbG3LEV7DczlEfMR0sIAG1xl2P9mB4t+rDaV6MZQDnJ
BlX2nab91kY4vc0xe9h3Ovs87b9Z7z/73ojZP/21zoxIf8T8q81ze7Nj/4A/
3vALbWAI9XqbF/9a+zmT540RUGxwhnKOcQ3lXzsYSQMYSTq6zCJ53SQ7Sd9f
64xkl/z5bjAU7ayflnp4VWnZIvpJm1Y6v283H0+KYVZOss4ay03m80H+0C7a
7Jhc16wSrXBMb/Y/7CVnH5kZ8/xptSAYYDqE4ZORJY7BjfQrS8J+YzPNSy/y
LdZdk4Ndee4udKyvNUNFgRkwxtuB8XRA2X7J35481+c6xldp18ORZt8Z8p2j
nXbobV7OtVuH3Zyb5OPgRZLMz3aGskLEYbodiQlyp/lGl/9XGmefdg25ZaCY
7thfIgx2NrCe2sz2T/+6LTbmc1PyQBh0BrFQHvQwGEeP3ublhaMVJikpkySB
7nfGMVcY9HwwiElgEI5MmKBoX2V17nXGMcv/fDjwReqvxI7J2pjxKMm2oVo1
mAdFtzMEyhE2LxcbG33mczriBiAawIwIx9sdqzpaWEKWG5uOJZODOox+UzTT
tx46TRZbHOt6v2wanmUGMFUb8+Leb4fuisFsgw9bgOqd3yXtWOW7rTalgPkj
GfChoM8NR0BR64yjS4ZijR2KQXvQeEr6iTJw2HyEEemCM4Q282GE3Fowgmnm
G4Fu0lAW0DahPKU/chqYjcBwUDDon059PyEXCf7/b2cI9cLnNtn9mmKU2vKy
YIZ1183HxQIK/9MZQsn/nJeIW2l46quzgOFZvuPkxTLaxqbTvzqGc2ZS241t
y6xhsy3It6WCE7/UH/l3sxc7S9xl9jfH/FWXBj+jVspD/Sdt4TX9qWwQ4Sf3
GmNOmTNZNE9vy0ZP3gXdSyiqP9Pf/DffsYA+e313RhxbXjD1tqos0vzHpeSn
+pv/Yr/pfoxGdABYnw+sL/A/R7tfK3v/9/qb/6w/hQaoPnUIDICM0fA0R/x+
Zr3gccHuLTOQ/KUex899FLwMPAIGsdAMYon9a4a81h4npiV3n2YfP9Kmf+oD
FY6a5uCUd4t9S/RPM8cnsSO5o9m2dM0l27lm8LjZZv79UP/4SeCAn5THzZBS
814yOGR2U3EhGFUBjCpYa7KjpzWdFLO/pXcWswvMAJfZAZrhL7cjMZhRZaA0
LAH76TjNHtQ/Z3Zvxl4EiP6F/vFXxo/qUnHKDHe5+ZTWLD+3O63JcGjVEJIz
1CnWgVH9QP/QcOK0P22tGQbZWVDQ5IwZSCYE4lTfS/pWLRjuf9Y/NJasWlxi
x2QwO8vflhgvrNfZq87AFqi5y5YX3vuB5MWjJ5xtNNIUz+8ZfBBvLgPjS3H0
GEQFhjQjghtkAhVVR5hCJ16eMzd5/rs/TpQzadIWk8RySX3n+3ovenWZZdpV
wKXViRmlGVC//Zw/cmJ16qs3/AZ/z/QJkhbKrYIaflKvHHF1dTT9sjee7+lt
3yQARhMcm2ApnLavMd9wFtr84ccGqM/u3oxrUVK9g7ReqMAoD7OXyjgdqBof
FtrRd7UL/4neMZmvp50rU3ZBh5ZqKd/ZIMy0u3S1PJhju6mlRpqNWkdJ51fZ
3a87+u/oTX+UmNEgat9oxr/a2h5N/Oo27nxZm6X9abr7NTJoExE5yIMivZcy
xmcvTTe7DyOQ39befM3iNpoEobjFuLLIuIz00nHKYDdivhsEKm3mQS4V3FxK
/aFt/ufsoYz0eNJX6Z0l/u3m8zMsDGbsltrkXoMdnRn1Jvs1g2gwJWG9KOuo
QPZbR/5MG/odAybi/e3+MGg7rcxMSH+DaNilv62+R/SpYNLL5l6tjpWbe/pz
ZePit7S9L9E77uHfDBx0VoV9P1ghGDQebbO2XEmYRpiprzda0vv7KFosTCb8
qf7T8/TOsv9u4APtbUJBSvV23B3TNjsmk0Hpukwul+oFbQi6Qxrxn2iTv2YB
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
fkPyK/8PVdWoxw==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"9da1aabb-99b3-4602-b161-8670ce085289"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphIco", ",", "gphLines", ",", "gphvertfig", ",", "gphTriangles", ",", 
   "gphflagPgmIco3", ",", "gphflagIco"}], "]"}]], "Input",
 CellChangeTimes->{{3.904478585819971*^9, 3.9044785860249043`*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"c2288434-32dc-46a9-8366-cc36d6187788"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0], 
    PolyhedronBox[{{{0, -1, 1.618033988749895}, {0, 1, 1.618033988749895}, {
       0, -1., 1.618033988749895}, {
       0, 1., 1.618033988749895}, {-1.618033988749895, 0, 
        1.}, {-1.618033988749895, 0, 1.}}, {{0, -1, 1.618033988749895}, {
       0, 1, 1.618033988749895}, {0, -1., 1.618033988749895}, {
       0, 1., 1.618033988749895}, {1.618033988749895, 0, 1.}, {
       1.618033988749895, 0, 1.}}, {{
       0, -1., 1.618033988749895}, {-1.618033988749895, 0, 1.}, {
       0, -1., 1.618033988749895}, {-1.618033988749895, 0, 
        1.}, {-0.9999999999999999, -1.618033988749895, 
        0}, {-1., -1.618033988749895, 0}}, {{
       0, 1., 1.618033988749895}, {-1.618033988749895, 0, 1.}, {
       0, 1., 1.618033988749895}, {-1.618033988749895, 0, 
        1.}, {-0.9999999999999999, 1.618033988749895, 0}, {-1., 
        1.618033988749895, 0}}, {{0, -1., 1.618033988749895}, {
       1.618033988749895, 0, 1.}, {0, -1., 1.618033988749895}, {
       1.618033988749895, 0, 1.}, {1., -1.618033988749895, 0}, {
       1.0000000000000002`, -1.618033988749895, 0}}, {{
       0, 1., 1.618033988749895}, {1.618033988749895, 0, 1.}, {
       0, 1., 1.618033988749895}, {1.618033988749895, 0, 1.}, {
       1., 1.618033988749895, 0}, {
       1.0000000000000002`, 1.618033988749895, 0}}, {{
       0, -1., 1.618033988749895}, {-1., -1.618033988749895, 0}, {
       0, -1., 1.618033988749895}, {-1., -1.618033988749895, 0}, {
       1., -1.618033988749895, 0}, {
       1., -1.618033988749895, 0}}, {{-1.618033988749895, 0, 
        1.}, {-1., -1.618033988749895, 0}, {-1.618033988749895, 0, 
        1.}, {-1., -1.618033988749895, 0}, {-1.618033988749895, 
        0, -1.}, {-1.618033988749895, 0, -1.}}, {{
       0, 1., 1.618033988749895}, {-1., 1.618033988749895, 0}, {
       0, 1., 1.618033988749895}, {-1., 1.618033988749895, 0}, {
       1., 1.618033988749895, 0}, {
       1., 1.618033988749895, 0}}, {{-1.618033988749895, 0, 1.}, {-1., 
        1.618033988749895, 0}, {-1.618033988749895, 0, 1.}, {-1., 
        1.618033988749895, 0}, {-1.618033988749895, 
        0, -1.}, {-1.618033988749895, 0, -1.}}, {{1.618033988749895, 0, 1.}, {
       1., -1.618033988749895, 0}, {1.618033988749895, 0, 1.}, {
       1., -1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       1.618033988749895, 0, -1.}}, {{1.618033988749895, 0, 1.}, {
       1., 1.618033988749895, 0}, {1.618033988749895, 0, 1.}, {
       1., 1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       1.618033988749895, 0, -1.}}, {{-1, -1.618033988749895, 0}, {
       1, -1.618033988749895, 0}, {-1., -1.618033988749895, 0}, {
       1., -1.618033988749895, 0}, {0, -1., -1.618033988749895}, {
       0, -1., -1.618033988749895}}, {{-1., -1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {-1., -1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {0, -1., -1.618033988749895}, {
       0, -0.9999999999999999, -1.618033988749895}}, {{-1, 1.618033988749895, 
        0}, {1, 1.618033988749895, 0}, {-1., 1.618033988749895, 0}, {
       1., 1.618033988749895, 0}, {0, 1., -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{-1., 1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {-1., 1.618033988749895, 
        0}, {-1.618033988749895, 0, -1.}, {
       0, 1.0000000000000002`, -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{1., -1.618033988749895, 0}, {
       1.618033988749895, 0, -1.}, {1., -1.618033988749895, 0}, {
       1.618033988749895, 0, -1.}, {0, -1., -1.618033988749895}, {
       0, -0.9999999999999999, -1.618033988749895}}, {{
       1., 1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       1., 1.618033988749895, 0}, {1.618033988749895, 0, -1.}, {
       0, 1.0000000000000002`, -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{-1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {-1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {0, 1., -1.618033988749895}, {
       0, 1., -1.618033988749895}}, {{1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {1.618033988749895, 0, -1.}, {
       0, -1., -1.618033988749895}, {0, 1., -1.618033988749895}, {
       0, 1., -1.618033988749895}}}]}, 
   {Thickness[Large], 
    Line3DBox[{{1., -1.618033988749895, 0}, {0, -1, 1.618033988749895}, {
      1.618033988749895, 0, 1.}, {0, 1., 1.618033988749895}, {
      1., 1.618033988749895, 0}, {-1., 1.618033988749895, 0}, {
      0, 1., -1.618033988749895}, {-1.618033988749895, 0, -1.}, {
      0, -1., -1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
       0}, {-1.0000000000000002`, -1.618033988749895, 0}, {-1.618033988749895,
        0, -1.}, {-1., 1.618033988749895, 0}, {0, 1., 1.618033988749895}, {
      0, -1., 1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
       0}, {1., -1.618033988749895, 0}}]}, 
   {RGBColor[0, 0, 1], Opacity[0.7], 
    Polygon3DBox[{{
      0, -1., 1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
      0.}, {-1.618033988749895, -1.1102230246251565`*^-16, 1.}}], 
    Polygon3DBox[{{{-1.0000000000000002`, -1.618033988749895, 
     0.}, {-1.618033988749895, 
     0., -1.}, {-1.618033988749895, -1.1102230246251565`*^-16, 1.}}}], 
    Polygon3DBox[{{{-1.618033988749895, 0., -1.}, {-1., 
     1.618033988749895, -2.1203373015704913`*^-17}, {-1.618033988749895, \
-1.1102230246251565`*^-16, 1.}}}], 
    Polygon3DBox[{{{-1., 1.618033988749895, -2.1203373015704913`*^-17}, {0., 
     1., 1.618033988749895}, {-1.618033988749895, -1.1102230246251565`*^-16, 
     1.}}}], Polygon3DBox[{{{0., 1., 1.618033988749895}, {
       0, -1., 1.618033988749895}, {-1.618033988749895, \
-1.1102230246251565`*^-16, 1.}}}]}, 
   {RGBColor[1, 1, 0], Opacity[0.7], 
    Polygon3DBox[{{1., -1.618033988749895, 0}, {
      0, -1, 1.618033988749895}, {-1.0000000000000002`, -1.618033988749895, 
       0}}], Polygon3DBox[{{1.618033988749895, 0, 1.}, {
      0, -1, 1.618033988749895}, {0, 1., 1.618033988749895}}], 
    Polygon3DBox[{{1., 1.618033988749895, 0}, {
      0, 1., 1.618033988749895}, {-1., 1.618033988749895, 0}}], 
    Polygon3DBox[{{
      0, 1., -1.618033988749895}, {-1., 1.618033988749895, 
       0}, {-1.618033988749895, 0, -1.}}], 
    Polygon3DBox[{{
      0, -1., -1.618033988749895}, {-1.618033988749895, 
       0, -1.}, {-1.0000000000000002`, -1.618033988749895, 0}}]}, 
   {PointSize[0.04], 
    Point3DBox[{{1., -1.618033988749895, 0.}, {1., 0, 0}, {0.723606797749979, 
      0., -0.447213595499958}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
          Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {PointSize[0.04], 
    Point3DBox[{{0, -1, 1.618033988749895}, {
      0, 0, 1.618033988749895}, {-0.5393446629166316, 0, 
       1.4120226591665965`}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {
          Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 5820176962892015380}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{0., -1., 1.618033988749895}, {0., 0., 
         1.618033988749895}, {-0.5393446629166316, 0., 1.4120226591665965`}, {
         0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{357.9917461789955, 358.09334075569194`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.2934539735199121, -1.8018340177981123`, 2.849083876920946},
  ViewVertical->{-0.746230267341677, -0.2679681169723694, 
   0.6093713780523762}]], "Output",
 CellChangeTimes->{3.904478604850388*^9},
 CellLabel->"Out[376]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Rk/6Rq2m0HHWh8Tupf954//lN9gJ/xet2LXY\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"04aa2f90-b906-4bc6-9a20-5903bbf2eb66"]
}, Open  ]],

Cell["And act on that flag!", "Text",
 CellChangeTimes->{{3.90448109231594*^9, 
  3.904481095608684*^9}},ExpressionUUID->"8b409329-8559-4f14-aa77-\
9122736910a0"],

Cell[BoxData[
 RowBox[{"gphcellStar", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", 
          RowBox[{"0.3", ",", "Yellow"}], "]"}], ",", 
         RowBox[{"ConvexHullMesh", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"flagPgmIco", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ".", 
             RowBox[{"fg", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ".", 
             RowBox[{"fc", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "fg", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Length", "[", "fc", "]"}]}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.904064339289616*^9, 3.904064352851487*^9}, {
  3.904064385724352*^9, 3.904064482413807*^9}, {3.904064553573503*^9, 
  3.904064564113749*^9}, {3.904066179497774*^9, 3.9040661845892963`*^9}, {
  3.904066247649316*^9, 3.904066270992784*^9}, {3.9040663075026503`*^9, 
  3.9040664774678183`*^9}, {3.904066512758973*^9, 3.904066570647482*^9}, {
  3.904066619704451*^9, 3.904066629015912*^9}, {3.904066765675371*^9, 
  3.9040668033934927`*^9}, {3.9040668745704527`*^9, 3.904066878124846*^9}, {
  3.904066946785125*^9, 3.904066953587708*^9}, {3.904066987014703*^9, 
  3.904067035084453*^9}, {3.9043378807450542`*^9, 3.904337881331237*^9}},
 CellLabel->
  "In[459]:=",ExpressionUUID->"94d00b71-6dc5-4526-8ebe-ffcb00ded88e"],

Cell[BoxData[
 RowBox[{"fgS", ":=", 
  RowBox[{
   RowBox[{"HazLineal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", 
      RowBox[{
      "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", 
       ".", "E1", ".", "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", 
       "E1", ".", "E2", ".", "E1", ".", "E0"}], ",", "\n", "E0", ",", "\n", 
      RowBox[{
      "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", 
       ".", "E1", ".", "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", 
       "E1", ".", "E2", ".", "E1"}], ",", "\n", 
      RowBox[{
      "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", ".", "E1", 
       ".", "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", 
       "E2", ".", "E1", ".", "E0"}], ",", "\n", 
      RowBox[{
      "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", ".", 
       "E1"}], ",", "\n", 
      RowBox[{
      "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", ".", "E1", 
       ".", "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", 
       "E2", ".", "E1"}], ",", "\n", 
      RowBox[{
      "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", ".", "E1", 
       ".", "E0"}], ",", "\n", 
      RowBox[{
      "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", 
       ".", "E1"}], ",", "\n", 
      RowBox[{
      "E0", ".", "E1", ".", "E2", ".", "E1", ".", "E0", ".", "E1", ".", "E2", 
       ".", "E1", ".", "E0"}]}], "}"}], "]"}], "/.", "Numerico"}]}]], "Code",
 CellChangeTimes->{{3.904344697835246*^9, 3.9043447125603724`*^9}, 
   3.9043448017409277`*^9, {3.904345066680764*^9, 3.904345088679626*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"61fe8a31-ddc4-439a-adad-3a8c68233c8e"],

Cell[BoxData[
 RowBox[{"gphfacePgm3", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", 
        RowBox[{"0.3", ",", "Yellow"}], "]"}], ",", 
       RowBox[{"ConvexHullMesh", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"flagPgmIco3", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", 
           RowBox[{"fgS", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", "fgS", "]"}]}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.904064339289616*^9, 3.904064352851487*^9}, {
   3.904064385724352*^9, 3.904064482413807*^9}, {3.904064553573503*^9, 
   3.904064564113749*^9}, {3.904066179497774*^9, 3.9040661845892963`*^9}, {
   3.904066247649316*^9, 3.904066270992784*^9}, {3.9040663075026503`*^9, 
   3.9040664774678183`*^9}, {3.904066512758973*^9, 3.904066570647482*^9}, {
   3.904066619704451*^9, 3.904066629015912*^9}, {3.904066765675371*^9, 
   3.9040668033934927`*^9}, {3.9040668745704527`*^9, 3.904066878124846*^9}, {
   3.904066946785125*^9, 3.904066953587708*^9}, {3.904066987014703*^9, 
   3.904067035084453*^9}, {3.904151477541033*^9, 3.9041514889495373`*^9}, {
   3.9041533456926537`*^9, 3.904153371600148*^9}, {3.904317024555532*^9, 
   3.904317051641596*^9}, 3.904317087795435*^9, 3.904317174188336*^9, {
   3.9043448157872963`*^9, 3.9043448404939957`*^9}, {3.9043800460096807`*^9, 
   3.904380049700241*^9}, 3.904380575301593*^9, {3.904423130014833*^9, 
   3.9044231316425734`*^9}, {3.904425031920631*^9, 3.9044250341000834`*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"b30f2352-dcf0-4ee6-940c-0d849203282e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphfacePgm3", ",", "gphflagPgmIco3", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904153365586257*^9, 3.904153366711174*^9}, {
  3.904333371674469*^9, 3.904333375259487*^9}, {3.904344843977921*^9, 
  3.904344860310039*^9}, {3.904380027217813*^9, 3.904380051511032*^9}, {
  3.904423152918784*^9, 3.904423164092667*^9}, {3.904425036349976*^9, 
  3.904425038173876*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"d1d5f64b-e66e-45ee-b852-5b92ae90b710"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6894351323465296218}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3099697829990839627}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2315385044272070662}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5, -0.30901699437494745`}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 51871234575987355}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5, -0.30901699437494745`}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, -0.447213595499958}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3061938692893108672}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, -0.447213595499958}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {0.8090169943749475, 
        0.5, -0.30901699437494745`}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7260912609978210848}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.8090169943749475, 0.5, -0.30901699437494745`}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        2.7755575615628914`*^-17, -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8671040436378312791}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        2.7755575615628914`*^-17, -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, -0.447213595499958}, {
        0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5898362991908424161}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, -0.447213595499958}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.5, 0.30901699437494745`, -0.8090169943749475}, {
        0.723606797749979, 2.7755575615628914`*^-17, -0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 721275809262415813}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.5, 0.30901699437494745`, -0.8090169943749475}, {
        0.723606797749979, 2.7755575615628914`*^-17, -0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.04], 
    Point3DBox[{{1., -1.618033988749895, 0.}, {1., 0, 0}, {0.723606797749979, 
      0., -0.447213595499958}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
          Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{373.3434068106158, 345.29136146559523`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.8240438367430363`, -2.1304718491159993`, 1.8931333238216472`},
  ViewVertical->{-0.9990276072231241, -0.011996160182432184`, 
   0.042425607207398575`}]], "Output",
 CellChangeTimes->{3.904475314811625*^9, 3.90447624527179*^9},
 CellLabel->"Out[144]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"e3d427fd-0fca-423c-84a6-6d507c1c2f29"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"gphcellStar3", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Opacity", "[", 
          RowBox[{"0.3", ",", "Yellow"}], "]"}], ",", 
         RowBox[{"ConvexHullMesh", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"flagPgmIco3", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ".", 
             RowBox[{"fg", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ".", 
             RowBox[{"fc", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "fg", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Length", "[", "fc", "]"}]}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.904064339289616*^9, 3.904064352851487*^9}, {
  3.904064385724352*^9, 3.904064482413807*^9}, {3.904064553573503*^9, 
  3.904064564113749*^9}, {3.904066179497774*^9, 3.9040661845892963`*^9}, {
  3.904066247649316*^9, 3.904066270992784*^9}, {3.9040663075026503`*^9, 
  3.9040664774678183`*^9}, {3.904066512758973*^9, 3.904066570647482*^9}, {
  3.904066619704451*^9, 3.904066629015912*^9}, {3.904066765675371*^9, 
  3.9040668033934927`*^9}, {3.9040668745704527`*^9, 3.904066878124846*^9}, {
  3.904066946785125*^9, 3.904066953587708*^9}, {3.904066987014703*^9, 
  3.904067035084453*^9}, {3.9043378807450542`*^9, 3.904337881331237*^9}, {
  3.9044234353311443`*^9, 3.904423437809589*^9}, {3.9044239639169083`*^9, 
  3.90442397055937*^9}, {3.904462362025054*^9, 3.904462370024543*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"8f4fde19-dc7f-4802-9dd2-c890c9672b98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphcellStar3", ",", "gphflagPgmIco3", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904153365586257*^9, 3.904153366711174*^9}, {
  3.904333371674469*^9, 3.904333375259487*^9}, {3.904344843977921*^9, 
  3.904344860310039*^9}, {3.904380027217813*^9, 3.904380051511032*^9}, {
  3.904423152918784*^9, 3.904423164092667*^9}, {3.904426973784276*^9, 
  3.904426975608828*^9}, {3.904462375528105*^9, 3.9044623858887463`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"0b160e28-5f84-4122-a04f-fe1b26124a0b"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3099697829990839627}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, \
-0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, \
-0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7384799146542528084}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, \
-0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, \
-0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2504157610077420883}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, -0.8090169943749475, -0.5}, \
{-2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7030803743148986959}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, -0.8090169943749475, -0.5}, \
{-2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3696400117158332320}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5760563623439180584}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3400909612424544775}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 909423212148207275}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, -0.5}, {2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1152841418713023366}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, -0.5}, {2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5572698551581553452}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, 0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, 0.447213595499958, -0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2469106720754215708}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, 0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, 0.447213595499958, -0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0.30901699437494745`,
         0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7423354299668031806}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, 0.8090169943749475, 0.5}, {0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1192963151999714520}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2383028185848261832}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {-0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6998129269728092943}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {-0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5927371854023565898}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5, 0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6350593025793443763}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5, 0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2719480631282831569}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1239266922339052497}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, 0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5253317175606637114}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, 0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-0.5, -0.3090169943749474, -0.8090169943749475}, \
{0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5854569882227743884}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-0.5, -0.3090169943749474, -0.8090169943749475}, \
{0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.8090169943749475, 
        0.5, -0.3090169943749474}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3595300196917742829}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.8090169943749475, 
        0.5, -0.3090169943749474}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.5, -0.3090169943749474, \
-0.8090169943749475}, {0., -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {
         Polygon[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4540344340701542444}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.5, -0.3090169943749474, \
-0.8090169943749475}, {0., -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {-0.447213595499958, 0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4927185341733282591}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {-0.447213595499958, 0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.30901699437494745`,
         0.8090169943749475, 0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 964237438301879695}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.30901699437494745`,
         0.8090169943749475, 0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, -0.5, -0.3090169943749474}, \
{-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5198572099375627102}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, -0.5, -0.3090169943749474}, \
{-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1703566500546566082}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, \
{-0.8090169943749475, -0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4229145718243382345}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, \
{-0.8090169943749475, -0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4684807958437676984}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2747371297736322626}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5536436083996928625}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2307744487126381799}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -2.1203373015704913`*^-17}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3725236423971979523}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -2.1203373015704913`*^-17}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7915487153118907300}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2288055739197238873}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {-0.8090169943749475, 
        0.5, 0.30901699437494745`}, {-0.447213595499958, 0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4891879937152613966}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5, 
        0.30901699437494745`}, {-0.447213595499958, 0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 0.5, 0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, 2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7947007423073850858}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 0.5, 0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, 2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.30901699437494745`}, {
        0.44721359549995804`, 0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 375597730761781759}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.30901699437494745`}, {
        0.44721359549995804`, 0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -2.008412319093264*^-16, \
-1.}, {5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 136685800320512540}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -2.008412319093264*^-16, \
-1.}, {5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {0.8090169943749475, 
        0.5, 0.30901699437494745`}, {0.44721359549995804`, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2482999856081506833}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, 0.5, 0.30901699437494745`}, {0.44721359549995804`,
         0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9187205728824763496}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3123526907011421131}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5251429308033610721}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.008412319093264*^-16, 1., 
        1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3484258767031887754}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.008412319093264*^-16, 1., 
        1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4426433530179826640}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 
        1., -1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4911006698477115039}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1270147419437959466}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 865338478106105231}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1578782649316902958}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, -0.5, 
        0.30901699437494745`}, {0.44721359549995804`, -0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3994446011295223306}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, -0.5, 
        0.30901699437494745`}, {0.44721359549995804`, -0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        2.008412319093264*^-16, -1.}, {5.551115123125783*^-17, 
        5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5585356480170468428}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        2.008412319093264*^-16, -1.}, {5.551115123125783*^-17, 
        5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.5, 0.30901699437494745`}, {
        0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8599957735422832472}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.5, 0.30901699437494745`}, {
        0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, 5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5668346005045866185}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, 5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, 2.7755575615628914`*^-17, 0.447213595499958}, {0., 
        0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6579459224291538083}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, 2.7755575615628914`*^-17, 0.447213595499958}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8216395655109637909}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.008412319093264*^-16, -1., 
        1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8914062877836388260}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.008412319093264*^-16, -1., 
        1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4905228996672301933}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6026387332195489507}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5987940813858762911}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8407931431547591527}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8946386727549141518}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.008412319093264*^-16, 1., 1.618033988749895}, {
        5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1170873743388636396}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.008412319093264*^-16, 1., 
        1.618033988749895}, {5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 809044795558067790}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
        5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4201543987207566786}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 
        1., -1.618033988749895}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5679749814041914990}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, 2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3627212131221871580}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, 2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {-0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2806276539530466214}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {-0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.008412319093264*^-16, -1., 1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4107370308790500092}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.008412319093264*^-16, -1., 
        1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6001455227560654706}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {
         Polygon[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2123997603805736179}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3948613127218525405}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3370890015581325968}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7540545828587324338}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 
        0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5377635507649046395}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 
        0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
        0.447213595499958, 0.723606797749979, -2.7755575615628914`*^-17}, {0.,
         0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2396165134964036448}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
        0.447213595499958, 0.723606797749979, -2.7755575615628914`*^-17}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {-0.8090169943749475,
         0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4204952127965007561}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {0.8090169943749475, 
        0.5, -0.30901699437494745`}, {0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2068353763463451914}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.8090169943749475, 0.5, -0.30901699437494745`}, {0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {0., 0.447213595499958, 0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4108268398164482715}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {0., 0.447213595499958, 0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3468705311738621000}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {0.8090169943749475, -0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5051634933428849220}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {0.8090169943749475, -0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {0.3090169943749474, 
        0.8090169943749475, -0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7222599033771575309}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {0.3090169943749474, 
        0.8090169943749475, -0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, -0.5, 0.3090169943749474}, {0.723606797749979, 0.,
         0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 697246174166587235}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, -0.5, 0.3090169943749474}, {0.723606797749979, 0.,
         0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, 0.8090169943749475, -0.5}, {0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5842041872224338466}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, 0.8090169943749475, -0.5}, {0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 769282641680871670}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 892460323610397347}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5, -0.30901699437494745`}, \
{-0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 
        0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1399427146321602050}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5, -0.30901699437494745`}, \
{-0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7211885080125469164}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, -0.5, \
-0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, \
-2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5961856039621793623}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, -0.5, \
-0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, \
-2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5810564229885583439}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6338184168970600647}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5425841600412939062}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3410032200902826376}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 70159412281604191}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 0.5, 
        0.3090169943749474}, {0.723606797749979, 0., 0.447213595499958}, {0., 
        0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2019903269246473379}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 0.5, 
        0.3090169943749474}, {0.723606797749979, 0., 0.447213595499958}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1157339164796451892}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5153411717236663970}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1783805734071576874}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4755356531850876153}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {-0.3090169943749474, 
        0.8090169943749475, -0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4275679446335789299}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {-0.3090169943749474, 
        0.8090169943749475, -0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5, 0.3090169943749474}, {-0.723606797749979, 
        0., 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1912229212964730525}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5, 0.3090169943749474}, {-0.723606797749979, 
        0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.3090169943749474, 0.8090169943749475, -0.5}, {-0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3178448957827605156}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.3090169943749474, 0.8090169943749475, -0.5}, {-0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5000308928106339467}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7402658431896399336}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4900938751132894984}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -3.4307778215552914`*^-17}, \
{-0.3090169943749474, -0.8090169943749475, -0.5}, {-0.447213595499958, \
-0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 763187035966901351}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -3.4307778215552914`*^-17}, \
{-0.3090169943749474, -0.8090169943749475, -0.5}, {-0.447213595499958, \
-0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7169393268654534981}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.3090169943749474, \
-0.8090169943749475, -0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0.,
         0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8245141816509502021}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.3090169943749474, \
-0.8090169943749475, -0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1664283318430008761}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7746316109542984923}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1331746796737078715}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -2.008412319093264*^-16}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1338642046882831412}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -2.008412319093264*^-16}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 
        0.}, {-0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7731581040057856866}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        0.}, {-0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3709544703365527037}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8197031594176900995}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2255586471729023343}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8143348323602510541}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-2.008412319093264*^-16}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2123538805552349849}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.008412319093264*^-16}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {
        0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4806054868527704468}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {
        0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8121066530943621706}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.04], 
    Point3DBox[{{1., -1.618033988749895, 0.}, {1., 0, 0}, {0.723606797749979, 
      0., -0.447213595499958}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.7], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
          Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
         0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
          TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{423.895492207815, 432.7233427666679},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.001281242980178, 2.692702117248544, 0.44071384623237986`},
  ViewVertical->{0.7007486900711152, 0.008864432280091608, 
   0.7133531349927383}]], "Output",
 CellChangeTimes->{3.904429120819591*^9, 3.904476432513242*^9},
 CellLabel->"Out[146]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4z6qD/Nn9OdZ+ayRqiXCWdlMdOqzRJ/DobXwVGKDp5lzN16IWghbGiIVw+DY
iiFq6OR6DmXophBbXCoJQ1dIoKMj6Fh640WmKMkfAzoWS3vWMffOZfj7pcdv
05R0H7+V+TuuY/7OFcx9ar262ZfVW2skLsmi2iPdCPMnafkgUWNIXTyy5lxW
vmyypYumAQRqogHsL/cfh9r5QEu1gAypuBo5mS2P6WdxEsuMVKCJ6UAT12ND
TrPzkRsFO3ctCTq7exfgBmMoOkx2Ajc5T3bidYlc3i87mU/srXj4pwxl5Qu5
O996Hj79IoOygqiwQoC0rSPImyHK3UyCms5BBuf9/Zt1SQIHrDNBJlclSTrI
5LoiGUx0VeIIbF+yYxH4JKKxUiQInEsgcIHQU0HgytKeDQw01bvuMuZfc0FA
4ufutIm8ayVzD95ufmZAOMHH6atuxXQnfKVNZGs5SuhrGvT12I/OjCR4RWRv
wzmCyAOCRjFcC4RkOm0qN9RYF7vbVvEJOQtJC7fHuA2mgBcuukkMqgo+kn/N
Im3TJZ5PSrtXIG35n8CdoPKlh6/SwgrEDdM2g7RNe8u5vC2ehZTlfwrntLtj
CVLXWzMLu42L4PKQVZzeZ8HqWLOueBSJ1ZKXRWDqI7jStPqeEbuAjk7AvWWO
qHgyREtwIKG+lBNQd/SlKp5pBHNzRMXjRJkLrHUf2oG3YoswNyedwN67kLno
CG7gTP/xEsHeJ25D9qaAvvwt8JqgvPtHzH98HVOfw2RVRU3xMmxVRd0Je2qz
13IHOcFekGDlDiR708qeAntZCrjbT17Sf9UMvFWa378X85bNY+X1vLi7m0/F
A+uVKUh765Yxb+0Sm8e8JAoWOySXuQY7Bo/BFIh7mcE5C+1sWJY1uct/P0re
jCCvv2wa85dOFLrrIHkzirxBn4gztYIgrfi0wYK5fR8OUnHPIrbAGvWT134+
qi7UT2mifhpI9IEo4ibVT9OJJlCWsLCZBOJWEcQtwDkFfGWOu20FFk3u/Sst
1qYla7kEl/dzWX76dkZ+KjKluTmic0R52tfEl4cI8+AE5iFUVDmmr1U1PVxb
IuqqNNyzC/97xeUA330bALBNqy0OV8RSOKOWXNSR0jqcAiaD8F4nvAM/vDmj
BXGHDWBuO5/dV+/jqhDlbtYWXuRuwfYMyNkccjZrclZdCcBStLieJ42BsYNW
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
30y3DM9Fmh/wlrHse9Y95pBZ8pxZ3FykBk4XIqfDGZsEpziYzJ+DMDnyy9dQ
luDRYYbMDEhTf1wsVZ68O32fKKiQ515s3Ww2cxDcy8zWIOPdtxyNb3D/97gA
SZrbHqFT1yYvh1ssyE8plh8ACMgPAKTNAKSy5nQc7Bwg1F7xASI4mRfiG9+W
x7Uz8vpt+MlWGg5ZKzSEkNjORG7lgoVGZ7KGpq9MDR1VbrtZ1RYvNJj42Sv6
27/Ez6e18EBwdAm60+PX0/j+YFMGpjle+WMnpzWG03ZlVpPoGIJzBrf6yNbP
OEFijv/rIeEAR0I+pgpMu/WxPUKjTULCKxu1s0z72IJsRDoEI9IlI2Fpk5Wx
QUMEwKp/7COq9qDW4h8ANewDIdlLXoMAQQDQVtq5jQJkG1P17bsw25R1TDCm
vleQkO441ygfsMMBnzrmuebWNBLcxewmc91p3cXWtW6XIZN6a0MPX7pSjR03
XxEZoGD8ycu+ZCyoY082tFswFsnsX3YGziQvETr2UQNj0TU+BKiZ1gAC3q1i
x5vN/SprzlO1eVolvv+sqm2530EB+eAHzwbUI1t9yq5cAQ5AVEAD/2nNK+sM
KO6704Dh4MtGGjLwVcRRwSveTm4sjPN0Ix0nktOFbVZwE3OaBEQezhHiIFdb
NsuzlgAEPbI1JHIH/9cb+n/C0/VkH+rjoSLL1UF1C72xNnkh2zKERJFLA37u
UsI39Bok1GYOx76hIRIaF7iGCPB3Krd+DVFASKhufxQRAK1TVAiGBKsaEa5J
sTCA9Bsk5B0CIPtwWCTEIEioQq+gCmWqRn6qaicsctv0eGWHdpaRYBHmBXGQ
q37nelW79DRHBJB+y/mQaF2sPvFtBYnH5LcbCAAmViQg8KRy5tJ11vOyg+wW
ml8lec3a8YiCPMkCNwVABP2Ca2wx+3vZbVnH2xUlsCWJ5QAdp+/jBp0aAZVn
dhoOIGmATzSIQVB9ZqdbvWYSnwVXWLl3kzpy4EWQkIP4sd6MBrhODLKcv2l5
oI06Xz/T6nCBKS7c+C/weVw4Kj+8V9VvOc+IwVzIuWb106ygw1aHdTdKVa4+
d7YaW/kZBVmGA/KsBk1+64r98/PrGcC83wGvL/gSGsAuoX2VzK9dQrQc8xtB
RQmvQ3kdbD6vSxoXjk7il9lewxrbV8Cs2gxraa/fcyfmF7oG+JO9Pt/b/kP9
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
fLveEPktvpSzc2hpbFwrT25V1au+jNhp/EYPsOAKbxQ7YjMnGZCYN5rnY7l2
682qPnEUW6iRgPd/Mu9xhWLia3FBeKBjvXtrwtuEH5J3QirXA5S9TczJx99v
3mbGvE0+NitbH8K3Ce8tK8D4TXyV3AH2dohdKKTrFfuXgupJftoJpvXhfpzW
zvgorVx9PkUzR0OOv0X+Hl26/9UPpXlX7tmc9JtZb1Pr3sysiSi9mSQG11HM
cpRafDPnnOW9GQ97/4YvESUDFnorK2z6aFOt+kAbeysljjI4+FDAphZeqwCv
P/gxiSHE38N78Knzn4hD60Lg5Y/s/aEZ05oubBxK5LxqF6x0YxBe3gNN3Z0K
qVfro+AnX62y4XY38uG1iKSqV6xOvZIvyHgqpl6ply6eXo1eqXrOufaV4oBW
Nt+j6j297lV4TuMXKbEXeS8+7TpgE8hfoDZ/vqp/SNelm69XEDC4DPjj9Hkt
QqDaU3+5c33qL5t01M75sKIhjEGEz59k4Y//aJn90fchHiwJ2lBX1zhijOiv
pC+6I/lXVDtHN0UTLpTejjci4r/UmfpL0Xr2lyBskXmHDsfhP/B+OOUb/npX
8tfjOg+/Zwlshfy/u1P/O7eC/W/h+vg+pXa/BXju3l38m/3p3wy8i/7kN/B0
9l+/+9fv/vW7f/3uX7/71+82/131N/8fTOOOVw==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"4f1727af-5d89-45e9-a771-33cd21d67726"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"ConvexHullMesh", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"flagPgmIco3", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ".", 
            RowBox[{"fg", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ".", 
            RowBox[{"fc", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "fg", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"Length", "[", "fc", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9044790638487253`*^9, 3.9044791097487993`*^9}, {
  3.904479969648264*^9, 3.90447997112435*^9}, {3.904480283106258*^9, 
  3.904480284242724*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"d90e9f75-0080-4568-a148-9127454406aa"],

Cell[BoxData[
 Graphics3DBox[{
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3099697829990839627}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., -1.618033988749895, 
       1.1102230246251565`*^-16}, {-0.30901699437494745`, \
-0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, \
-0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7384799146542528084}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., -1.618033988749895, 
       1.1102230246251565`*^-16}, {-0.30901699437494745`, \
-0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, \
-0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 1.618033988749895, 
       1.1102230246251565`*^-16}, {-0.30901699437494745`, 
       0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2504157610077420883}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 1.618033988749895, 
       1.1102230246251565`*^-16}, {-0.30901699437494745`, 
       0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 
       0., -1.}, {-0.30901699437494745`, -0.8090169943749475, -0.5}, \
{-2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0., 0., 
       0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7030803743148986959}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 
       0., -1.}, {-0.30901699437494745`, -0.8090169943749475, -0.5}, \
{-2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 
       0., -1.}, {-0.30901699437494745`, 
       0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3696400117158332320}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 
       0., -1.}, {-0.30901699437494745`, 
       0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, 0.}, {-1., 0., 
       0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5760563623439180584}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, 0.}, {-1., 0., 
       0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-1., 0., 
       0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3400909612424544775}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-1., 0., 
       0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, 
       1.1102230246251565`*^-16}, {
       0.30901699437494745`, -0.8090169943749475, -0.5}, {
       2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0.,
        0., 0.}}, {
        Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 909423212148207275}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, 
       1.1102230246251565`*^-16}, {
       0.30901699437494745`, -0.8090169943749475, -0.5}, {
       2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0.,
        0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 1.618033988749895, 
       1.1102230246251565`*^-16}, {0.30901699437494745`, 
       0.8090169943749475, -0.5}, {2.7755575615628914`*^-17, 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1152841418713023366}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 1.618033988749895, 
       1.1102230246251565`*^-16}, {0.30901699437494745`, 
       0.8090169943749475, -0.5}, {2.7755575615628914`*^-17, 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
       0.30901699437494745`, -0.8090169943749475, -0.5}, {
       2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0.,
        0., 0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5572698551581553452}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
       0.30901699437494745`, -0.8090169943749475, -0.5}, {
       2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0.,
        0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {0.30901699437494745`,
        0.8090169943749475, -0.5}, {2.7755575615628914`*^-17, 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2469106720754215708}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
       0.30901699437494745`, 0.8090169943749475, -0.5}, {
       2.7755575615628914`*^-17, 0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0.30901699437494745`, 
       0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 0.}, {
       0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7423354299668031806}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
       0.30901699437494745`, 0.8090169943749475, 0.5}, {0.447213595499958, 
       0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 
       1.618033988749895, -1.1102230246251565`*^-16}, {0.30901699437494745`, 
       0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 0.}, {
       0., 0., 0.}}, {
        Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1192963151999714520}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 
       1.618033988749895, -1.1102230246251565`*^-16}, {0.30901699437494745`, 
       0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 0.}, {
       0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
       1.}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2383028185848261832}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
       1.}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 
       1.618033988749895, -2.1203373015704913`*^-17}, {-0.5, 
       0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 6998129269728092943}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 
       1.618033988749895, -2.1203373015704913`*^-17}, {-0.5, 
       0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5927371854023565898}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5, 0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 6350593025793443763}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5, 0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
       0.30901699437494745`, -0.8090169943749475, 0.5}, {
       0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2719480631282831569}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
       0.30901699437494745`, -0.8090169943749475, 0.5}, {
       0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
       0.5}, {0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1239266922339052497}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
       0.5}, {0.447213595499958, -0.723606797749979, 0.}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 3.4307778215552914`*^-17, 1.}, {
       0.8090169943749475, 0.5, -0.3090169943749474}, {0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5253317175606637114}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 3.4307778215552914`*^-17, 
       1.}, {0.8090169943749475, 0.5, -0.3090169943749474}, {
       0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-0.5, -0.3090169943749474, -0.8090169943749475}, \
{0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5854569882227743884}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-0.5, -0.3090169943749474, -0.8090169943749475}, \
{0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {0.8090169943749475, 
       0.5, -0.3090169943749474}, {0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3595300196917742829}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {0.8090169943749475, 
       0.5, -0.3090169943749474}, {0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {-0.5, -0.3090169943749474, \
-0.8090169943749475}, {0., -0.447213595499958, -0.723606797749979}, {0., 0., 
       0.}}, {
        Polygon[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4540344340701542444}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {-0.5, -0.3090169943749474, \
-0.8090169943749475}, {0., -0.447213595499958, -0.723606797749979}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 0., 
       1.}, {-0.30901699437494745`, 0.8090169943749475, 
       0.5}, {-0.447213595499958, 0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4927185341733282591}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 0., 
       1.}, {-0.30901699437494745`, 0.8090169943749475, 
       0.5}, {-0.447213595499958, 0.723606797749979, 0.}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 
       1.618033988749895, -1.1102230246251565`*^-16}, {-0.30901699437494745`, 
       0.8090169943749475, 0.5}, {-0.447213595499958, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 964237438301879695}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 
       1.618033988749895, -1.1102230246251565`*^-16}, {-0.30901699437494745`, 
       0.8090169943749475, 0.5}, {-0.447213595499958, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
       1.}, {-0.8090169943749475, -0.5, -0.3090169943749474}, \
{-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5198572099375627102}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
       1.}, {-0.8090169943749475, -0.5, -0.3090169943749474}, \
{-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 
       1.618033988749895, -2.1203373015704913`*^-17}, {0.5, 
       0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1703566500546566082}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 
       1.618033988749895, -2.1203373015704913`*^-17}, {0.5, 
       0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1.1102230246251565`*^-16, -1., -1.618033988749895}, \
{-0.8090169943749475, -0.5, -0.3090169943749474}, {-0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4229145718243382345}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1.1102230246251565`*^-16, -1., -1.618033988749895}, \
{-0.8090169943749475, -0.5, -0.3090169943749474}, {-0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1.1102230246251565`*^-16, -1., -1.618033988749895}, {0.5, 
       0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4684807958437676984}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1.1102230246251565`*^-16, -1., -1.618033988749895}, {0.5, 
       0.3090169943749474, -0.8090169943749475}, {0., 
       0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 0., 
       1.}, {-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2747371297736322626}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 0., 
       1.}, {-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5536436083996928625}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 3.4307778215552914`*^-17, 
       1.}, {-0.8090169943749475, 
       0.5, -0.3090169943749474}, {-0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2307744487126381799}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 3.4307778215552914`*^-17, 
       1.}, {-0.8090169943749475, 
       0.5, -0.3090169943749474}, {-0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1., -1.618033988749895, -2.1203373015704913`*^-17}, {
       0.5, -0.3090169943749474, -0.8090169943749475}, {
       0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3725236423971979523}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1., -1.618033988749895, -2.1203373015704913`*^-17}, {
       0.5, -0.3090169943749474, -0.8090169943749475}, {
       0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {-0.8090169943749475, 
       0.5, -0.3090169943749474}, {-0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7915487153118907300}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {-0.8090169943749475, 
       0.5, -0.3090169943749474}, {-0.723606797749979, 
       0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {
       0.5, -0.3090169943749474, -0.8090169943749475}, {
       0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2288055739197238873}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
       1., -1.618033988749895}, {
       0.5, -0.3090169943749474, -0.8090169943749475}, {
       0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {-0.8090169943749475, 
       0.5, 0.30901699437494745`}, {-0.447213595499958, 0.723606797749979, 
       2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4891879937152613966}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., 1., 1.618033988749895}, {-0.8090169943749475,
        0.5, 0.30901699437494745`}, {-0.447213595499958, 0.723606797749979, 
       2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 0.5, 0.30901699437494745`}, {-0.447213595499958, 
       0.723606797749979, 2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7947007423073850858}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 0.5, 0.30901699437494745`}, {-0.447213595499958, 
       0.723606797749979, 2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
       1.618033988749895}, {0.8090169943749475, 0.5, 0.30901699437494745`}, {
       0.44721359549995804`, 0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 375597730761781759}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
       1.618033988749895}, {0.8090169943749475, 0.5, 0.30901699437494745`}, {
       0.44721359549995804`, 0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, -2.008412319093264*^-16, -1.}, \
{5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {
        Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 136685800320512540}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, -2.008412319093264*^-16, \
-1.}, {5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {0.8090169943749475, 
       0.5, 0.30901699437494745`}, {0.44721359549995804`, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {
        Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2482999856081506833}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {0.8090169943749475,
        0.5, 0.30901699437494745`}, {0.44721359549995804`, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
       5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {
        Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 9187205728824763496}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
       5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0., 
       0., 0.}}, {
        Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3123526907011421131}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
       0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0., 
       0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5251429308033610721}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
       0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-2.008412319093264*^-16, 1., 
       1.618033988749895}, {-5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3484258767031887754}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-2.008412319093264*^-16, 1., 
       1.618033988749895}, {-5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0.9999999999999999, -1.618033988749895, 
       3.4307778215552914`*^-17}, {
       0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {
        Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4426433530179826640}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0.9999999999999999, -1.618033988749895, 
       3.4307778215552914`*^-17}, {
       0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., 
       1., -1.618033988749895}, {-5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4911006698477115039}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., 
       1., -1.618033988749895}, {-5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
       0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1270147419437959466}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
       0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., -1., 
       1.618033988749895}, {-0.8090169943749475, -0.5, 
       0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
       2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 865338478106105231}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., -1., 
       1.618033988749895}, {-0.8090169943749475, -0.5, 
       0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
       2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, -0.5, 
       0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
       2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1578782649316902958}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, -0.5, 
       0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
       2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
       1.618033988749895}, {0.8090169943749475, -0.5, 0.30901699437494745`}, {
       0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3994446011295223306}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
       1.618033988749895}, {0.8090169943749475, -0.5, 0.30901699437494745`}, {
       0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 2.008412319093264*^-16, -1.}, {
       5.551115123125783*^-17, 5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {
        Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5585356480170468428}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 
       2.008412319093264*^-16, -1.}, {5.551115123125783*^-17, 
       5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
       0.8090169943749475, -0.5, 0.30901699437494745`}, {
       0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8599957735422832472}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
       0.8090169943749475, -0.5, 0.30901699437494745`}, {
       0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
       5.551115123125783*^-17, 5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {
        Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5668346005045866185}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
       5.551115123125783*^-17, 5.551115123125783*^-17, -1.}, {
       5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
       0.723606797749979, 2.7755575615628914`*^-17, 0.447213595499958}, {0., 
       0., 0.}}, {
        Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 6579459224291538083}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
       0.723606797749979, 2.7755575615628914`*^-17, 0.447213595499958}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5, 
       0.30901699437494745`, 0.8090169943749475}, {0.723606797749979, 
       2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8216395655109637909}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5, 
       0.30901699437494745`, 0.8090169943749475}, {0.723606797749979, 
       2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-2.008412319093264*^-16, -1., 
       1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
       0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
       0., 0.}}, {
        Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8914062877836388260}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-2.008412319093264*^-16, -1., 
       1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
       0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0.9999999999999999, 1.618033988749895, 
       3.4307778215552914`*^-17}, {0.5, 
       0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {
        Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4905228996672301933}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0.9999999999999999, 1.618033988749895, 
       3.4307778215552914`*^-17}, {0.5, 
       0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       0., -1., -1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
       0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
       0., 0.}}, {
        Polygon[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 6026387332195489507}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       0., -1., -1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
       0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {0.5, 
       0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {
        Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5987940813858762911}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {0.5, 
       0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {-0.5, -0.30901699437494745`, 
       0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
       0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8407931431547591527}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {-0.5, -0.30901699437494745`, 
       0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
       0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, 
       0.}, {-0.5, -0.30901699437494745`, 
       0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
       0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8946386727549141518}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, 
       0.}, {-0.5, -0.30901699437494745`, 
       0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
       0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{2.008412319093264*^-16, 1., 1.618033988749895}, {
       5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {-0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1170873743388636396}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{2.008412319093264*^-16, 1., 1.618033988749895}, {
       5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {-0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-0.9999999999999999, -1.618033988749895, 
       3.4307778215552914`*^-17}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
       0., 0.}}, {
        Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 809044795558067790}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-0.9999999999999999, -1.618033988749895, 
       3.4307778215552914`*^-17}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
       5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {-0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4201543987207566786}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
       5.551115123125783*^-17, 
       1., -5.551115123125783*^-17}, {-0.447213595499958, 
       0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., 
       1., -1.618033988749895}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
       0., 0.}}, {
        Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5679749814041914990}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., 
       1., -1.618033988749895}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {-0.5, 0.30901699437494745`, 
       0.8090169943749475}, {-0.723606797749979, 2.7755575615628914`*^-17, 
       0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3627212131221871580}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {-0.5, 0.30901699437494745`, 
       0.8090169943749475}, {-0.723606797749979, 2.7755575615628914`*^-17, 
       0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5, 
       0.30901699437494745`, 0.8090169943749475}, {-0.723606797749979, 
       2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2806276539530466214}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-0.5, 
       0.30901699437494745`, 0.8090169943749475}, {-0.723606797749979, 
       2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{2.008412319093264*^-16, -1., 1.618033988749895}, {
       5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
       0.}}, {
        Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4107370308790500092}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{2.008412319093264*^-16, -1., 
       1.618033988749895}, {
       5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-0.9999999999999999, 1.618033988749895, 
       3.4307778215552914`*^-17}, {-0.5, 
       0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {
        Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 6001455227560654706}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-0.9999999999999999, 1.618033988749895, 
       3.4307778215552914`*^-17}, {-0.5, 
       0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
       5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
       0.}}, {
        Polygon[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2123997603805736179}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
       5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {-0.5, 
       0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3948613127218525405}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {-0.5, 
       0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
       0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
       0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3370890015581325968}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
       0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
       0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7540545828587324338}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
       0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
       1.}, {-0.8090169943749475, 
       0.5, -0.30901699437494745`}, {-0.447213595499958, 
       0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5377635507649046395}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
       1.}, {-0.8090169943749475, 
       0.5, -0.30901699437494745`}, {-0.447213595499958, 
       0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
       1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
       0.447213595499958, 0.723606797749979, -2.7755575615628914`*^-17}, {0., 
       0., 0.}}, {
        Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2396165134964036448}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
       1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
       0.447213595499958, 0.723606797749979, -2.7755575615628914`*^-17}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {-0.8090169943749475, 
       0.5, -0.30901699437494745`}, {-0.447213595499958, 
       0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4204952127965007561}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., 
       1., -1.618033988749895}, {-0.8090169943749475, 
       0.5, -0.30901699437494745`}, {-0.447213595499958, 
       0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {0.8090169943749475, 
       0.5, -0.30901699437494745`}, {0.447213595499958, 
       0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2068353763463451914}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {0.8090169943749475,
        0.5, -0.30901699437494745`}, {0.447213595499958, 
       0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {-0.5, 0.30901699437494745`, 0.8090169943749475}, {
       0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4108268398164482715}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {-0.5, 0.30901699437494745`, 0.8090169943749475}, {
       0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5, 
       0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3468705311738621000}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-0.5, 
       0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{2.1203373015704913`*^-17, -1., 
       1.618033988749895}, {0.8090169943749475, -0.5, 0.3090169943749474}, {
       0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5051634933428849220}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{2.1203373015704913`*^-17, -1., 
       1.618033988749895}, {0.8090169943749475, -0.5, 0.3090169943749474}, {
       0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 
       1.618033988749895, -3.4307778215552914`*^-17}, {0.3090169943749474, 
       0.8090169943749475, -0.5}, {0.447213595499958, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7222599033771575309}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 
       1.618033988749895, -3.4307778215552914`*^-17}, {0.3090169943749474, 
       0.8090169943749475, -0.5}, {0.447213595499958, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
       0.8090169943749475, -0.5, 0.3090169943749474}, {0.723606797749979, 0., 
       0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 697246174166587235}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
       0.8090169943749475, -0.5, 0.3090169943749474}, {0.723606797749979, 0., 
       0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
       0.3090169943749474, 0.8090169943749475, -0.5}, {0.447213595499958, 
       0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5842041872224338466}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
       0.3090169943749474, 0.8090169943749475, -0.5}, {0.447213595499958, 
       0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 769282641680871670}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 892460323610397347}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
       1.}, {-0.8090169943749475, -0.5, -0.30901699437494745`}, \
{-0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 
       0.}}, {
        Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1399427146321602050}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
       1.}, {-0.8090169943749475, -0.5, -0.30901699437494745`}, \
{-0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 1.}, {
       0.8090169943749475, -0.5, -0.30901699437494745`}, {
       0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0.,
        0., 0.}}, {
        Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7211885080125469164}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
       1.}, {0.8090169943749475, -0.5, -0.30901699437494745`}, {
       0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0.,
        0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       0., -1., -1.618033988749895}, {-0.8090169943749475, -0.5, \
-0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, \
-2.7755575615628914`*^-17}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5961856039621793623}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       0., -1., -1.618033988749895}, {-0.8090169943749475, -0.5, \
-0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, \
-2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
       0.8090169943749475, -0.5, -0.30901699437494745`}, {
       0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0.,
        0., 0.}}, {
        Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5810564229885583439}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
       0.8090169943749475, -0.5, -0.30901699437494745`}, {
       0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0.,
        0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {-0.5, -0.30901699437494745`, 
       0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0., 
       0., 0.}}, {
        Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 6338184168970600647}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {-0.5, -0.30901699437494745`, 
       0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, 
       0.}, {-0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5425841600412939062}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, 
       0.}, {-0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{2.1203373015704913`*^-17, 1., 1.618033988749895}, {
       0.8090169943749475, 0.5, 0.3090169943749474}, {0.723606797749979, 0., 
       0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3410032200902826376}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{2.1203373015704913`*^-17, 1., 
       1.618033988749895}, {0.8090169943749475, 0.5, 0.3090169943749474}, {
       0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {0.3090169943749474, -0.8090169943749475, -0.5}, {
       0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 70159412281604191}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {0.3090169943749474, -0.8090169943749475, -0.5}, {
       0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 0.5, 
       0.3090169943749474}, {0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2019903269246473379}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 0.5, 
       0.3090169943749474}, {0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {
       0.3090169943749474, -0.8090169943749475, -0.5}, {
       0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1157339164796451892}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {
       0.3090169943749474, -0.8090169943749475, -0.5}, {
       0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
       0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5153411717236663970}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
       1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
       0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5, 
       0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1783805734071576874}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5, 
       0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-2.1203373015704913`*^-17, -1., 
       1.618033988749895}, {-0.8090169943749475, -0.5, 
       0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {
        Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4755356531850876153}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, -1., 
       1.618033988749895}, {-0.8090169943749475, -0.5, 
       0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 
       1.618033988749895, -3.4307778215552914`*^-17}, {-0.3090169943749474, 
       0.8090169943749475, -0.5}, {-0.447213595499958, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4275679446335789299}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 
       1.618033988749895, -3.4307778215552914`*^-17}, {-0.3090169943749474, 
       0.8090169943749475, -0.5}, {-0.447213595499958, 0.723606797749979, 
       0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5, 0.3090169943749474}, {-0.723606797749979, 
       0., 0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1912229212964730525}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5, 0.3090169943749474}, {-0.723606797749979, 
       0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.3090169943749474, 0.8090169943749475, -0.5}, {-0.447213595499958, 
       0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3178448957827605156}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.3090169943749474, 0.8090169943749475, -0.5}, {-0.447213595499958, 
       0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 5000308928106339467}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
       1.618033988749895}, {0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
       0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7402658431896399336}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
       0.5, -0.30901699437494745`, 0.8090169943749475}, {
       0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-2.1203373015704913`*^-17, 1., 
       1.618033988749895}, {-0.8090169943749475, 0.5, 
       0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {
        Polygon[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4900938751132894984}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, 1., 
       1.618033988749895}, {-0.8090169943749475, 0.5, 
       0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1., -1.618033988749895, -3.4307778215552914`*^-17}, \
{-0.3090169943749474, -0.8090169943749475, -0.5}, {-0.447213595499958, \
-0.723606797749979, 0.}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 763187035966901351}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1., -1.618033988749895, -3.4307778215552914`*^-17}, \
{-0.3090169943749474, -0.8090169943749475, -0.5}, {-0.447213595499958, \
-0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 0.5, 
       0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7169393268654534981}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 0.5, 
       0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {-0.3090169943749474, \
-0.8090169943749475, -0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0.,
        0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8245141816509502021}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 
       1.1102230246251565`*^-16, -1.}, {-0.3090169943749474, \
-0.8090169943749475, -0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0.,
        0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, 0., 
       1.}, {-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1664283318430008761}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, 0., 
       1.}, {-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{
       1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7746316109542984923}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
       0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
       0.9999999999999999}, {-0.30901699437494745`, 0.8090169943749475, 
       0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1331746796737078715}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
       0.9999999999999999}, {-0.30901699437494745`, 0.8090169943749475, 
       0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 
       0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., -1.618033988749895, -2.008412319093264*^-16}, {
       1., 5.551115123125783*^-17, -5.551115123125783*^-17}, {
       0.723606797749979, 5.551115123125783*^-17, 0.447213595499958}, {0., 0.,
        0.}}, {
        Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 1338642046882831412}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{
       1., -1.618033988749895, -2.008412319093264*^-16}, {1., 
       5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
       5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {-0.30901699437494745`,
        0.8090169943749475, 0.5}, {0., 0.44721359549995804`, 
       0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7731581040057856866}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 1.618033988749895, 
       0.}, {-0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
       0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {1., 
       5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
       5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 3709544703365527037}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {1., 
       5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
       5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
       0.30901699437494745`, -0.8090169943749475, 0.5}, {
       2.7755575615628914`*^-17, -0.447213595499958, 0.723606797749979}, {0., 
       0., 0.}}, {
        Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8197031594176900995}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
       0.30901699437494745`, -0.8090169943749475, 0.5}, {
       2.7755575615628914`*^-17, -0.447213595499958, 0.723606797749979}, {0., 
       0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
       0.5}, {2.7755575615628914`*^-17, -0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2255586471729023343}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
       0.5}, {2.7755575615628914`*^-17, -0.447213595499958, 
       0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
       0.9999999999999999}, {0.30901699437494745`, 0.8090169943749475, 0.5}, {
       0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8143348323602510541}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
       0.9999999999999999}, {0.30901699437494745`, 0.8090169943749475, 0.5}, {
       0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., -1.618033988749895, -2.008412319093264*^-16}, \
{-1., 5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979, 
       5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 2123538805552349849}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.008412319093264*^-16}, {-1., 
       5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979, 
       5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {0.30901699437494745`,
        0.8090169943749475, 0.5}, {0., 0.44721359549995804`, 
       0.723606797749979}, {0., 0., 0.}}, {
        Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 4806054868527704468}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {
       0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
       0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-1., 
       5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979, 
       5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
        Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
       Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 8121066530943621706}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-1., 
       5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979, 
       5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
        TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"]},
  Boxed->False,
  ImageSize->{357.663564167329, 362.8563903833252},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.9033859468121934`, 0.9569798593385271, -2.6289373302340744`},
  
  ViewVertical->{-0.051810187003532765`, 
   0.9200611776953032, -0.3883337917572855}]], "Output",
 CellChangeTimes->{3.904480591180787*^9, 3.904480837861434*^9},
 CellLabel->
  "Out[463]=",ExpressionUUID->"84e1719d-a7b2-498b-b768-c848e0b6f3a2"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.904480260536414*^9, 3.9044802605466137`*^9}, {
  3.9044808762020273`*^9, 
  3.904480877132799*^9}},ExpressionUUID->"d3f7904d-b9db-4909-8474-\
9f41b46e16ac"],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{
   "UniformPolyhedron", "[", "\"\<SmallStellatedDodecahedron\>\"", "]"}], ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9044802291428633`*^9, 3.904480258138506*^9}, {
  3.904480872583056*^9, 3.904480874350915*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"bcdac52a-eed9-41a3-93e9-a39c12b4911a"],

Cell[BoxData[
 RowBox[{
  Graphics3DBox[
   PolyhedronBox[
    NCache[{{-3^Rational[-1, 2], 0, Root[1 - 84 #^2 + 144 #^4& , 2, 0]}, {
      Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2], Root[
       1 - 84 #^2 + 144 #^4& , 3, 0]}, {
      Rational[-1, 2] 3^Rational[-1, 2], Rational[1, 2], Root[
       1 - 84 #^2 + 144 #^4& , 3, 0]}, {
      Rational[1, 2] 3^Rational[-1, 2], Rational[-1, 2], Root[
       1 - 84 #^2 + 144 #^4& , 2, 0]}, {
      Rational[1, 2] 3^Rational[-1, 2], Rational[1, 2], Root[
       1 - 84 #^2 + 144 #^4& , 2, 0]}, {
      3^Rational[-1, 2], 0, Root[1 - 84 #^2 + 144 #^4& , 3, 0]}, {
      Root[1 - 9 #^2 + 9 #^4& , 2, 0], 
       0, (Rational[1, 8] + Rational[1, 24] 5^Rational[1, 2])^
       Rational[1, 2]}, {(Rational[1, 6] (3 - 5^Rational[1, 2]))^
       Rational[1, 2], 0, 
       Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
        Rational[1, 2]}, {
      Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
       Rational[1, 4] (1 - 5^Rational[1, 2]), 
       Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
        Rational[1, 2]}, {
      Root[1 - 36 #^2 + 144 #^4& , 2, 0], 
       Rational[1, 4] (-1 + 5^Rational[1, 2]), 
       Rational[-1, 2] (Rational[1, 6] (3 + 5^Rational[1, 2]))^
        Rational[1, 2]}, {
      Root[1 - 36 #^2 + 144 #^4& , 3, 0], 
       Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[1, 8] + 
        Rational[1, 24] 5^Rational[1, 2])^Rational[1, 2]}, {
      Root[1 - 36 #^2 + 144 #^4& , 3, 0], 
       Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[1, 8] + 
        Rational[1, 24] 5^Rational[1, 2])^
       Rational[1, 2]}}, {{-0.5773502691896258, 
       0, -0.11026408970826791`}, {-0.2886751345948129, -0.5, 
      0.11026408970826791`}, {-0.2886751345948129, 0.5, 
      0.11026408970826791`}, {
      0.2886751345948129, -0.5, -0.11026408970826791`}, {0.2886751345948129, 
      0.5, -0.11026408970826791`}, {
      0.5773502691896258, 0, 0.11026408970826791`}, {-0.35682208977308993`, 0,
        0.46708617948135783`}, {
      0.3568220897730899, 
       0, -0.46708617948135783`}, {-0.17841104488654497`, \
-0.30901699437494745`, -0.46708617948135783`}, {-0.17841104488654497`, 
      0.30901699437494745`, -0.46708617948135783`}, {
      0.17841104488654497`, -0.30901699437494745`, 0.46708617948135783`}, {
      0.17841104488654497`, 0.30901699437494745`, 0.46708617948135783`}}], {{
    2, 12, 1, 11, 3}, {10, 4, 1, 8, 2}, {3, 8, 1, 5, 9}, {9, 11, 1, 4, 7}, {7,
     5, 1, 12, 10}, {7, 10, 2, 3, 9}, {4, 12, 2, 6, 7}, {9, 6, 2, 8, 11}, {7, 
    6, 3, 11, 5}, {12, 8, 3, 6, 10}, {9, 5, 4, 10, 6}, {8, 12, 4, 5, 11}}],
   Boxed->False,
   ImageSize->{378.0668182373047, 378.0668182373047},
   SphericalRegion->True,
   ViewAngle->0.295644141068997,
   ViewPoint->{3.188171720434298, -0.6665511468921883, 0.9172080732307795},
   ViewVertical->{0.3450724829489248, 0.19035271981956264`, 
    0.9190706303482661}], 
  Graphics3DBox[{
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7725717071083102665}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3099697829990839627}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {1., 0., 0.}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, \
-0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, \
-0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7384799146542528084}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, \
-0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, \
-0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2504157610077420883}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, -0.8090169943749475, -0.5}, \
{-2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7030803743148986959}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, -0.8090169943749475, -0.5}, \
{-2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3696400117158332320}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        0., -1.}, {-0.30901699437494745`, 
        0.8090169943749475, -0.5}, {-2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5760563623439180584}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3400909612424544775}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-1., 0., 
        0.}, {-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 909423212148207275}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        1.1102230246251565`*^-16}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, -0.5}, {2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1152841418713023366}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 
        1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, -0.5}, {2.7755575615628914`*^-17, 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5572698551581553452}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, -0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, -0.723606797749979}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, 0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, 0.447213595499958, -0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2469106720754215708}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.30901699437494745`, 0.8090169943749475, -0.5}, {
        2.7755575615628914`*^-17, 0.447213595499958, -0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0.30901699437494745`,
         0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7423354299668031806}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, 0.8090169943749475, 0.5}, {0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1192963151999714520}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {0.30901699437494745`, 
        0.8090169943749475, 0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2383028185848261832}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {-0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6998129269728092943}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {-0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5927371854023565898}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {0.8090169943749475, -0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5, 0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6350593025793443763}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., \
-1.618033988749895}, {-0.5, 0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {4, 3, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2719480631282831569}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1239266922339052497}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, 0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5253317175606637114}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {0.8090169943749475, 0.5, -0.3090169943749474}, {
        0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-0.5, -0.3090169943749474, -0.8090169943749475}, \
{0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5854569882227743884}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.1203373015704913`*^-17}, {-0.5, -0.3090169943749474, -0.8090169943749475}, \
{0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.8090169943749475, 
        0.5, -0.3090169943749474}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3595300196917742829}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {0.8090169943749475, 
        0.5, -0.3090169943749474}, {0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.5, -0.3090169943749474, \
-0.8090169943749475}, {0., -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {
         Polygon[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4540344340701542444}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.5, -0.3090169943749474, \
-0.8090169943749475}, {0., -0.447213595499958, -0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {3, 4, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {-0.447213595499958, 0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4927185341733282591}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {-0.447213595499958, 0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.30901699437494745`,
         0.8090169943749475, 0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 964237438301879695}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -1.1102230246251565`*^-16}, {-0.30901699437494745`,
         0.8090169943749475, 0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, -0.5, -0.3090169943749474}, \
{-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5198572099375627102}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, -0.5, -0.3090169943749474}, \
{-0.723606797749979, 0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1703566500546566082}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -2.1203373015704913`*^-17}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, \
{-0.8090169943749475, -0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4229145718243382345}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, \
{-0.8090169943749475, -0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4684807958437676984}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.1102230246251565`*^-16, -1., -1.618033988749895}, {0.5, 
        0.3090169943749474, -0.8090169943749475}, {0., 
        0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2747371297736322626}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5536436083996928625}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2307744487126381799}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 3.4307778215552914`*^-17, 
        1.}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -2.1203373015704913`*^-17}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3725236423971979523}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -2.1203373015704913`*^-17}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7915487153118907300}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.5, -0.3090169943749474}, {-0.723606797749979, 
        0., -0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2288055739197238873}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 
        1., -1.618033988749895}, {
        0.5, -0.3090169943749474, -0.8090169943749475}, {
        0., -0.447213595499958, -0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., 1.618033988749895}, {-0.8090169943749475, 
        0.5, 0.30901699437494745`}, {-0.447213595499958, 0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4891879937152613966}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5, 
        0.30901699437494745`}, {-0.447213595499958, 0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 0.5, 0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, 2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7947007423073850858}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, 0.5, 0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, 2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.30901699437494745`}, {
        0.44721359549995804`, 0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 375597730761781759}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, 0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.30901699437494745`}, {
        0.44721359549995804`, 0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -2.008412319093264*^-16, \
-1.}, {5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 136685800320512540}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -2.008412319093264*^-16, \
-1.}, {5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {0.8090169943749475, 
        0.5, 0.30901699437494745`}, {0.44721359549995804`, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2482999856081506833}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, 0.5, 0.30901699437494745`}, {0.44721359549995804`,
         0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9187205728824763496}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, -5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, 0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3123526907011421131}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5251429308033610721}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, -2.7755575615628914`*^-17, 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.008412319093264*^-16, 1., 
        1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3484258767031887754}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.008412319093264*^-16, 1., 
        1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4426433530179826640}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 
        1., -1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4911006698477115039}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {3, 1, 2}, {1, 4, 2}, {4, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1270147419437959466}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.5, -0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 865338478106105231}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1578782649316902958}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, -0.5, 
        0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, 
        2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, -0.5, 
        0.30901699437494745`}, {0.44721359549995804`, -0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3994446011295223306}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-3.4307778215552914`*^-17, -0.9999999999999999, 
        1.618033988749895}, {0.8090169943749475, -0.5, 
        0.30901699437494745`}, {0.44721359549995804`, -0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        2.008412319093264*^-16, -1.}, {5.551115123125783*^-17, 
        5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5585356480170468428}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        2.008412319093264*^-16, -1.}, {5.551115123125783*^-17, 
        5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.5, 0.30901699437494745`}, {
        0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8599957735422832472}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        0.8090169943749475, -0.5, 0.30901699437494745`}, {
        0.44721359549995804`, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, 5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5668346005045866185}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., -1.}, {
        5.551115123125783*^-17, 5.551115123125783*^-17, -1.}, {
        5.551115123125783*^-17, -0.447213595499958, -0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, 2.7755575615628914`*^-17, 0.447213595499958}, {0., 
        0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6579459224291538083}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0.723606797749979, 2.7755575615628914`*^-17, 0.447213595499958}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8216395655109637909}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.008412319093264*^-16, -1., 
        1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8914062877836388260}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.008412319093264*^-16, -1., 
        1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4905228996672301933}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6026387332195489507}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-5.551115123125783*^-17, -1., \
-5.551115123125783*^-17}, {
        0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 2}, {1, 3, 2}, {4, 1, 2}, {1, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5987940813858762911}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {0.5, 
        0.30901699437494745`, -0.8090169943749475}, {0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8407931431547591527}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8946386727549141518}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, -2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.008412319093264*^-16, 1., 1.618033988749895}, {
        5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1170873743388636396}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.008412319093264*^-16, 1., 
        1.618033988749895}, {5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 809044795558067790}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9999999999999999, -1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {
        5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4201543987207566786}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        5.551115123125783*^-17, 
        1., -5.551115123125783*^-17}, {-0.447213595499958, 
        0.723606797749979, -5.551115123125783*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 
        1., -1.618033988749895}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5679749814041914990}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-0.5, -0.30901699437494745`, \
-0.8090169943749475}, {-0.723606797749979, 0., -0.44721359549995804`}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, 2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3627212131221871580}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {-0.723606797749979, 2.7755575615628914`*^-17, 
        0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {-0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2806276539530466214}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {-0.723606797749979, 
        2.7755575615628914`*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.008412319093264*^-16, -1., 1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4107370308790500092}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.008412319093264*^-16, -1., 
        1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6001455227560654706}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9999999999999999, 1.618033988749895, 
        3.4307778215552914`*^-17}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {
         Polygon[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2123997603805736179}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        5.551115123125783*^-17, -1., -5.551115123125783*^-17}, \
{-0.447213595499958, -0.723606797749979, -5.551115123125783*^-17}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 3}, {1, 2, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3948613127218525405}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {-0.5, 
        0.30901699437494745`, -0.8090169943749475}, {-0.723606797749979, 
        0., -0.44721359549995804`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3370890015581325968}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7540545828587324338}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {0., 
        0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 
        0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5377635507649046395}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, 
        0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
        0.447213595499958, 0.723606797749979, -2.7755575615628914`*^-17}, {0.,
         0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2396165134964036448}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, 0.5, -0.30901699437494745`}, {
        0.447213595499958, 0.723606797749979, -2.7755575615628914`*^-17}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {-0.8090169943749475,
         0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4204952127965007561}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 
        1., -1.618033988749895}, {-0.8090169943749475, 
        0.5, -0.30901699437494745`}, {-0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 1., -1.618033988749895}, {0.8090169943749475, 
        0.5, -0.30901699437494745`}, {0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2068353763463451914}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 1., -1.618033988749895}, {
        0.8090169943749475, 0.5, -0.30901699437494745`}, {0.447213595499958, 
        0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {0., 0.447213595499958, 0.723606797749979}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4108268398164482715}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {-0.5, 0.30901699437494745`, 
        0.8090169943749475}, {0., 0.447213595499958, 0.723606797749979}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3468705311738621000}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {0.8090169943749475, -0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5051634933428849220}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {0.8090169943749475, -0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {3, 2, 4}, {1, 3, 4}, {3, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {0.3090169943749474, 
        0.8090169943749475, -0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7222599033771575309}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {0.3090169943749474, 
        0.8090169943749475, -0.5}, {0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, -0.5, 0.3090169943749474}, {0.723606797749979, 0.,
         0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 697246174166587235}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.8090169943749475, -0.5, 0.3090169943749474}, {0.723606797749979, 0.,
         0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, 0.8090169943749475, -0.5}, {0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5842041872224338466}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1.618033988749895, -1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, 0.8090169943749475, -0.5}, {0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 769282641680871670}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 892460323610397347}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {0., 0., 1.}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5, -0.30901699437494745`}, \
{-0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 
        0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1399427146321602050}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {-0.8090169943749475, -0.5, -0.30901699437494745`}, \
{-0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7211885080125469164}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 1.1102230246251565`*^-16, 
        1.}, {0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, -0.5, \
-0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, \
-2.7755575615628914`*^-17}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5961856039621793623}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0., -1., -1.618033988749895}, {-0.8090169943749475, -0.5, \
-0.30901699437494745`}, {-0.447213595499958, -0.723606797749979, \
-2.7755575615628914`*^-17}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5810564229885583439}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., -1., -1.618033988749895}, {
        0.8090169943749475, -0.5, -0.30901699437494745`}, {
        0.447213595499958, -0.723606797749979, -2.7755575615628914`*^-17}, {
        0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6338184168970600647}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {-0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5425841600412939062}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, 
        0.}, {-0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3410032200902826376}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {0.8090169943749475, 0.5, 0.3090169943749474}, {
        0.723606797749979, 0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 70159412281604191}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-3.4307778215552914`*^-17}, {0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 0.5, 
        0.3090169943749474}, {0.723606797749979, 0., 0.447213595499958}, {0., 
        0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2019903269246473379}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {0.8090169943749475, 0.5, 
        0.3090169943749474}, {0.723606797749979, 0., 0.447213595499958}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1157339164796451892}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {
        0.3090169943749474, -0.8090169943749475, -0.5}, {
        0.447213595499958, -0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5153411717236663970}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, -1., 
        1.618033988749895}, {0.5, 0.30901699437494745`, 0.8090169943749475}, {
        0., 0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1783805734071576874}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {0.5, 
        0.30901699437494745`, 0.8090169943749475}, {0., 0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4755356531850876153}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, -1., 
        1.618033988749895}, {-0.8090169943749475, -0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {-0.3090169943749474, 
        0.8090169943749475, -0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4275679446335789299}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 
        1.618033988749895, -3.4307778215552914`*^-17}, {-0.3090169943749474, 
        0.8090169943749475, -0.5}, {-0.447213595499958, 0.723606797749979, 
        0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5, 0.3090169943749474}, {-0.723606797749979, 
        0., 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1912229212964730525}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.8090169943749475, -0.5, 0.3090169943749474}, {-0.723606797749979, 
        0., 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.3090169943749474, 0.8090169943749475, -0.5}, {-0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3178448957827605156}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -1.1102230246251565`*^-16, \
-1.}, {-0.3090169943749474, 0.8090169943749475, -0.5}, {-0.447213595499958, 
        0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5000308928106339467}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.1102230246251565`*^-16, 1., 
        1.618033988749895}, {0.5, -0.30901699437494745`, 
        0.8090169943749475}, {0., -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7402658431896399336}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., -1.618033988749895, 0.}, {
        0.5, -0.30901699437494745`, 0.8090169943749475}, {
        0., -0.447213595499958, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4900938751132894984}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-2.1203373015704913`*^-17, 1., 
        1.618033988749895}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -3.4307778215552914`*^-17}, \
{-0.3090169943749474, -0.8090169943749475, -0.5}, {-0.447213595499958, \
-0.723606797749979, 0.}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 763187035966901351}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -3.4307778215552914`*^-17}, \
{-0.3090169943749474, -0.8090169943749475, -0.5}, {-0.447213595499958, \
-0.723606797749979, 0.}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7169393268654534981}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.8090169943749475, 0.5, 
        0.3090169943749474}, {-0.723606797749979, 0., 0.447213595499958}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.3090169943749474, \
-0.8090169943749475, -0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0.,
         0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8245141816509502021}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 
        1.1102230246251565`*^-16, -1.}, {-0.3090169943749474, \
-0.8090169943749475, -0.5}, {-0.447213595499958, -0.723606797749979, 0.}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1664283318430008761}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, 0., 
        1.}, {-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7746316109542984923}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -1.1102230246251565`*^-16}, \
{-0.30901699437494745`, -0.8090169943749475, 
        0.5}, {-2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1331746796737078715}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {-0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        1., -1.618033988749895, -2.008412319093264*^-16}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1338642046882831412}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        1., -1.618033988749895, -2.008412319093264*^-16}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 
        0.}, {-0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7731581040057856866}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 
        0.}, {-0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1., 1.618033988749895, 0.}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3709544703365527037}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1., 1.618033988749895, 0.}, {1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {0.723606797749979, 
        5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {
         Polygon[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8197031594176900995}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, 0., 1.}, {
        0.30901699437494745`, -0.8090169943749475, 0.5}, {
        2.7755575615628914`*^-17, -0.447213595499958, 0.723606797749979}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {3, 1, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2255586471729023343}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-1.1102230246251565`*^-16}, {0.30901699437494745`, -0.8090169943749475, 
        0.5}, {2.7755575615628914`*^-17, -0.447213595499958, 
        0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8143348323602510541}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{1.618033988749895, -3.4307778215552914`*^-17, 
        0.9999999999999999}, {0.30901699437494745`, 0.8090169943749475, 
        0.5}, {0., 0.44721359549995804`, 0.723606797749979}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., -1.618033988749895, \
-2.008412319093264*^-16}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2123538805552349849}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., -1.618033988749895, \
-2.008412319093264*^-16}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {
        0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {
         Polygon[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4806054868527704468}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {
        0.30901699437494745`, 0.8090169943749475, 0.5}, {0., 
        0.44721359549995804`, 0.723606797749979}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 4, 1}, {3, 2, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-1., 1.618033988749895, 0.}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8121066530943621706}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-1., 1.618033988749895, 0.}, {-1., 
        5.551115123125783*^-17, -5.551115123125783*^-17}, {-0.723606797749979,
         5.551115123125783*^-17, 0.447213595499958}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]},
   Boxed->False,
   ImageSize->{357.663564167329, 362.8563903833252},
   ImageSizeRaw->Automatic,
   SphericalRegion->True,
   ViewAngle->0.34178344104084896`,
   ViewPoint->{-2.411675962286245, -0.1613742231656167, -2.3680746215076094`},
   
   ViewVertical->{-0.3842710279993843, 
    0.7723022288475758, -0.5058508123521829}]}]], "Input",
 CellChangeTimes->{{3.90448088177512*^9, 
  3.90448088178896*^9}},ExpressionUUID->"19b28ee4-de83-4aed-bdd0-\
ec3d46151cc1"],

Cell["\<\


And here\[CloseCurlyQuote]s the gentle reminder that all this wasn\
\[CloseCurlyQuote]t as straightforward as it may seem\
\>", "Text",
 CellChangeTimes->{{3.9040802747507563`*^9, 3.9040803000931807`*^9}, {
  3.90408039661371*^9, 3.904080398217766*^9}, {3.904479204187748*^9, 
  3.904479208659257*^9}, {3.904480889936534*^9, 
  3.904480940244486*^9}},ExpressionUUID->"753b8be4-d89b-4cb9-ab0d-\
3fcd536c9965"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.85065080835204, 0., 0.42532540417601994`}, {
        0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
        0., 0., -0.9510565162951536}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8472807015595849916}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.85065080835204, 0., 0.42532540417601994`}, {
        0.21266270208800997`, -0.6545084971874737, -0.42532540417601994`}, {
        0., 0., -0.9510565162951536}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6881909602355868, -0.5000000000000002, 
        0.42532540417601994`}, {
        0.21266270208801016`, -0.6545084971874737, -0.42532540417601994`}, {
        0., 0., -0.9510565162951536}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9090046047480551528}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6881909602355868, -0.5000000000000002, 
        0.42532540417601994`}, {
        0.21266270208801016`, -0.6545084971874737, -0.42532540417601994`}, {
        0., 0., -0.9510565162951536}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6881909602355867, -0.33964254340907185`, 
        0.5617336042503704}, {
        0.4755282581475769, -0.10495531792613388`, -0.6460385082405149}, \
{-0.26286555605956696`, -0.54955317926134, -0.7303434122306594}, {0., 0., 
        0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4653756343060105710}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6881909602355867, -0.33964254340907185`, 
        0.5617336042503704}, {
        0.4755282581475769, -0.10495531792613388`, -0.6460385082405149}, \
{-0.26286555605956696`, -0.54955317926134, -0.7303434122306594}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.3571213041388445, -0.6792850868181438, 
        0.5617336042503704}, {-0.32301925412025745`, -0.36441913303974177`, \
-0.6460385082405149}, {
        0.5356819562082676, -0.2900893641477321, -0.7303434122306594}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2822473194616756513}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.3571213041388445, -0.6792850868181438, 
        0.5617336042503704}, {-0.32301925412025745`, -0.36441913303974177`, \
-0.6460385082405149}, {
        0.5356819562082676, -0.2900893641477321, -0.7303434122306594}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{4.85722573273506*^-16, 
        0.9387489019317519, -0.1525090040273197}, {
        0.47552825814757704`, -0.104955317926134, -0.6460385082405148}, \
{-0.26286555605956696`, -0.54955317926134, -0.7303434122306594}, {0., 0., 
        0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 926211280658966383}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{4.85722573273506*^-16, 
        0.9387489019317519, -0.1525090040273197}, {
        0.47552825814757704`, -0.104955317926134, -0.6460385082405148}, \
{-0.26286555605956696`, -0.54955317926134, -0.7303434122306594}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.5517827601612375, 
        0.7594638151136079, -0.1525090040273197}, {-0.32301925412025745`, \
-0.36441913303974194`, -0.6460385082405148}, {
        0.5356819562082676, -0.2900893641477321, -0.7303434122306594}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8586369569107165835}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.5517827601612375, 
        0.7594638151136079, -0.1525090040273197}, {-0.32301925412025745`, \
-0.36441913303974194`, -0.6460385082405148}, {
        0.5356819562082676, -0.2900893641477321, -0.7303434122306594}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6881909602355869, 0.5, -0.42532540417602005`}, {
        0.21266270208801002`, -0.6545084971874737, -0.42532540417601994`}, {
        0.26286555605956685`, -0.8090169943749476, 0.42532540417602027`}, {0.,
         0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5817641259671242785}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6881909602355869, 
        0.5, -0.42532540417602005`}, {
        0.21266270208801002`, -0.6545084971874737, -0.42532540417601994`}, {
        0.26286555605956685`, -0.8090169943749476, 0.42532540417602027`}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.8506508083520401, -5.551115123125783*^-17, \
-0.4253254041760204}, {
        0.2126627020880102, -0.6545084971874738, -0.42532540417602}, {
        0.26286555605956685`, -0.8090169943749476, 0.42532540417602027`}, {0.,
         0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8802679403623029600}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.8506508083520401, -5.551115123125783*^-17, \
-0.4253254041760204}, {
        0.2126627020880102, -0.6545084971874738, -0.42532540417602}, {
        0.26286555605956685`, -0.8090169943749476, 0.42532540417602027`}, {0.,
         0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.4414262081289892, 
        0.419821271704536, -0.7303434122306592}, {
        0.6119364582219272, -0.5247765896306702, 
        0.0682041000371755}, {-0.1364082000743503, -0.9387489019317516, \
-0.06820410003717503}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3494565480228281770}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.4414262081289892, 
        0.419821271704536, -0.7303434122306592}, {
        0.6119364582219272, -0.5247765896306702, 
        0.0682041000371755}, {-0.1364082000743503, -0.9387489019317516, \
-0.06820410003717503}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6038860562454422, 
        0.08017872829546424, -0.7303434122306596}, {-0.18661105404590722`, \
-0.7842404047442779, 0.06820410003717535}, {
        0.6621393121934843, -0.6792850868181439, -0.06820410003717492}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5000588522932473248}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6038860562454422, 
        0.08017872829546424, -0.7303434122306596}, {-0.18661105404590722`, \
-0.7842404047442779, 0.06820410003717535}, {
        0.6621393121934843, -0.6792850868181439, -0.06820410003717492}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.19466145602239224`, 0.33964254340907196`, 
        0.8667516123050097}, {0.6119364582219274, -0.5247765896306701, 
        0.06820410003717531}, {-0.1364082000743503, -0.9387489019317516, \
-0.06820410003717503}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1254763929219709086}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.19466145602239224`, 0.33964254340907196`, 
        0.8667516123050097}, {0.6119364582219274, -0.5247765896306701, 
        0.06820410003717531}, {-0.1364082000743503, -0.9387489019317516, \
-0.06820410003717503}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.3571213041388458, 0.16035745659092804`, 
        0.8667516123050099}, {-0.18661105404590728`, -0.7842404047442779, 
        0.06820410003717513}, {
        0.6621393121934843, -0.6792850868181439, -0.06820410003717492}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6814429078403960999}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.3571213041388458, 0.16035745659092804`, 
        0.8667516123050099}, {-0.18661105404590728`, -0.7842404047442779, 
        0.06820410003717513}, {
        0.6621393121934843, -0.6792850868181439, -0.06820410003717492}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-5.551115123125783*^-17, -0.9387489019317521, 
        0.1525090040273195}, {
        0.4755282581475769, -0.10495531792613383`, -0.6460385082405147}, {
        0.8506508083520402, 0.4198212717045366, -0.06820410003717499}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9087260724379391503}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-5.551115123125783*^-17, -0.9387489019317521, 
        0.1525090040273195}, {
        0.4755282581475769, -0.10495531792613383`, -0.6460385082405147}, {
        0.8506508083520402, 0.4198212717045366, -0.06820410003717499}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6881909602355867, 
        0.3396425434090719, -0.5617336042503707}, {
        0.47552825814757693`, -0.10495531792613398`, -0.6460385082405147}, {
        0.8506508083520402, 0.4198212717045366, -0.06820410003717499}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3730173578859417273}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6881909602355867, 
        0.3396425434090719, -0.5617336042503707}, {
        0.47552825814757693`, -0.10495531792613398`, -0.6460385082405147}, {
        0.8506508083520402, 0.4198212717045366, -0.06820410003717499}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.19466145602239204`, -0.9099992014049108, \
-0.19625714807145822`}, {
        0.7904971102913498, -0.15147331054494362`, -0.08172302001917689}, {
        0.5356819562082679, 0.4663392643233467, -0.632519588258513}, {0., 0., 
        0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9061142098797227861}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.19466145602239204`, -0.9099992014049108, \
-0.19625714807145822`}, {
        0.7904971102913498, -0.15147331054494362`, -0.08172302001917689}, {
        0.5356819562082679, 0.4663392643233467, -0.632519588258513}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6621393121934839, -0.04160695746899766, \
-0.6814315002445863}, {0.4333758061525049, 
        0.511919332688515, -0.45236324414002405`}, {
        0.8928032603471129, -0.19705337891011218`, -0.2618793641376658}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5301889695536461664}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6621393121934839, -0.04160695746899766, \
-0.6814315002445863}, {0.4333758061525049, 
        0.511919332688515, -0.45236324414002405`}, {
        0.8928032603471129, -0.19705337891011218`, -0.2618793641376658}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.1364082000743506, 0.21785685764461063`, 
        0.9156635242910833}, {
        0.7904971102913498, -0.1514733105449438, -0.08172302001917696}, {
        0.5356819562082679, 0.4663392643233467, -0.632519588258513}, {0., 0., 
        0.}}, {
         Polygon[{{3, 2, 4}, {2, 1, 4}, {1, 3, 4}, {3, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2453447993510200000}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.1364082000743506, 0.21785685764461063`, 
        0.9156635242910833}, {
        0.7904971102913498, -0.1514733105449438, -0.08172302001917696}, {
        0.5356819562082679, 0.4663392643233467, -0.632519588258513}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 4}, {2, 1, 4}, {1, 3, 4}, {3, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.11035655203224756`, 0.6762499001756151, 
        0.659557428222517}, {0.4333758061525048, 
        0.511919332688515, -0.4523632441400242}, {
        0.8928032603471129, -0.19705337891011218`, -0.2618793641376658}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8884088936593134051}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.11035655203224756`, 0.6762499001756151, 
        0.659557428222517}, {0.4333758061525048, 
        0.511919332688515, -0.4523632441400242}, {
        0.8928032603471129, -0.19705337891011218`, -0.2618793641376658}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5517827601612373, -0.7594638151136083, 
        0.1525090040273195}, {-0.32301925412025745`, -0.3644191330397417, \
-0.6460385082405147}, {-0.934955712342185, -0.16035745659092798`, \
-0.06820410003717499}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 546785493997272276}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5517827601612373, -0.7594638151136083, 
        0.1525090040273195}, {-0.32301925412025745`, -0.3644191330397417, \
-0.6460385082405147}, {-0.934955712342185, -0.16035745659092798`, \
-0.06820410003717499}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.3571213041388447, 
        0.6792850868181438, -0.5617336042503707}, {-0.3230192541202574, \
-0.36441913303974194`, -0.6460385082405147}, {-0.934955712342185, \
-0.16035745659092798`, -0.06820410003717499}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8850102042745490740}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.3571213041388447, 
        0.6792850868181438, -0.5617336042503707}, {-0.3230192541202574, \
-0.36441913303974194`, -0.6460385082405147}, {-0.934955712342185, \
-0.16035745659092798`, -0.06820410003717499}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.6923685362556214, -0.6217856857644615, -0.19625714807145822`}, \
{-0.5504918181757533, -0.5871870258341656, -0.08172302001917689}, \
{-0.7074831482866898, 0.062410436203495734`, -0.632519588258513}, {0., 0., 
        0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4246731910332691134}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.6923685362556214, -0.6217856857644615, -0.19625714807145822`}, \
{-0.5504918181757533, -0.5871870258341656, -0.08172302001917689}, \
{-0.7074831482866898, 0.062410436203495734`, -0.632519588258513}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5601379122013044, 
        0.355534986993757, -0.6814315002445863}, {-0.6515070262460328, 
        0.15941953233728703`, -0.45236324414002405`}, {-0.6064679402164103, \
-0.6841961219679571, -0.2618793641376658}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2688341060708875129}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5601379122013044, 
        0.355534986993757, -0.6814315002445863}, {-0.6515070262460328, 
        0.15941953233728703`, -0.45236324414002405`}, {-0.6064679402164103, \
-0.6841961219679571, -0.2618793641376658}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.2384096000665305, 0.09607117188014935, 
        0.9156635242910833}, {-0.5504918181757531, -0.5871870258341657, \
-0.08172302001917696}, {-0.7074831482866898, 
        0.062410436203495734`, -0.632519588258513}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {1, 4, 3}, {2, 1, 3}, {1, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9189524591067113609}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.2384096000665305, 0.09607117188014935, 
        0.9156635242910833}, {-0.5504918181757531, -0.5871870258341657, \
-0.08172302001917696}, {-0.7074831482866898, 
        0.062410436203495734`, -0.632519588258513}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {1, 4, 3}, {2, 1, 3}, {1, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.3082093921527725, 0.6119636154648366, 
        0.659557428222517}, {-0.6515070262460326, 
        0.159419532337287, -0.4523632441400242}, {-0.6064679402164103, \
-0.6841961219679571, -0.2618793641376658}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2196652905423556844}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.3082093921527725, 0.6119636154648366, 
        0.659557428222517}, {-0.6515070262460326, 
        0.159419532337287, -0.4523632441400242}, {-0.6064679402164103, \
-0.6841961219679571, -0.2618793641376658}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.19466145602239185`, -0.3396425434090722, \
-0.8667516123050099}, {0.6119364582219273, -0.52477658963067, 
        0.06820410003717549}, {0.8928032603471125, 0.29008936414773245`, 
        0.15250900402732004`}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3153434925908765703}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.19466145602239185`, -0.3396425434090722, \
-0.8667516123050099}, {0.6119364582219273, -0.52477658963067, 
        0.06820410003717549}, {0.8928032603471125, 0.29008936414773245`, 
        0.15250900402732004`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.44142620812898925`, -0.4198212717045362, 
        0.7303434122306592}, {0.6119364582219273, -0.5247765896306701, 
        0.06820410003717532}, {0.8928032603471125, 0.29008936414773245`, 
        0.15250900402732004`}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2965808979637212170}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.44142620812898925`, -0.4198212717045362, 
        0.7303434122306592}, {0.6119364582219273, -0.5247765896306701, 
        0.06820410003717532}, {0.8928032603471125, 0.29008936414773245`, 
        0.15250900402732004`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.2779801680906355, -0.6535705729338328, \
-0.6325195882585131}, {
        0.7467489662472114, -0.01683036783832681, -0.3107912761237389}, {
        0.757990752321829, -0.21785685764461063`, 0.5315043801882346}, {0., 
        0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5802380224310156735}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.2779801680906355, -0.6535705729338328, \
-0.6325195882585131}, {
        0.7467489662472114, -0.01683036783832681, -0.3107912761237389}, {
        0.757990752321829, -0.21785685764461063`, 0.5315043801882346}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.44560378414902313`, -0.7080347873449856, 
        0.4523632441400237}, {0.6186959182129286, -0.05843732530732383, 
        0.5179854602062326}, {
        0.886043800356112, -0.17624990017561362`, -0.2972723561417371}, {0., 
        0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 869406456218686574}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.44560378414902313`, -0.7080347873449856, 
        0.4523632441400237}, {0.6186959182129286, -0.05843732530732383, 
        0.5179854602062326}, {
        0.886043800356112, -0.17624990017561362`, -0.2972723561417371}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.08848248001017797, 
        0.9099992014049109, -0.2618793641376667}, {
        0.7467489662472114, -0.01683036783832699, -0.310791276123739}, {
        0.757990752321829, -0.21785685764461063`, 0.5315043801882346}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6496219553459258354}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.08848248001017797, 
        0.9099992014049109, -0.2618793641376667}, {
        0.7467489662472114, -0.01683036783832699, -0.310791276123739}, {
        0.757990752321829, -0.21785685764461063`, 0.5315043801882346}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.17696496002035622`, 0.8812495008780697, 
        0.3107912761237399}, {0.6186959182129286, -0.05843732530732397, 
        0.5179854602062326}, {
        0.886043800356112, -0.17624990017561362`, -0.2972723561417371}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 904934416414508010}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.17696496002035622`, 0.8812495008780697, 
        0.3107912761237399}, {0.6186959182129286, -0.05843732530732397, 
        0.5179854602062326}, {
        0.886043800356112, -0.17624990017561362`, -0.2972723561417371}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.35712130413884563`, -0.16035745659092843`, -0.8667516123050101}, \
{-0.18661105404590722`, -0.7842404047442777, 
        0.0682041000371753}, {-0.892803260347113, -0.2900893641477319, 
        0.1525090040273198}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5206466591524689909}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.35712130413884563`, -0.16035745659092843`, -0.8667516123050101}, \
{-0.18661105404590722`, -0.7842404047442777, 
        0.0682041000371753}, {-0.892803260347113, -0.2900893641477319, 
        0.1525090040273198}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6038860562454424, -0.08017872829546444, 
        0.7303434122306597}, {-0.18661105404590725`, -0.7842404047442778, 
        0.0682041000371751}, {-0.892803260347113, -0.2900893641477319, 
        0.1525090040273198}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3814743099769238112}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6038860562454424, -0.08017872829546444, 
        0.7303434122306597}, {-0.18661105404590725`, -0.7842404047442778, 
        0.0682041000371751}, {-0.892803260347113, -0.2900893641477319, 
        0.1525090040273198}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.6090498241873781, -0.3653570572933835, -0.6325195882585132}, \
{-0.594239962219892, -0.45254408312754857`, -0.31079127612373925`}, \
{-0.4851743521731289, -0.6217856857644615, 0.5315043801882344}, {0., 0., 
        0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1426060691968491181}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.6090498241873781, -0.3653570572933835, -0.6325195882585132}, \
{-0.594239962219892, -0.45254408312754857`, -0.31079127612373925`}, \
{-0.4851743521731289, -0.6217856857644615, 0.5315043801882344}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.7766734402457653, -0.31089284288223107`, 
        0.4523632441400238}, {-0.4661869141856094, -0.41093712565855167`, 
        0.5179854602062325}, {-0.6132274002074114, -0.6633926432334584, \
-0.2972723561417374}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1430041293666508176}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.7766734402457653, -0.31089284288223107`, 
        0.4523632441400238}, {-0.4661869141856094, -0.41093712565855167`, 
        0.5179854602062325}, {-0.6132274002074114, -0.6633926432334584, \
-0.2972723561417374}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.463300280151059, 
        0.7882135156404497, -0.26187936413766666`}, {-0.594239962219892, \
-0.4525440831275487, -0.31079127612373936`}, {-0.4851743521731289, \
-0.6217856857644615, 0.5315043801882344}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 123693738515982071}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.463300280151059, 
        0.7882135156404497, -0.26187936413766666`}, {-0.594239962219892, \
-0.4525440831275487, -0.31079127612373936`}, {-0.4851743521731289, \
-0.6217856857644615, 0.5315043801882344}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.3748178001408811, 0.8169632161672911, 
        0.31079127612374013`}, {-0.46618691418560937`, -0.41093712565855184`, 
        0.5179854602062325}, {-0.6132274002074114, -0.6633926432334584, \
-0.2972723561417374}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1346359094668056037}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.3748178001408811, 0.8169632161672911, 
        0.31079127612374013`}, {-0.46618691418560937`, -0.41093712565855184`, 
        0.5179854602062325}, {-0.6132274002074114, -0.6633926432334584, \
-0.2972723561417374}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.13640820007435028`, -0.21785685764461094`, \
-0.9156635242910836}, {
        0.7904971102913498, -0.1514733105449437, -0.0817230200191767}, {
        0.4414262081289892, -0.6535705729338326, 0.5315043801882346}, {0., 0.,
         0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1104183539279029060}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.13640820007435028`, -0.21785685764461094`, \
-0.9156635242910836}, {
        0.7904971102913498, -0.1514733105449437, -0.0817230200191767}, {
        0.4414262081289892, -0.6535705729338326, 0.5315043801882346}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.19466145602239232`, 0.9099992014049109, 
        0.19625714807145822`}, {
        0.7904971102913498, -0.15147331054494384`, -0.08172302001917692}, {
        0.4414262081289892, -0.6535705729338326, 0.5315043801882346}, {0., 0.,
         0.}}, {
         Polygon[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 434547166566895171}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.19466145602239232`, 0.9099992014049109, 
        0.19625714807145822`}, {
        0.7904971102913498, -0.15147331054494384`, -0.08172302001917692}, {
        0.4414262081289892, -0.6535705729338326, 0.5315043801882346}, {0., 0.,
         0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 4}, {2, 3, 4}, {3, 1, 4}, {1, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.08848248001017822, 
        0.11256522805599117`, -0.9402172181743043}, {
        0.4266163461615037, -0.6861074758421484, -0.04199430876676524}, {
        0.8053069722588357, -0.11893640763662816`, 0.4917756689358236}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 4}, {3, 1, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8168679121076925453}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.08848248001017822, 
        0.11256522805599117`, -0.9402172181743043}, {
        0.4266163461615037, -0.6861074758421484, -0.04199430876676524}, {
        0.8053069722588357, -0.11893640763662816`, 0.4917756689358236}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 4}, {3, 1, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.313373160094707, 
        0.8787010290458146, -0.18490608771362682`}, {
        0.5984175382399255, -0.10083180388217367`, 0.5350120507429807}, {
        0.633505780180414, -0.7042120795966031, -0.08523069057392268}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5862588750614698469}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.313373160094707, 
        0.8787010290458146, -0.18490608771362682`}, {
        0.5984175382399255, -0.10083180388217367`, 0.5350120507429807}, {
        0.633505780180414, -0.7042120795966031, -0.08523069057392268}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {3, 2, 4}, {2, 1, 4}, {1, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.7579907523218293, -0.4896912148901006, 
        0.3002682644595015}, {
        0.42661634616150373`, -0.6861074758421484, -0.041994308766765465`}, {
        0.8053069722588357, -0.11893640763662816`, 0.4917756689358236}, {0., 
        0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3979409331024339116}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.7579907523218293, -0.4896912148901006, 
        0.3002682644595015}, {
        0.42661634616150373`, -0.6861074758421484, -0.041994308766765465`}, {
        0.8053069722588357, -0.11893640763662816`, 0.4917756689358236}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6392790482495143, -0.08527567195997404, 
        0.6989698530183164}, {0.5984175382399256, -0.10083180388217344`, 
        0.5350120507429806}, {
        0.633505780180414, -0.7042120795966031, -0.08523069057392268}, {0., 
        0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 405119492494916633}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6392790482495143, -0.08527567195997404, 
        0.6989698530183164}, {0.5984175382399256, -0.10083180388217344`, 
        0.5350120507429806}, {
        0.633505780180414, -0.7042120795966031, -0.08523069057392268}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.11035655203224762`, -0.6762499001756149, -0.6595574282225174}, {
        0.4333758061525048, 
        0.511919332688515, -0.45236324414002405`}, {-0.35712130413884524`, 
        0.8298204731094471, -0.2972723561417371}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6997624973269792331}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.11035655203224762`, -0.6762499001756149, -0.6595574282225174}, {
        0.4333758061525048, 
        0.511919332688515, -0.45236324414002405`}, {-0.35712130413884524`, 
        0.8298204731094471, -0.2972723561417371}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6621393121934843, 0.04160695746899751, 
        0.6814315002445864}, {0.4333758061525048, 
        0.5119193326885149, -0.4523632441400242}, {-0.35712130413884524`, 
        0.8298204731094471, -0.2972723561417371}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9160336463643909196}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6621393121934843, 0.04160695746899751, 
        0.6814315002445864}, {0.4333758061525048, 
        0.5119193326885149, -0.4523632441400242}, {-0.35712130413884524`, 
        0.8298204731094471, -0.2972723561417371}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.48517435217312843`, -0.6243341575967172, -0.5285084718704697}, \
{-0.17309213406390545`, 0.42791789664466817`, -0.6644049097078386}, {
        0.24934663607756485`, 0.9138219091532944, -0.08523069057392268}, {0., 
        0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5384360661635684263}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.48517435217312843`, -0.6243341575967172, -0.5285084718704697}, \
{-0.17309213406390545`, 0.42791789664466817`, -0.6644049097078386}, {
        0.24934663607756485`, 0.9138219091532944, -0.08523069057392268}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.859992152314009, -0.13670469972859706`, 
        0.3824053088254759}, {0.11324318606679717`, 0.8004336546245425, 
        0.03147129710252855}, {-0.036988684053137794`, 
        0.5413061511734201, -0.7811068973842901}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 530876748543483443}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.859992152314009, -0.13670469972859706`, 
        0.3824053088254759}, {0.11324318606679717`, 0.8004336546245425, 
        0.03147129710252855}, {-0.036988684053137794`, 
        0.5413061511734201, -0.7811068973842901}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9256143683802172, -0.17831165719759456`, 
        0.12629921275690958`}, {-0.17309213406390528`, 
        0.42791789664466817`, -0.6644049097078388}, {0.24934663607756485`, 
        0.9138219091532944, -0.08523069057392268}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 428541819674233494}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9256143683802172, -0.17831165719759456`, 
        0.12629921275690958`}, {-0.17309213406390528`, 
        0.42791789664466817`, -0.6644049097078388}, {0.24934663607756485`, 
        0.9138219091532944, -0.08523069057392268}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.7277615282596925, 0.07909040089403419, 
        0.6071378456816989}, {0.1132431860667974, 0.8004336546245425, 
        0.03147129710252855}, {-0.036988684053137794`, 
        0.5413061511734201, -0.7811068973842901}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3162765500901936961}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.7277615282596925, 0.07909040089403419, 
        0.6071378456816989}, {0.1132431860667974, 0.8004336546245425, 
        0.03147129710252855}, {-0.036988684053137794`, 
        0.5413061511734201, -0.7811068973842901}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {2, 3, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.23840960006653042`, -0.09607117188014991, -0.9156635242910836}, \
{-0.5504918181757532, -0.5871870258341656, -0.0817230200191767}, {
        0.02703783996400432, -0.7882135156404493, 0.5315043801882346}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4979079074405257992}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.23840960006653042`, -0.09607117188014991, -0.9156635242910836}, \
{-0.5504918181757532, -0.5871870258341656, -0.0817230200191767}, {
        0.02703783996400432, -0.7882135156404493, 0.5315043801882346}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6923685362556217, 0.6217856857644614, 
        0.19625714807145822`}, {-0.5504918181757532, -0.5871870258341656, \
-0.08172302001917692}, {0.02703783996400432, -0.7882135156404493, 
        0.5315043801882346}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3486143482638053628}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6923685362556217, 0.6217856857644614, 
        0.19625714807145822`}, {-0.5504918181757532, -0.5871870258341656, \
-0.08172302001917692}, {0.02703783996400432, -0.7882135156404493, 
        0.5315043801882346}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.1377480110049263, 
        0.039058485636742135`, -0.9402172181743043}, {
        0.05814398166482741, -0.8058314045846293, -0.04199430876676524}, \
{-0.5815979598765765, -0.569569136889986, 0.4917756689358236}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7964310891336919037}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.1377480110049263, 
        0.039058485636742135`, -0.9402172181743043}, {
        0.05814398166482741, -0.8058314045846293, -0.04199430876676524}, \
{-0.5815979598765765, -0.569569136889986, 0.4917756689358236}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.7700117181449491, 
        0.5266879435048614, -0.18490608771362682`}, {-0.4248625108841311, \
-0.43331564660475563`, 
        0.5350120507429807}, {-0.09859146732761795, -0.9420848948698599, \
-0.08523069057392268}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8790053358267788162}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.7700117181449491, 
        0.5266879435048614, -0.18490608771362682`}, {-0.4248625108841311, \
-0.43331564660475563`, 
        0.5350120507429807}, {-0.09859146732761795, -0.9420848948698599, \
-0.08523069057392268}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {2, 4, 1}, {3, 2, 1}, {2, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.9010606744969971, 0.04936727074664246, 
        0.3002682644595015}, {
        0.05814398166482737, -0.8058314045846293, -0.041994308766765465`}, \
{-0.5815979598765765, -0.569569136889986, 0.4917756689358236}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3807749928415389355}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.9010606744969971, 0.04936727074664246, 
        0.3002682644595015}, {
        0.05814398166482737, -0.8058314045846293, -0.041994308766765465`}, \
{-0.5815979598765765, -0.569569136889986, 0.4917756689358236}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5673113965391027, 0.30676932883827085`, 
        0.6989698530183164}, {-0.42486251088413124`, -0.4333156466047556, 
        0.5350120507429806}, {-0.09859146732761795, -0.9420848948698599, \
-0.08523069057392268}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4254908588743887268}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5673113965391027, 0.30676932883827085`, 
        0.6989698530183164}, {-0.42486251088413124`, -0.4333156466047556, 
        0.5350120507429806}, {-0.09859146732761795, -0.9420848948698599, \
-0.08523069057392268}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.3082093921527723, -0.6119636154648362, -0.6595574282225174}, \
{-0.6515070262460326, 
        0.159419532337287, -0.45236324414002405`}, {-0.19883903204242587`, 
        0.8812495008780699, -0.2972723561417371}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 386749474610370686}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.3082093921527723, -0.6119636154648362, -0.6595574282225174}, \
{-0.6515070262460326, 
        0.159419532337287, -0.45236324414002405`}, {-0.19883903204242587`, 
        0.8812495008780699, -0.2972723561417371}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.5601379122013046, -0.35553498699375724`, 
        0.6814315002445864}, {-0.6515070262460325, 
        0.15941953233728695`, -0.4523632441400242}, {-0.19883903204242587`, 
        0.8812495008780699, -0.2972723561417371}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 2}, {4, 1, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4899575266043812632}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.5601379122013046, -0.35553498699375724`, 
        0.6814315002445864}, {-0.6515070262460325, 
        0.15941953233728695`, -0.4523632441400242}, {-0.19883903204242587`, 
        0.8812495008780699, -0.2972723561417371}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 2}, {4, 1, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.0255398858051214, -0.7902752726624305, \
-0.5285084718704697}, {-0.1114893507894246, 
        0.447933854273314, -0.6644049097078386}, {-0.7388567074990341, 
        0.5927351789420435, -0.08523069057392268}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3726259341144506395}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.0255398858051214, -0.7902752726624305, \
-0.5285084718704697}, {-0.1114893507894246, 
        0.447933854273314, -0.6644049097078386}, {-0.7388567074990341, 
        0.5927351789420435, -0.08523069057392268}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {4, 2, 3}, {2, 1, 3}, {1, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6153952598315814, -0.6160871295087962, 
        0.3824053088254759}, {-0.5620987596520763, 0.5810017547682261, 
        0.03147129710252855}, {-0.2882472986363823, 
        0.4596672784471313, -0.7811068973842901}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1465347294280686009}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6153952598315814, -0.6160871295087962, 
        0.3824053088254759}, {-0.5620987596520763, 0.5810017547682261, 
        0.03147129710252855}, {-0.2882472986363823, 
        0.4596672784471313, -0.7811068973842901}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.8536467166698058, 0.3998053140758904, 
        0.12629921275690958`}, {-0.11148935078942462`, 
        0.44793385427331395`, -0.6644049097078388}, {-0.7388567074990341, 
        0.5927351789420435, -0.08523069057392268}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9017973066886670090}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.8536467166698058, 0.3998053140758904, 
        0.12629921275690958`}, {-0.11148935078942462`, 
        0.44793385427331395`, -0.6644049097078388}, {-0.7388567074990341, 
        0.5927351789420435, -0.08523069057392268}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5422832729709619, 0.49175297191208045`, 
        0.6071378456816989}, {-0.5620987596520766, 0.5810017547682261, 
        0.03147129710252855}, {-0.2882472986363823, 
        0.4596672784471313, -0.7811068973842901}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 275782282371795704}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5422832729709619, 0.49175297191208045`, 
        0.6071378456816989}, {-0.5620987596520766, 0.5810017547682261, 
        0.03147129710252855}, {-0.2882472986363823, 
        0.4596672784471313, -0.7811068973842901}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.17696496002035644`, -0.8812495008780701, -0.31079127612373963`}, {
        0.6186959182129285, -0.05843732530732386, 
        0.5179854602062326}, {-0.12129358804328225`, 0.10401739367249288`, 
        0.9375375963131529}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2751580188875804987}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.17696496002035644`, -0.8812495008780701, -0.31079127612373963`}, {
        0.6186959182129285, -0.05843732530732386, 
        0.5179854602062326}, {-0.12129358804328225`, 0.10401739367249288`, 
        0.9375375963131529}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.4456037841490234, 
        0.7080347873449858, -0.452363244140024}, {
        0.6186959182129285, -0.05843732530732405, 
        0.5179854602062326}, {-0.12129358804328225`, 0.10401739367249288`, 
        0.9375375963131529}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2640909606934545822}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.4456037841490234, 
        0.7080347873449858, -0.452363244140024}, {
        0.6186959182129285, -0.05843732530732405, 
        0.5179854602062326}, {-0.12129358804328225`, 0.10401739367249288`, 
        0.9375375963131529}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {4, 2, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.5042106591057398, -0.68292188605183, -0.42883307473076665`}, {
        0.08920125442055783, -0.3793381470038779, 0.7089811024455721}, {
        0.40820107574908837`, 0.424918215369047, 0.746541954073814}, {0., 0., 
        0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4211144780829817908}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.5042106591057398, -0.68292188605183, -0.42883307473076665`}, {
        0.08920125442055783, -0.3793381470038779, 0.7089811024455721}, {
        0.40820107574908837`, 0.424918215369047, 0.746541954073814}, {0., 0., 
        0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6866930060767055, 
        0.3966552296524796, -0.5250008013157238}, {0.2286053628126728, 
        0.4453853824410595, 0.6355154965762785}, {
        0.26879696735697356`, -0.3998053140758906, 0.8200075599431076}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2457171526676050606}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6866930060767055, 
        0.3966552296524796, -0.5250008013157238}, {0.2286053628126728, 
        0.4453853824410595, 0.6355154965762785}, {
        0.26879696735697356`, -0.3998053140758906, 0.8200075599431076}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 4}, {2, 1, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.9406312425211015, -0.13209447087436266`, 
        0.0476698389456814}, {0.08920125442055798, -0.379338147003878, 
        0.708981102445572}, {0.40820107574908837`, 0.424918215369047, 
        0.746541954073814}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3027946093812957431}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.9406312425211015, -0.13209447087436266`, 
        0.0476698389456814}, {0.08920125442055798, -0.379338147003878, 
        0.708981102445572}, {0.40820107574908837`, 0.424918215369047, 
        0.746541954073814}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.8443053727078373, 
        0.437775472311203, -0.0030936462079487193`}, {0.22860536281267296`, 
        0.4453853824410595, 0.6355154965762784}, {
        0.26879696735697356`, -0.3998053140758906, 0.8200075599431076}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3060783609648277594}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.8443053727078373, 
        0.437775472311203, -0.0030936462079487193`}, {0.22860536281267296`, 
        0.4453853824410595, 0.6355154965762784}, {
        0.26879696735697356`, -0.3998053140758906, 0.8200075599431076}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.3748178001408812, -0.8169632161672914, -0.31079127612373963`}, \
{-0.4661869141856092, -0.41093712565855167`, 0.5179854602062324}, {
        0.03698868405313721, 0.15544642144111567`, 0.9375375963131529}, {0., 
        0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6227324836343814183}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.3748178001408812, -0.8169632161672914, -0.31079127612373963`}, \
{-0.4661869141856092, -0.41093712565855167`, 0.5179854602062324}, {
        0.03698868405313721, 0.15544642144111567`, 0.9375375963131529}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.7766734402457657, 
        0.3108928428822312, -0.45236324414002416`}, {-0.4661869141856091, \
-0.41093712565855184`, 0.5179854602062324}, {0.03698868405313721, 
        0.15544642144111567`, 0.9375375963131529}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4627390335027163303}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.7766734402457657, 
        0.3108928428822312, -0.45236324414002416`}, {-0.4661869141856091, \
-0.41093712565855184`, 0.5179854602062324}, {0.03698868405313721, 
        0.15544642144111567`, 0.9375375963131529}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {3, 4, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.006503578872510206, -0.848863001117543, \
-0.4288330747307667}, {0.15080403769503872`, -0.35932218937523197`, 
        0.708981102445572}, {-0.5800022678275107, 0.10383148515779607`, 
        0.7465419540738139}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 9082823326223882148}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.006503578872510206, -0.848863001117543, \
-0.4288330747307667}, {0.15080403769503872`, -0.35932218937523197`, 
        0.708981102445572}, {-0.5800022678275107, 0.10383148515779607`, 
        0.7465419540738139}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.7886944060688853, -0.08272720012771943, \
-0.5250008013157239}, {-0.446736582906201, 0.22595348258474318`, 
        0.6355154965762784}, {0.01753835277372891, -0.48144418680217926`, 
        0.8200075599431076}, {0., 0., 0.}}, {
         Polygon[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6346039877536994839}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.7886944060688853, -0.08272720012771943, \
-0.5250008013157239}, {-0.446736582906201, 0.22595348258474318`, 
        0.6355154965762784}, {0.01753835277372891, -0.48144418680217926`, 
        0.8200075599431076}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {4, 3, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.8386298425289219, 0.44602250039912217`, 
        0.047669838945681636`}, {0.1508040376950387, -0.35932218937523214`, 
        0.708981102445572}, {-0.5800022678275107, 0.10383148515779607`, 
        0.7465419540738139}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8871168011280256704}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.8386298425289219, 0.44602250039912217`, 
        0.047669838945681636`}, {0.1508040376950387, -0.35932218937523214`, 
        0.708981102445572}, {-0.5800022678275107, 0.10383148515779607`, 
        0.7465419540738139}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.4257394285228173, 
        0.8504380433292491, -0.0030936462079485527`}, {-0.4467365829062011, 
        0.2259534825847431, 0.6355154965762783}, {
        0.01753835277372891, -0.48144418680217926`, 0.8200075599431076}, {0., 
        0., 0.}}, {
         Polygon[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 546679824117285544}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.4257394285228173, 
        0.8504380433292491, -0.0030936462079485527`}, {-0.4467365829062011, 
        0.2259534825847431, 0.6355154965762783}, {
        0.01753835277372891, -0.48144418680217926`, 0.8200075599431076}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 2}, {1, 4, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6392790482495146, 
        0.08527567195997438, -0.6989698530183164}, {
        0.5984175382399255, -0.10083180388217367`, 0.5350120507429805}, {
        0.10617897601221359`, 0.5795771157043093, 0.7465419540738139}, {0., 
        0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1289076971519841663}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6392790482495146, 
        0.08527567195997438, -0.6989698530183164}, {
        0.5984175382399255, -0.10083180388217367`, 0.5350120507429805}, {
        0.10617897601221359`, 0.5795771157043093, 0.7465419540738139}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.313373160094707, -0.878701029045815, 
        0.18490608771362682`}, {0.5984175382399256, -0.10083180388217361`, 
        0.5350120507429805}, {0.10617897601221359`, 0.5795771157043093, 
        0.7465419540738139}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6116859297729150468}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.313373160094707, -0.878701029045815, 
        0.18490608771362682`}, {0.5984175382399256, -0.10083180388217361`, 
        0.5350120507429805}, {0.10617897601221359`, 0.5795771157043093, 
        0.7465419540738139}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.6896889143944699, -0.29515649599566707`, -0.5845685087484734}, {
        0.5168526614490552, 0.5147203742838626, 0.3499067873556967}, {
        0.18774385280308398`, -0.03597506246172666, 0.9316472174610984}, {0., 
        0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7964409801476015998}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.6896889143944699, -0.29515649599566707`, -0.5845685087484734}, {
        0.5168526614490552, 0.5147203742838626, 0.3499067873556967}, {
        0.18774385280308398`, -0.03597506246172666, 0.9316472174610984}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.04256647634186955, -0.9499714930290523, 
        0.015835236388092755`}, {0.02249510854226469, 0.014486229236679193`, 
        0.8085744346945748}, {0.6821014057098748, 0.4642590825854568, 
        0.47297957012222025`}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7063706794233347332}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.04256647634186955, -0.9499714930290523, 
        0.015835236388092755`}, {0.02249510854226469, 0.014486229236679193`, 
        0.8085744346945748}, {0.6821014057098748, 0.4642590825854568, 
        0.47297957012222025`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.5269127798214028, 
        0.732835495241899, -0.29970578333078474`}, {0.5168526614490553, 
        0.5147203742838625, 0.3499067873556966}, {
        0.18774385280308398`, -0.03597506246172666, 0.9316472174610984}, {0., 
        0., 0.}}, {
         Polygon[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3983816443834762782}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.5269127798214028, 
        0.732835495241899, -0.29970578333078474`}, {0.5168526614490553, 
        0.5147203742838625, 0.3499067873556966}, {
        0.18774385280308398`, -0.03597506246172666, 0.9316472174610984}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 2, 1}, {2, 4, 1}, {4, 3, 1}, {3, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.8685054475823838, 0.38718220218091703`, 
        0.017225766210405488`}, {0.02249510854226479, 0.014486229236679027`, 
        0.8085744346945747}, {0.6821014057098748, 0.4642590825854568, 
        0.47297957012222025`}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1724523092641818447}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.8685054475823838, 0.38718220218091703`, 
        0.017225766210405488`}, {0.02249510854226479, 0.014486229236679027`, 
        0.8085744346945747}, {0.6821014057098748, 0.4642590825854568, 
        0.47297957012222025`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{
        0.7277615282596929, -0.0790904008940338, -0.6071378456816988}, {
        0.1132431860667973, 0.8004336546245422, 0.03147129710252855}, {
        0.17696496002035597`, 0.44808425742110314`, 0.8200075599431077}, {0., 
        0., 0.}}, {
         Polygon[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 303783224175945279}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{
        0.7277615282596929, -0.0790904008940338, -0.6071378456816988}, {
        0.1132431860667973, 0.8004336546245422, 0.03147129710252855}, {
        0.17696496002035597`, 0.44808425742110314`, 0.8200075599431077}, {0., 
        0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 4}, {1, 3, 4}, {3, 2, 4}, {2, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.8599921523140095, 
        0.13670469972859725`, -0.3824053088254762}, {0.11324318606679747`, 
        0.8004336546245422, 0.03147129710252855}, {0.17696496002035597`, 
        0.44808425742110314`, 0.8200075599431077}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2070743971824137436}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.8599921523140095, 
        0.13670469972859725`, -0.3824053088254762}, {0.11324318606679747`, 
        0.8004336546245422, 0.03147129710252855}, {0.17696496002035597`, 
        0.44808425742110314`, 0.8200075599431077}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.46129056375519567`, 
        0.12911890786498287`, -0.82161293843856}, {0.5444022636500404, 
        0.463543916278332, 0.3784992869234163}, {-0.2541941175628871, 
        0.7849739957673137, 0.4729795701222206}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7502028545216740805}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.46129056375519567`, 
        0.12911890786498287`, -0.82161293843856}, {0.5444022636500404, 
        0.463543916278332, 0.3784992869234163}, {-0.2541941175628871, 
        0.7849739957673137, 0.4729795701222206}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6172468329991382, 
        0.2757053015263569, -0.6689554776293192}, {-0.2795269911946101, 
        0.5755259564590776, 0.49511920970916623`}, {0.5697351372817636, 
        0.6729919555865683, 0.3563596473364705}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 371560920028378912}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6172468329991382, 
        0.2757053015263569, -0.6689554776293192}, {-0.2795269911946101, 
        0.5755259564590776, 0.49511920970916623`}, {0.5697351372817636, 
        0.6729919555865683, 0.3563596473364705}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.26879696735697434`, -0.7452840857228407, 
        0.52612576357316}, {0.5444022636500405, 0.4635439162783321, 
        0.37849928692341606`}, {-0.2541941175628871, 0.7849739957673137, 
        0.4729795701222206}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8664281503498663259}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.26879696735697434`, -0.7452840857228407, 
        0.52612576357316}, {0.5444022636500405, 0.4635439162783321, 
        0.37849928692341606`}, {-0.2541941175628871, 0.7849739957673137, 
        0.4729795701222206}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {2, 4, 3}, {4, 1, 3}, {1, 4, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.30052414557799356`, -0.6679063990227238, 
        0.6067081483354192}, {-0.27952699119461016`, 0.5755259564590776, 
        0.495119209709166}, {0.5697351372817636, 0.6729919555865683, 
        0.3563596473364705}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5743575960774012223}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.30052414557799356`, -0.6679063990227238, 
        0.6067081483354192}, {-0.27952699119461016`, 0.5755259564590776, 
        0.495119209709166}, {0.5697351372817636, 0.6729919555865683, 
        0.3563596473364705}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.5673113965391028, -0.3067693288382706, \
-0.6989698530183162}, {-0.42486251088413096`, -0.4333156466047554, 
        0.5350120507429804}, {-0.42656747721641214`, 0.4064772999521062, 
        0.7465419540738135}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6720796228935698959}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.5673113965391028, -0.3067693288382706, \
-0.6989698530183162}, {-0.42486251088413096`, -0.4333156466047554, 
        0.5350120507429804}, {-0.42656747721641214`, 0.4064772999521062, 
        0.7465419540738135}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {4, 2, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.7700117181449493, -0.5266879435048619, 
        0.18490608771362682`}, {-0.4248625108841311, -0.4333156466047555, 
        0.5350120507429803}, {-0.42656747721641214`, 0.4064772999521062, 
        0.7465419540738135}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8363082508933742914}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.7700117181449493, -0.5266879435048619, 
        0.18490608771362682`}, {-0.4248625108841311, -0.4333156466047555, 
        0.5350120507429803}, {-0.42656747721641214`, 0.4064772999521062, 
        0.7465419540738135}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.38448141711255857`, -0.6441755938113312, \
-0.5845685087484732}, {-0.7206876317587232, 0.11261915813880957`, 
        0.3499067873556965}, {-0.13074235634182016`, -0.13945750479145863`, 
        0.931647217461098}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7263336414431907989}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.38448141711255857`, -0.6441755938113312, \
-0.5845685087484732}, {-0.7206876317587232, 0.11261915813880957`, 
        0.3499067873556965}, {-0.13074235634182016`, -0.13945750479145863`, 
        0.931647217461098}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5239422309495073, -0.7935630290680526, 
        0.01583523638809281}, {-0.026713717007649407`, \
-0.0015026874129768775`, 
        0.8085744346945745}, {-0.8247162710928941, -0.025335659239672292`, 
        0.47297957012222}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4754233198252835882}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5239422309495073, -0.7935630290680526, 
        0.01583523638809281}, {-0.026713717007649407`, \
-0.0015026874129768775`, 
        0.8085744346945745}, {-0.8247162710928941, -0.025335659239672292`, 
        0.47297957012222}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.004468503030779364, 
        0.9025879309553289, -0.2997057833307847}, {-0.7206876317587234, 
        0.1126191581388094, 
        0.3499067873556965}, {-0.13074235634182016`, -0.13945750479145863`, 
        0.931647217461098}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8662755750764254127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.004468503030779364, 
        0.9025879309553289, -0.2997057833307847}, {-0.7206876317587234, 
        0.1126191581388094, 
        0.3499067873556965}, {-0.13074235634182016`, -0.13945750479145863`, 
        0.931647217461098}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {4, 3, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.4750556784093027, 0.8237316751084773, 
        0.017225766210405502`}, {-0.026713717007649407`, \
-0.001502687412977044, 
        0.8085744346945745}, {-0.8247162710928941, -0.025335659239672292`, 
        0.47297957012222}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4145620244833756804}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.4750556784093027, 0.8237316751084773, 
        0.017225766210405502`}, {-0.026713717007649407`, \
-0.001502687412977044, 
        0.8085744346945745}, {-0.8247162710928941, -0.025335659239672292`, 
        0.47297957012222}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.5422832729709625, -0.4917529719120803, \
-0.6071378456816987}, {-0.5620987596520763, 0.581001754768226, 
        0.031471297102528495`}, {-0.4065449783618998, 0.25849038549305897`, 
        0.8200075599431076}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1676826898424098294}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.5422832729709625, -0.4917529719120803, \
-0.6071378456816987}, {-0.5620987596520763, 0.581001754768226, 
        0.031471297102528495`}, {-0.4065449783618998, 0.25849038549305897`, 
        0.8200075599431076}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6153952598315813, 
        0.6160871295087963, -0.3824053088254761}, {-0.5620987596520765, 
        0.5810017547682259, 0.031471297102528495`}, {-0.4065449783618998, 
        0.25849038549305897`, 0.8200075599431076}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1151363240831951293}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6153952598315813, 
        0.6160871295087963, -0.3824053088254761}, {-0.5620987596520765, 
        0.5810017547682259, 0.031471297102528495`}, {-0.4065449783618998, 
        0.25849038549305897`, 0.8200075599431076}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.449086095257901, -0.1666803996390807, \
-0.8216129384385599}, {-0.7128949608473738, 0.05502328402015613, 
        0.37849928692341617`}, {-0.2557487771666025, 0.7844688562411292, 
        0.4729795701222205}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5798744149756096321}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.449086095257901, -0.1666803996390807, \
-0.8216129384385599}, {-0.7128949608473738, 0.05502328402015613, 
        0.37849928692341617`}, {-0.2557487771666025, 0.7844688562411292, 
        0.4729795701222205}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.3373076674043757, 
        0.5858588598352202, -0.6689554776293192}, {-0.11214358325523005`, 
        0.6299121225211697, 0.4951192097091661}, {-0.8565001547587465, 
        0.20958001774011553`, 0.35635964733647046`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3196008014873021208}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.3373076674043757, 
        0.5858588598352202, -0.6689554776293192}, {-0.11214358325523005`, 
        0.6299121225211697, 0.4951192097091661}, {-0.8565001547587465, 
        0.20958001774011553`, 0.35635964733647046`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.2206056797279251, -0.7609423842603439, 
        0.5261257635731599}, {-0.712894960847374, 0.05502328402015609, 
        0.37849928692341606`}, {-0.2557487771666025, 0.7844688562411292, 
        0.4729795701222205}, {0., 0., 0.}}, {
         Polygon[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7598344717867709085}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.2206056797279251, -0.7609423842603439, 
        0.5261257635731599}, {-0.712894960847374, 0.05502328402015609, 
        0.37849928692341606`}, {-0.2557487771666025, 0.7844688562411292, 
        0.4729795701222205}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 3, 2}, {4, 1, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6357146722499365, -0.3637039667326174, 
        0.6067081483354192}, {-0.11214358325523002`, 0.6299121225211698, 
        0.495119209709166}, {-0.8565001547587465, 0.20958001774011553`, 
        0.35635964733647046`}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3134859486532373099}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6357146722499365, -0.3637039667326174, 
        0.6067081483354192}, {-0.11214358325523002`, 0.6299121225211698, 
        0.495119209709166}, {-0.8565001547587465, 0.20958001774011553`, 
        0.35635964733647046`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.8443053727078375, -0.43777547231120256`, 
        0.003093646207948853}, {0.22860536281267274`, 0.4453853824410593, 
        0.6355154965762781}, {0.01377480110049228, 
        0.9503319229577811, -0.03446720542029281}, {0., 0., 0.}}, {
         Polygon[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 116923617943461448}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.8443053727078375, -0.43777547231120256`, 
        0.003093646207948853}, {0.22860536281267274`, 0.4453853824410593, 
        0.6355154965762781}, {0.01377480110049228, 
        0.9503319229577811, -0.03446720542029281}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {1, 2, 4}, {2, 3, 4}, {3, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.6866930060767055, -0.3966552296524797, 
        0.525000801315724}, {0.22860536281267294`, 0.4453853824410593, 
        0.6355154965762781}, {0.01377480110049228, 
        0.9503319229577811, -0.03446720542029281}, {0., 0., 0.}}, {
         Polygon[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6730768941340165016}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.6866930060767055, -0.3966552296524797, 
        0.525000801315724}, {0.22860536281267294`, 0.4453853824410593, 
        0.6355154965762781}, {0.01377480110049228, 
        0.9503319229577811, -0.03446720542029281}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 3, 1}, {4, 2, 1}, {3, 4, 1}, {4, 3, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6850055626905517, -0.5594050613775423, 
        0.3497740035732584}, {0.486357869822042, 0.6421861915880795, 
        0.07457489512724731}, {-0.243977705908877, 0.7535311138107617, 
        0.5264733960287382}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1449606325502875035}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6850055626905517, -0.5594050613775423, 
        0.3497740035732584}, {0.486357869822042, 0.6421861915880795, 
        0.07457489512724731}, {-0.243977705908877, 0.7535311138107617, 
        0.5264733960287382}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {1, 2, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.3549788039605431, -0.5314726937731286, 
        0.7042977507416539}, {-0.30811949076232964`, 0.6635246216653387, 
        0.345406938325953}, {0.5504996546754949, 0.7321926837335025, 
        0.25564135283003253`}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5420357507214155542}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.3549788039605431, -0.5314726937731286, 
        0.7042977507416539}, {-0.30811949076232964`, 0.6635246216653387, 
        0.345406938325953}, {0.5504996546754949, 0.7321926837335025, 
        0.25564135283003253`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 1}, {3, 2, 1}, {2, 4, 1}, {4, 2, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.011888182040680942`, 
        0.11857597770789965`, -0.9435607589476476}, {0.48635786982204215`, 
        0.6421861915880794, 0.07457489512724744}, {-0.243977705908877, 
        0.7535311138107617, 0.5264733960287382}, {0., 0., 0.}}, {
         Polygon[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5824306227422180863}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.011888182040680942`, 
        0.11857597770789965`, -0.9435607589476476}, {0.48635786982204215`, 
        0.6421861915880794, 0.07457489512724744}, {-0.243977705908877, 
        0.7535311138107617, 0.5264733960287382}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 3}, {2, 1, 3}, {1, 4, 3}, {4, 1, 2}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.56085853655833, 
        0.13332047025800423`, -0.7564204197186317}, {-0.30811949076232964`, 
        0.6635246216653385, 0.34540693832595315`}, {0.5504996546754949, 
        0.7321926837335025, 0.25564135283003253`}, {0., 0., 0.}}, {
         Polygon[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6806163359182215068}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.56085853655833, 
        0.13332047025800423`, -0.7564204197186317}, {-0.30811949076232964`, 
        0.6635246216653385, 0.34540693832595315`}, {0.5504996546754949, 
        0.7321926837335025, 0.25564135283003253`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{3, 4, 1}, {2, 3, 1}, {4, 2, 1}, {2, 4, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.4257394285228179, -0.8504380433292489, 
        0.0030936462079487644`}, {-0.4467365829062009, 0.22595348258474307`, 
        0.6355154965762783}, {-0.5697351372817635, 
        0.7607380510297368, -0.03446720542029266}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5880115357054010970}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.4257394285228179, -0.8504380433292489, 
        0.0030936462079487644`}, {-0.4467365829062009, 0.22595348258474307`, 
        0.6355154965762783}, {-0.5697351372817635, 
        0.7607380510297368, -0.03446720542029266}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.7886944060688853, 0.08272720012771928, 
        0.5250008013157239}, {-0.446736582906201, 0.22595348258474296`, 
        0.6355154965762783}, {-0.5697351372817635, 
        0.7607380510297368, -0.03446720542029266}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6898409942213042434}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.7886944060688853, 0.08272720012771928, 
        0.5250008013157239}, {-0.446736582906201, 0.22595348258474296`, 
        0.6355154965762783}, {-0.5697351372817635, 
        0.7607380510297368, -0.03446720542029266}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.22537109632254487`, -0.8552043688816058, 
        0.34977400357325833`}, {-0.7709393546753723, 0.23366555932990363`, 
        0.0745748951272474}, {-0.2455323655125925, 0.7530259742845768, 
        0.5264733960287383}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2581717473711557946}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.22537109632254487`, -0.8552043688816058, 
        0.34977400357325833`}, {-0.7709393546753723, 0.23366555932990363`, 
        0.0745748951272474}, {-0.2455323655125925, 0.7530259742845768, 
        0.5264733960287383}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5995756964429708, -0.2213191354642653, 
        0.7042977507416538}, {-0.14073608282294964`, 0.7179107877274307, 
        0.3454069383259531}, {-0.8757356373650154, 0.2687807458870497, 
        0.2556413528300326}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 481944609133353598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5995756964429708, -0.2213191354642653, 
        0.7042977507416538}, {-0.14073608282294964`, 0.7179107877274307, 
        0.3454069383259531}, {-0.8757356373650154, 0.2687807458870497, 
        0.2556413528300326}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.060079469669730164`, 
        0.10291767917039632`, -0.9435607589476476}, {-0.7709393546753723, 
        0.2336655593299034, 0.07457489512724752}, {-0.2455323655125925, 
        0.7530259742845768, 0.5264733960287383}, {0., 0., 0.}}, {
         Polygon[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2114262217119609520}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.060079469669730164`, 
        0.10291767917039632`, -0.9435607589476476}, {-0.7709393546753723, 
        0.2336655593299034, 0.07457489512724752}, {-0.2455323655125925, 
        0.7530259742845768, 0.5264733960287383}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 3, 2}, {1, 4, 2}, {3, 1, 2}, {1, 3, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.37538028126960005`, 
        0.43752290254811044`, -0.7564204197186317}, {-0.14073608282294953`, 
        0.7179107877274306, 0.34540693832595326`}, {-0.8757356373650154, 
        0.2687807458870497, 0.2556413528300326}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7408972041047611260}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.37538028126960005`, 
        0.43752290254811044`, -0.7564204197186317}, {-0.14073608282294953`, 
        0.7179107877274306, 0.34540693832595326`}, {-0.8757356373650154, 
        0.2687807458870497, 0.2556413528300326}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.30052414557799306`, 
        0.667906399022724, -0.6067081483354191}, {-0.2795269911946101, 
        0.5755259564590773, 0.4951192097091659}, {-0.9152494999442867, 
        0.0383972494124352, 0.25564135283003286`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2806504276292728244}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.30052414557799306`, 
        0.667906399022724, -0.6067081483354191}, {-0.2795269911946101, 
        0.5755259564590773, 0.4951192097091659}, {-0.9152494999442867, 
        0.0383972494124352, 0.25564135283003286`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.6172468329991383, -0.27570530152635664`, 
        0.6689554776293193}, {-0.2795269911946101, 0.5755259564590776, 
        0.4951192097091658}, {-0.9152494999442867, 0.0383972494124352, 
        0.25564135283003286`}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 8722394612811045240}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.6172468329991383, -0.27570530152635664`, 
        0.6689554776293193}, {-0.2795269911946101, 0.5755259564590776, 
        0.4951192097091658}, {-0.9152494999442867, 0.0383972494124352, 
        0.25564135283003286`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5340355452674656, 
        0.732429783321267, -0.2878561204531195}, {-0.6573563726527382, 
        0.47112492759486363`, -0.020794208786223983`}, {-0.5374201184861593, 
        0.14279827827664907`, 0.7715547713254232}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3870479910220126758}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5340355452674656, 
        0.732429783321267, -0.2878561204531195}, {-0.6573563726527382, 
        0.47112492759486363`, -0.020794208786223983`}, {-0.5374201184861593, 
        0.14279827827664907`, 0.7715547713254232}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.7491805434896139, 0.09144842739116893, 
        0.5786831564610855}, {-0.4930002190300881, -0.018541256025743705`, 
        0.6411828936027147}, {-0.7017762721088094, 0.6324644618972566, 
        0.10957766893648416`}, {0., 0., 0.}}, {
         Polygon[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3253651270781834754}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.7491805434896139, 0.09144842739116893, 
        0.5786831564610855}, {-0.4930002190300881, -0.018541256025743705`, 
        0.6411828936027147}, {-0.7017762721088094, 0.6324644618972566, 
        0.10957766893648416`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{2, 1, 3}, {1, 4, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.3719233296065898, -0.5490307435533271, \
-0.6817233872437609}, {-0.657356372652738, 
        0.4711249275948638, -0.02079420878622401}, {-0.5374201184861593, 
        0.14279827827664907`, 0.7715547713254232}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3590351022020172745}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.3719233296065898, -0.5490307435533271, \
-0.6817233872437609}, {-0.657356372652738, 
        0.4711249275948638, -0.02079420878622401}, {-0.5374201184861593, 
        0.14279827827664907`, 0.7715547713254232}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.258356020583438, -0.8873817548644443, \
-0.22430845938008798`}, {-0.49300021903008795`, -0.018541256025743625`, 
        0.6411828936027149}, {-0.7017762721088094, 0.6324644618972566, 
        0.10957766893648416`}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7340090776487333979}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.258356020583438, -0.8873817548644443, \
-0.22430845938008798`}, {-0.49300021903008795`, -0.018541256025743625`, 
        0.6411828936027149}, {-0.7017762721088094, 0.6324644618972566, 
        0.10957766893648416`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5608585365583297, -0.13332047025800406`, 
        0.756420419718632}, {-0.3081194907623297, 0.6635246216653383, 
        0.34540693832595293`}, {-0.9313562904503531, 0.08796885338968562, 
        0.17130510284092235`}, {0., 0., 0.}}, {
         Polygon[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 5609075722771485759}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5608585365583297, -0.13332047025800406`, 
        0.756420419718632}, {-0.3081194907623297, 0.6635246216653383, 
        0.34540693832595293`}, {-0.9313562904503531, 0.08796885338968562, 
        0.17130510284092235`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 2, 3}, {4, 1, 3}, {2, 4, 3}, {4, 2, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.3549788039605434, 
        0.5314726937731288, -0.7042977507416536}, {-0.3081194907623297, 
        0.6635246216653383, 0.34540693832595315`}, {-0.9313562904503531, 
        0.08796885338968562, 0.17130510284092235`}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 2103829195295706412}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.3549788039605434, 
        0.5314726937731288, -0.7042977507416536}, {-0.3081194907623297, 
        0.6635246216653383, 0.34540693832595315`}, {-0.9313562904503531, 
        0.08796885338968562, 0.17130510284092235`}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.7043976352312219, 0.20810918368104475`, 
        0.6041713633860428}, {-0.5403706311295939, 0.11107983682484286`, 
        0.5917510862271795}, {-0.6991051500830894, 
        0.6404136382301813, -0.07503904506030415}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 6410040005178866720}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.7043976352312219, 0.20810918368104475`, 
        0.6041713633860428}, {-0.5403706311295939, 0.11107983682484286`, 
        0.5917510862271795}, {-0.6991051500830894, 
        0.6404136382301813, -0.07503904506030415}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 3}, {2, 1, 3}, {4, 2, 3}, {2, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0.5645466031994385, 
        0.6596932658260413, -0.3880727058519118}, {-0.6472073128783761, 
        0.45605937802677127`, -0.16625593239961042`}, {-0.5922684683343072, 
        0.29543409702825296`, 0.682967973566486}, {0., 0., 0.}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 7401340547682460835}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0.5645466031994385, 
        0.6596932658260413, -0.3880727058519118}, {-0.6472073128783761, 
        0.45605937802677127`, -0.16625593239961042`}, {-0.5922684683343072, 
        0.29543409702825296`, 0.682967973566486}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.25306257544687666`, -0.9148465298469116, \
-0.05936039860661142}, {-0.5403706311295938, 0.11107983682484295`, 
        0.5917510862271796}, {-0.6991051500830894, 
        0.6404136382301813, -0.07503904506030415}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1378608027271293466}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.25306257544687666`, -0.9148465298469116, \
-0.05936039860661142}, {-0.5403706311295938, 0.11107983682484295`, 
        0.5917510862271796}, {-0.6991051500830894, 
        0.6404136382301813, -0.07503904506030415}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 3}, {2, 4, 3}, {1, 2, 3}, {2, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.3268849069126575, -0.6764715295880511, \
-0.5831303666222372}, {-0.6472073128783759, 
        0.45605937802677143`, -0.16625593239961045`}, {-0.5922684683343072, 
        0.29543409702825296`, 0.682967973566486}, {0., 0., 0.}}, {
         Polygon[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4375523542094186891}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.3268849069126575, -0.6764715295880511, \
-0.5831303666222372}, {-0.6472073128783759, 
        0.45605937802677143`, -0.16625593239961045`}, {-0.5922684683343072, 
        0.29543409702825296`, 0.682967973566486}, {0., 0., 0.}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {3, 4, 2}, {1, 3, 2}, {3, 1, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}},
  Boxed->False,
  ImageSize->{432.3781069696511, 438.888088067289},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.7711954172011575`, 0.1257993977265739, 2.880458523502337},
  ViewVertical->{-0.9936106736912073, -0.07446407602462057, 
   0.0848111461348374}]], "Output",
 CellChangeTimes->{3.904067189133872*^9, 3.90407910031569*^9},
 CellLabel->"Out[2518]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzcvXeUFce5L1p3d+8wMyTZVk4gWUISysGSbMlCOSMJlBAghBAICQEiZxhy
zjkMDDDkPAwwIGBmQIBAwSP72Dq2jz3b9rl3zXn3j95rvV6r33u93uv3harq
6j29B5B9/7ms1c2emb13d1d9v/B9VdX9aq9h/foM6DXsk9692j4/pNfn/T7p
PbTtc4OGwK+s/yaE9QFsA9sKG14HQjSz6y3E/2a/LaOXVinsOgph/OFk/JsC
9ab7+Xf6Q/rN84zXq3GXoPfYuFPfgP/fF35pTeQL5huvp8cc5TLap8yzwdcN
V11BPxvfG6irKvS9+g3h99rqgzXyexO1j9wvv0//uzt6jJoLHUNfIB8jrT6o
/oaHmLRtJX/u3vDLa3/5qNFvBb68oV07PgB/eUZ9ecOV3CDqy/F//Ns9fJ01
8vtxUx+JdB4fwsbXk/7rH7ox6SgJekey9qEHRcO9Hejr9fnfE36u4eqrxKR9
O/S1xnx/Un1/+dxZYYe1CQ+SwoMEd9wqymeMjVzH3eF7LDwIHqxUf/vcwkfC
rbbTK9xobcK/1T5yM73fefgB0dDrXfhyPFxelNyZd9Ty/n2N/m96VIpTPJo6
MnYX/q41/bnIPDAdvE93UTu4r75S+u679EETeMy8U6KjzW5y5HT+kSMt3Ire
U0xtsuUTffi6zdCLb72qG1u9vwO9nYDYcEUrPow8FxVAzZ2LZZ4LfBD3ljof
+tey8PnUz5tE/WE2SQfja+9vK8L+4LbR/+iHWRc4H4v3Gkj4rwXtbXU+qosS
eEIiafaSbtI7Cp9T0zYyz2k0f1AxDrdEzHnafJ6B+b6SZs8Tmw67MxJNzZwn
RrNuvybnOYo/2FGELC6Pz4EB7WeeZyTeCpynxeeZHTVAdzESOX3k9pjztPk8
EesdI+c5s+l51pjnyf1pmRygzhPbV180t3sycp5XXE0xKE/Wxs5HfJT37U4N
2sx5Yr/rkLoVdwnVeuID44yfCb9CX1Y6vAr9u/bhVZRP6cefjbuyZExEF0Wv
rOGq1iK48wGBTa+6wQwX3Q23Gd+/vCcfMxlDQz/n96nrK9UXZ17o0zFvSsf8
ji/UpjZ94VEx6Ydd9Le4a02FqNDnkoleK7EJXCv2nLC5F1XIqV5s5jIj6L2Z
z0ydrTps/JXS1xkdqc2AvD46GlzbRVxfBE0Fri/oCH9N8vUpFlf9aISOvr5U
DGO2a3p9Wr57Gdf3FJ8CXo1zy3WRthDJ8DsabrhK/40AIBVRdqq6cHxrSczF
p2Ugv/x8GMjcnin8ufyjjmHnPvOMyH7wvupfpRqqf5u5fu0cjOtXvVXbqZNQ
ryPX/ySfhWqn7Gu/FNn33hTOHe3pu5Jh85RP6Bttnlv4owrFqh0abryaPirb
gT4KnU4tkIkBdMpoTuUgENBw0dgOyZCtUKpUHNxauB20l8F/bcMLaLjqJ0Du
N1FblOoGaNoY9KX1pe9TY4gENgdfhv6XCBsNA2NSPXvD2mdepC+WFIIvsTGw
UcAs4N7CgNF9FCeOsoXKd1aI4CdtuKELtFDdlpn0f4payEKk1MIWhH1j00eA
zFUTpWN05wb+dtVCHLf/U7dSk0biD6YVYuqqZ+qoqV80U+pG+J0YNgUaiP4s
I+eiG6hIql3fD/OBeoEG0lDCEArPolAbRTTv+mgb4Ybtg+2kWeVDo42eoJfJ
jvJnbCPc6G+Juu+/lLDRFyovBIMpgY0lA/ubP/NHmKzZnaiAssL2ylP9aHsV
x1APd086rr0U7FRUIe4aXnyKj1GgxTIx/Hstv1W1WPlHrxD2Ethkceb2g6at
p2AY13rITyYkVaQ103qRaLvY1iuRqgxQ1Iezmm8955nnhRlyiEsVcjc324AR
gb6G9hnVgJO2TKS3ls+dT2GH/2tCN0Pv1/QyZcITN2zIQLdfEtGqLryj4MiD
RsHGs1XjKbSylGhjQy2X5PaL9GNR4faL0FlM+zlPPivqJw3UiBVpjj50N0HH
X5r9WKjxIp7/atonzcZTmFUhqFVAt5xJco9HrxlbEJoO90WK7LAhcVOkh1+m
wvACTYlvU9bBbMqO6nxkKEY8REkIZH2dLEQZsymzXbtRGGJTopeonzRatSZi
Obj8p3zZN3Fr0hl3e1S3ZlGMl7iyaWsqPGPS+T9J0W/Ky2TM1rwqjAyNomvD
S9QftMPfKeDLVrfMVpdBrGtSFLx2tMXLx06lY7czWlIaFLPF9TXGtbh0bbVl
q8LfcdLfouHhByL8U6gHFJ3KHlB8EBg9oCxMXg9EXMwVtE+ZPWASglWIVZt2
gl0qoo6feUbbeuoLK/yd4hDIrWiPP2PEm/2AZEyngpGf1w+KhduGIaAjP3WR
/aBSh2OHRTBiqMD+kMWOFopY1OcL9QOSCxJzxuCVO27lj7WL74fimOTwZ/H9
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
RPa7r0I33gzMI278Wnkfq7x6WDNIN+diKqTXV64VDZMGFka6FZNa/79NkK4e
KOfcdyeXx+Sa4PraDcLbOkej3dkyp6B+338bGXQANIG9bj+Xpp23IUTeeVHU
b5oi5B0io4Y8pcBelg/2lgh2rpaxlHvdHycpVxO83A2zCOzeF+vA5q4jY45L
lsqx+CSBjjhX9W2U76YI36PR7X6xBBC8Rni9XgaNALM/b7QI5gwV/tHVfLOd
c1uEVzoAthERhOfOV1PyzQiHM5CJt38KPP5Xe5S6++tnQHhidfYTIVPt4twZ
4KmTS2jz908TwVYgmappDPbDwIcHpxI3JBDt8EUS76TvFoG+jffhSwR6d/4H
wAkAlEqguQMj4KomCK/nEyJ44R5wu1exB5AkQMAfDSZ8/JBY3KcY98HUCfTQ
aXzKAd5m/J/BvdP5RWD/N0S2ch++k3H/xcEQ93yT5ozCfa5yJW3e1nnC38iz
u9z5w7TOI/4/6SL8vq9iiyP+k6jzOFKF2KerHTIIxYTBD5m3Bn86powm9V2B
39m4XngrlwnndRCpBKlkygQ9bsqmt7ww5gnt14W1tGDoQK6lWTEevTicMKKl
PR0zvNzixwA+8uAuioNXnyF5V7fuOAAXvX+JyJ7ZRJjPntsTUXmaT6JUHkCP
pp0gz8DPZAdAbtMPuHrOIADRyxr8yqwrvBslNYn3otx5sOSAebdiAuD72YjI
e4O6k7ijX9uKxFm7UQR7l3IyfnKDhL3lvc8PPQ2GfkTVu4NEMJUa6rgEyt88
naCeQKwDfhDtXQHt62fRcmJC+vntpOWE9omgJmcOA9McoiFohXjMxb1TOPcM
QW8h6N1vKgn0cGREfBJJyTsMFmOtnDe2ezq+E8eNM97BmYD06YR27wDY+eqZ
hHZvwQAqthVG/GXussFsfCTiUeqD3UMI8bnTwABl/USwCLAw5T1w/U8SO1Cj
tGklstCGOAItZ5HEwd4O9pSL+i8Pk9yjvU+EyM++Cr5u5oJLQb6tkb97j8hW
VUrwJ7PVVQR8p2q3CO64jUAPDVeJg13+xpnCX8AKLxFvI+K9RcOE3+91Un0G
vY2C799ytQja3iy8yZOhu5viPRlTcSvh4rny84T3oYNEcMXlWtxBrwDloFcx
Ph7FHgHvfXuuiY+nSWE3hOU2b+lsLrc1A/aIuseBvZlBr0i5rTDY8RbsqPDo
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
YvdsIvg5Q3Y7uCSEPAElT0DKZdacPyES8WFCHg+4Mb8lqeEFqDzzWiUMPDEo
YXaThNnNxv131H1zbc/bu+KedaTdhfm027mwTbfslJ9PqbXNzqbooCYDsu32
bzUaW0O7d0fanbJHrCzjrmA6MkG0jUi7S5U7ZY9nW0zc5U5BrqnWCai1+tsp
583qmFRjKZZotTztMUGfY5s4/HXCr3AmZ+D6/ayXy4Xkr/pMfudn8vETCQs+
YXj5UR3LzORt/AhdTOVt+ACbon2ITKt3QWbJc0hcCxvYSjT5Hi3vD/EOiVib
r7pvr5OrdpXxu2eEsg2Zhlw7A4uNW/acSva6iaw007285GPjPNXtRk1o+yue
oPedtJE2NkdDAQBcECvZ8kqp2d7ER3T6DzSbkfce1e2d++WSRKn4/jC5Db3e
afeA2r1dg2/KdhKynbA9wWMxtjyGY0Go2V07VLN7t4eJbsQKbJDXJdLWItL9
nWtog2eg3Amr3GdFHU/turRyJ+0xptz4Oaz8yw6JEJ3qpnrDL8VE/eyDwTZC
CLPdsmLjPfskw+xEvBBtT0ysL46yL6HcLEnDLSzKDbe/l+XXOGao4n1y2ffL
KepDkxOJpHtRsd21Qv5HNxvKBhJemDLevb+W75Uw+CqX6Vi02yllcRSORd7C
p42/4Cm5ShZKYK6+prtArpYG0a86kc16VkA2UDYb5N5uio0GAmY9QkhXgmwf
vnixXPFb5MpvraPSM8jskHdSRN3plLPYhTxaH3eVHhTl3YYhE9V2+ZEd8iO7
mkTJJ0PpF76Eafjph3KUPuktmQojq2ZtuH6Gw4p82jYIw/ad3LqTdSU4FlHn
sfRaBpdaH5XzeKxb7m35urXYuAdYGHSMRXAy43rLp3HEi+BC2RfMqF8Hi4Rh
/+FgU9V29mOktB/EVpux9WDNseCcIp/UvDdEXsPzG2hthgo/5Sm64hqGp6Hw
BXnK0lJRGB6ofBiGZyDzoyjzSW6PbWNvrAq5hLyPoLx3y8/1qLzz+7tlMtsh
nCi67gwFReSDy/B6rbg7/Ys53LY5YUBuHfMip0diAhH6YLjLJYy45eqonm3i
b/HrI8UP1oL9S7EviuJxOUauuZX9kXHZd8fatWl32e2lYSz9aRw1nr3RdCVZ
BgyAx5z//Z8cgf4n8hSyPRDTf1OAh7Oxga8BBUSC717acc9pzvLtKCmO2F29
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
wQ1X4q7Ablm+SKFg7GipsFQwSA4Fg4QwQY4wARMpWV5RTR4gHxD1AQbmAmIB
qUBWJSdLM1uBvgNwQakmTTI6ID6Eq78pIQmps7RcID4E/PFYZIIraeHA5j0I
CJyXAYF8t5zY8RK+dzzWOEMOcItAAQXPmuCSb5jg0u/zt64SXCmdqU8LFCDj
pC7/rg1GTLHpk9XWcZCyjoNQ8p245OPXbZD0pybOt1srbUTd9npts9BOz2Cb
+G7a6zIlFA7FPkfEHtcAxX6tOAiGVXrxFuCvQOqD1QtF3P2WYuDqvobIWURx
369CTsHX3Kp6EXT1Bcgx3z1UF+VbUdxlAMi1l4gXIFgCWls6yfzddIQhsYME
lTwlKp7jLX5E1NutfE6U3J/6c8lDSA4TUMhRNedO5dW9oWp+oboE+HXoA1BY
TUjGgBM896Dxq2BXUqdVrZOSz4DPwuVQus+q2omYai8bb9Jv4j5qmBlZ9iNF
tUcyPODfcI35275Nxt+xIVLvrz4ZyFJvGvpU75HDJEDmD6PeN2Wpd5ahf/nw
VZM6UsIJAwYi3Uk5phg8CG3+9BU/MMHCmYwRnqneF8rxPMp3+smHM5med90G
FRwNzKkw6edGSxZ+eu4EE/wKYPDg7Rpv6qsgipZJIenFMneBAfD0uNGR4e5E
Kq0tnHPc7Wu1Rry/Rpb/7ANQ7Wv5jd1hoxsKNquiSmcZK9mQ6xwqNXhQTPkq
9R6INieijs5DZFoGqantnkeN1iyBYq1l2L0OGrDK6jVzlndJYfTu+oyjP6Wx
2n0yZD6m1zThtT9Sqa1xyOi1mO8Jub9GuPtZoF6VSSLYUyF67ZVp0Dq476cw
i9+GxsoUgNOiAae3aZ7iaWntdFrqVEP5PtEh8u1PHxM5/PET1O5kunul8U7h
ufwWGnJ6I23SMzRbUgfY9fNMzeY2sYJPec8yFeytC3X1YWPuxe3dNd14Sx/X
k/6XT0W48fvo9k9SuDO1DwP04/UOq9ZaDpFSlda0RTHdPxGSoFR/OyPVs2Iy
jStlHxvNYR3kwvM/VJEx21u1Pa5IJ2fpUap3NRtv3UrI9ViV68mvS5t5SnVw
5WU4jS8YEemEHHPcE/txHjibsdukRz+Mn+cABg7tiCQ7TySbIybjvv2YZI+0
LZS6m7R5DmTa21xrqNlWtHPddlw9ratleYumgzS024E/cZw4VaRy5v0u6QJO
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
Gv23qdO1C/Jw6nxJljrfY2I5fTfayUwxpz2XqvKI9P6t+tC/fGzcr04b79ND
otKhQksuH332/yFzciJlpkEefHLYeP/0kaYC4PAFA13/Tv/+b2RRpiNjnck5
VpaD4sUmKFthvN4mGOYbRabPsbY5TB6PPYj2iVFpLfROjf1vk4o0tkB2aJnL
20cFzrU6zNqprhatoeLA276WSIuDMfeb4JLvRoH6yPSm276uQHU4ZdWYOly7
QNfqhZEdfuco7PCvxuzwRMwOj2ky/o/lIqE0S/Z/kkcpAcA2gR3cW/oartpL
Y/Lcpt1l2Md/S20o0fla0VsmU0G89QUi01RparRgaYU0BNsvedt7Bm0kX2K3
NNVz3F19kakua7f2iFLBdlSwm0WwaV/X0+faWWP8X80Qi92vXCATeyPVZreZ
XZAdTpU8zAaL2DcGmD2xBL9jiVXtRFy1u8HSXRnl9pb9Up54Tly1NXIfqXZY
9Ue9dnh0Mt2GcsQ8/7IlVv2/GkJdwxHUZ7jvczJmuWj3lJ/BJGfYnmb5Sivd
F7pHV5jgxosj+ZbritK9AX+hoU5905yRu3mttCT06t9W6R7si6TbyvY33O14
dgOt6uXfhKfRAtOamR7007Th8y0lotXuljXabZa5T301kYYz+BjX7IS1vynN
lG0KdkqOjmjzEXrnI++92Nui20zjC2c00FPAp7pHLotBdibgp074oMR8EtRz
3EPbt2glbX+LXovMUmAK+Dad46h5d2XStJhaXcYIPiV8HQj7peeMt2SBTkWo
oK28TMv7qws01Y7TlMpmqoZD/sUUh66Hmi5WeMpdxWhRZamquyPqPkLMcKp7
GX7VStwuRbPVBMdtRHUXX72VdCPdjZmYO93a4FhFEGqr7Rq1v0dtcVw2oa4v
x7cvnmTcRfiVC2GFL3rBWCe94995XSTo+DlIuvUFroXiflAbiXoYtRdRT/KY
T1FPZIu6GOA52VLuxKL1VsaNJP/j8qyZbvwH7C76yP2q4fSCULPrS61242Nd
iWi4W79SbG9/7msZmzs5RMDz4wLuL51uAprb+O7g1V8af8FE40nPFH8dSxxV
u5sWqmqvx0405yn83yO32peczksaqjUH+MqIY4i2SLZdOe7m2Xw5LTjTm2bK
4t45k2W17NfQOptNst5ks+DFOlcp+PEo4/6m33gHNpqgGpdI0TSxulnpN6yi
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
zuI3X/G7RocUE6H/u9YWD1MfOHXzova+75ysvm8g2WgTYylaOT6Ec8JZMjgF
5jKm7i3qw4lj+SzpYoyBbsRdvAaydhWIwiJiKwdIapmy+ZoMNoeKmWzeMsmy
eWwGm/3SbsYDm0Ulg8lxp0UaR2wnmscrmkM85wmeu1A1u/OGphLGqJqbZmWi
mY5vVhVtqVO1nCCNscal8ZgUzpDK6SyuLNG9Ue0wnCvH6y6H4ch2W6j9diL8
zh+pPuzZMIBmQSbP+AzofUjwG+VLd4Nd+swTEjHHyd9Sw5INvMZraE4sMf4D
EHmffyibjrjnSERSiGSsyc4pzI3TmNZn6kywfzHQjK9/GnPlOF7jcKV+7fWS
U/7fUiIwDc14rE3KgBHJ++q1Vc3WMqny5j/0IC78LI3RtLUIimNC5hwh8+HQ
n71V49EHpagBl4yDstH+UMqDFybEXInQ9ApIeeOvt6ueDse3LULqHCupf2jv
+s7P9HXL1504imdSdhs11lkNXWMiZtstDvKng2GCkte5crxKqL1Iqe2Pgm6b
MliC1e4Xn9pFFxPtxG6htXNqr41M76VCFa82q6TYhPSUbN6cwnV+Flwniet4
qJNhRNXOUJ2cFEDn+Y/cI43JIol8ZmOGRE6qRg7VsVf0hbi0k1kEcldtFZaO
ZXykiMvChGKoGloKR2xl890LQy53FiZvnxMNlv7yPnodZ7gC8/ROE/z8Wmk/
JzM7IVCOUx17+5oFyhCfcgzhfAnADumcVSnnZolK/zo7nbVQuLkrS1Ra0ZzM
2Nnc3CB4Dvl8CYbbpQfvNecqcafktP2AT5nc9X8uSIiag9xmPply+hqtDppe
L9w/82/iBMdEVQf4f5w1qfD0I8ZlQipo7R5oNcG6FSGtswjmvPRa4O7iWcZ/
9EFABQb7gH7G3chCbhl6OT+L17trev6Y0plimkf/oQeMO/RTdQ5NHQgF+5nR
7csJb8B7MDf6vc2qsn/kppfrrjL+fZh8s7DKzsTMKpwBQk+HZp5nvIULOLeY
7LlqBd8KBCNVnRUSSQJPoU0k21Z2HrJe5yxBJkxhMpVbvqJ2YAmnTgLbNVAU
bCG6TEi8TCbeUpy3Cj5dkhTLxMNF6i6YZsdU44+AcJ3CWrVa2rMED5dMlR1W
co/PF2fnHpEPe3ZYWdwq/iquV8AzTjrhzL6fYDIHqRzU1RgfX9FtYk5fizgd
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
fIe3/ZYm+TeSwP81bqoLzdHIwnZ3zgDjf/5nqcbTge1FvVmzqienXMj2afhk
t94AqwHm3PjhWn6AjcfJ+HK78a1khvG+GAR+kh7lEtdbGHYuYq8eKRUZ13ZD
uCPnSRqcVKpySgq0nNm4weJZmCr1LfEpxwwVV7CzqkGgHlF9NfQPyd5QxceU
6svLdT8HyV45VxW9oj3HKR5uvKHvG7/Xa1Lqz7/9l/gq/fEk6viuxLpzATYf
lgKC3T3aZvxtkDFfNQLmOL0/nsfidFZ1PIl+VspnHNey87b43glZHIlzSKIt
7fR8vQlxnqnnLcqT9kg93zhDmho7a8cq0mOXRXo8HelW5ueGWCfVOdxpb+k2
3IbRkugkW/jDuCj/VsaA0CUQDxkviE+o9I9AXz9dB0OyG5haPA0yr5fxluP9
to7H+oslqWWSlf4A/c4pVvrHyHeugqr9hfE5cuyq+v9JWA8zIv1PwtOx7o34
WIOLlvTkPIU/bjeBvf/AHSnYxwX2+SnYl2o77KVaVVL/xfxYKoVI2RvyeiH8
khlabrDU7qxlK+zZMDKHWsL//jcpWT/0cy0utWuD8epKMcqU9ju3SAqswj6p
iWiVacBfJBusS+nWLRhmlb4d9fOMO7p3iNNjklN8nJWj1qWRni7gFbqd8jBe
e1+lcedrE1GPyU4XNml1/sM4TQeWWNLH3VL7J/2lkOU5EbnntD6Euwpo6IY7
4s13jVtCgbh1I09eyxYTQZ/5SyL9CfwtWKG6Ga+X1Ko+yL1ChH4eI6kO/ZUH
txl3W70mLO0D0b7ZK+DPJffjwn0sS1jqsECF3I/pspTuA9Cx1ZafVOTnhwnH
bt1E4997N6biMrGtmMoW7sW2uj/OIKnWspO+hAumWejnuGOwvDz7vPGfeQFT
CO+2DWPvTsv/PCkWQvafsjt9yPvTO0yo+mMEP9d3Xpn1Msx12U2ATtYE2FkV
7emh+lcTIN9/+G7jLpudEv/syHBynQ2VWjMgqWaA3HebZlkzYLSaAV2sGcA4
acOUyAzoomaAf/fNsosn3QxgeDRYU4TrM8eaAvNSZkBMzIBcMQOaZogp4D9w
i/G6PaumQLEsDbQFZG+oN4A1P05IXrF76qAJdjSazhfPH41ipcAZnfi0A8zV
agSEXvzQDxBTR0AYIhX8X53FCHhZjYCb1XtfYNJipDeoBZDhvbcWQCj86bkX
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
Bhosv4Cz858tIsP46R+MDUOGzRj/659LCzG0y9lXOMwej/ZCsCn2cTHMe4tF
gGmwS1pSb6EVY9DVwVd1Knr5BVl9Z1X4ikCFnY5dqsIdNobMrD36AuiT6WBN
hvVWjYEZ7Zgn9tAyESnODAxyWVnPLi/0qtMAXy5ZlpfqMUZc9HisOx5odN3n
1B4vrVNNpl0eaHI98+wbjObbs7tL4GSnCwnTDDRYdFh87jFGzXExtOPU78X3
aS1W7YWN7ewOSgvAxq7ewD+olhNLDa7mknuc0J3Yx/x5sLUfsEHMB6wWi4UW
ONf9z34G+4bT0Vikmox3aabKF+ugKgs6qeOdohyjJmMaWRuxxic+o6Icox6b
pJjg3/yu8e67x5rgiwMTPCsIntPecjfCYlu9WtPld+SA7Qpxf12aff/Psr2M
Mu0/+Wi4WI0L19nrxuluVYOw15YrOkgnKaaQo12BYZ5w2X33T1PCYPpVI6TU
fU9lWyvvhCv3h8m22uRJyvbQ7++Q5+Rq+fG3jLXJx55+6j7TMn282bpmlvzP
n8VGnzTOUNsp7UN3/DB0u/+T6HoGNT7IqI9qe6ZK+9aKOWlpz3xXac+kaR66
4yPyTre8NdHjURMdp4zbDO9X3zLeEw+KvAts2XV7ouxZIuUJ6eeFY+3vyoUx
u42tJSS1ZdcWnL1XTOqaj2FSXGK8xha++FL9TtptL37u2q8dxNpwL7RIYcT7
7hZX/fXDXfWf+Dh/B33HvAOFl1txJTsoXCTrC2YEsj5KZH32H40z8wm7GBU2
bV1VWs77xdbu2hOIurdmmfGnv2BFfX8o6qPE9k6Kzc3GewNaZNcZlNrWIurO
IEScEYi6POPPmaz7vXgxjJm9xDu3i/36+mWwSWi/iNmArPB3d0SS7DLT4XUJ
qT/+hCo6pXuI0g0tj4usj7lY1p2zrPULUe7pCXXdL6kSMac/k4lsqbpW4x6g
GJ8WFzzg4rQEo46ojvdI4PuIWPmHtbifc0gWBhyUZfv90OsBUk23jsP0euFr
He+TxYu9POrH7YqE4/j9SW17LVp+vDOt52NEzxOi5/27tdmnrLoXKfdfhM0w
+X5DEWdYcovYCTC+oOcydlPIIOlQc+nyKcunMEfXsH0rRp1I1u7VUVVvktoy
jSvxRw1LpMoaJsbdC42fPd54254Hx05R03v1Y4bed//lu4238XFKHy8w7w/a
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
ZlT66QVoLjVW9NMhByv/Vvoz6I3yfvMj41+P98AkyTwIp3rX/4AAeK9dzBwq
k2GJICNwAwTZmQENxAUGEgoD14cwEGObYTPGZacjMsHxg2nrn2GmCBMEuRI4
SgIEzvkTxnnzuAyvIt943Lu331QoGOzGTaBA8I+/mgAK+NPbfIN/AAguQI0v
gCf+dgpvi7d555i0CXbe6DVee7VJ5W8y/u5S421fw0XLT7Mc7jduTqdZfPDf
jT9ngUktxqS6Gsq7GRxcV6erNgABOB4CBAQEAoG7OU/YXKMGaQjATwNHxLtg
YeDIURsxiLEV1CiR/rj32mtScpo5oXQO9NG8amzUzIeXMLVvY+H1HhyvbsDQ
BuNWlISiH6Pmx3j4MVsGmSlOS6WoPiMFUspoLy37GhnU+IAAkpIl21asTeBY
iAfyz2jRFsEIzGLUe46gYHMtpt+61dzLOrbqdbMnqrgH5v74W4xT8TLXqS3g
9VAwE4cQN3YlrJ1dc3DSKPZZ4tovh2SWz9ZRzYl7gfHuVSs/LqqeFEXfVahF
cNvsuovRVtIjqQnMKC7mouOopO8v1d/DwHGrt5jU7OeNv2KmBEXKibZrbCl5
K+ji5f/BN9TMHyWqnuW8Ojc08zno3XcXTsONukg8/3HKOt6QKQwU+FxdlmFX
a+bBmnB2SJMoPPSv/QSm8C8Ylw1FuL62q91461cCcF7CrdFm3MMNwxMQ0rZ9
/F21PBFqudXzUM5xrxzHlz8qWY9HZWY4UhjKObOC8kXo8TNUPRgxsfk/4D2p
Rf39L1yLOxkz/Llq4+bhzv7K9TZlCMeABZ9CdcexHiwdJuv+TZ/RrouSMZmv
mt74HppetyzUdH/2o/g8XDE10PDqubpMh7re+LLqekta19VTs1zSUCOaLqc2
X836hJMjDTRzy0TKqeQyrJbHnCJxdNAegZSLko+1es6kSBrxLFslWr5ewzn5
KyJank58pJ4zfOTOH5/Wc2r5pheMu+Axk/r1D/Cal9Saz55jU3zx2RE958xf
I43ecMseLzPu9unq6eeNIEreVK5ynrByHtSCjsq5ZigV8jtYa97bs874zayT
s9mkHgOSf+pDJvWRD4mcU8wlF3LGrOFSHh9Byq+UbZJOf287byxQ4NIlxmXV
yMtH8PxH7HrvoXsly4o3cSPLF0tBB4p6j4q6/9Q4EXPK7K2q3R+T7djvmrRH
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
RgWs1ctbCq9u8N1bZEId0iu0eZXy+phw+2i/8ftbZTTDR05mH7C1WQb2WGbD
IiM3bH9YAxWZSt2MJ4eduWsLJSWLTyScu/naeEigVMLoHCbPKq9VHZcS2FTI
GjWFtsFug+y+ts6mSiaoBYxpFpgsRdoeS07CtiVC2q1dpLEbjz2oso0dx9Dn
cjiSL+dxBFoQe5tnm9zYuwyA7K2bRkS7+ys0RFTmpr9luvE300DIKKpg0QQT
zH9CptNi49csZ7wXlMV6uptlMlgcYwQ3fNN4TYhb+gTtV/4Y2pqLgp4q40F+
fnyMpRqGAnkT18SyOPHWghjO/d2R26Mrn8KhVJY1NjfjGSGoCkOA2Jv1pPz9
Hdzy7JL3tluLR8qvyNEhiZ0kiY1mERUFIPHU8SZ3zTdFqN2cIHGUMVTqVyyJ
fb+oPLY/3+eLfZQm3J7m3jmk8YuNwtgWq0Hdj1n9Dzj+LE9BFyfdwQTxsXpz
cf9uPgYIf5k8Lr4Uj3NCjfPn601aUXxh8t2xWr6sQA1Hi+IZhVGcAYpNBt/i
IYZs3fNj07Zusrzfdf+rDf8n3+OxcPzlW181ofsYsAa8c1eOMBefvFPeTudy
OXShcfeF7hUGpCatszyWfL5etnR3/pAa2tu10uSuKDLBt/9BbuwbjD9J9PSr
TOkEsNMhsKmnRTylFdT4llX14AseSVCzA1Bu/jzjI/qcTl9bRqnZZrXWI+al
nF2w5TIwqQyYzrp18mDVSmIaIxjzW+OtmCqr8C5amS2p3cr5+L1KFiepEo2y
Y66I5/tkRjxtcj8X/fovd8hapYabS9Ba84IqI1rDGUxa9+wbSut0RGs7tKpi
xn9sbGx9tiU5ImAPyio4IPdfH8NZBuggRsO4ENiEdqOVzylA2wGxQTKZtjXr
GFDlnpE74eVuBEBG4jlA4dD7f0Jge1iURwyhtqIaxyJ3Xw+zm73NZYS2V1cv
5+a3hLb8UVC7yH35dVKb4+U3InKT2yUJ03QYsPwR6iifR+sCBDKXuOc+NO6H
53Wc/0C+vi9LUn1EbTI7BWY7RLVDTA9uIarxoUlnKOsDOnAKhglrsjoFWKdA
avBkpYX0cvbkhQ07CelIUTuqqGGxjsAcKmqFc2Y4nOkU7ahXCR1qFVkY/ZqN
HJhXlVY8O25bBVELI3WonIPNS+gG5jP0edlIObcpmr3FU21lih4G2QuhwWcy
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
+2znwxr89inv8EvkBXfPv4W+bKCuyhnuBjd/m5kLqXtuHC1gKdy9KeIuQlrM
XTtyIRjvq+EuvLBhROqiiKVZ3BnEBj9o4leSFeEr1rMga8+uUicgZC0BWeE0
8A7sEqp+9hEb847zB054dZp/J1T923/h3AZV83GqxlMEnFPHuLqIe9z2eSWi
q81zDr+7+3YkyUqvJVQtOF+QVP7il2xgMl1juVZwDzBPtf903tDQR7pqgsJ9
rFdvAFa/prHaQq8arFoaq5Wk59bRmlmxVPmzZzFigVrBqo0fcTfcpiCu3J2F
A4EJC7oyYdcrjdgCewcIp4zYpp+zloWnwDtzkL2rmRhl0xwFXn1DpGWZsnlg
NRvHqqRVGaxyxEq36lSZlJTWQjtY3V8nWM0xVrNxrBrvKj3nUc4gZ6Q2hCMG
1WJ4V92VtPYc2UXHb6Hyn35M+V0eZ7A6J/fyz+Im4OIwr1fP0ENA9+3h3Ou9
rcoKbBPMQv4x+GoBsLZxFkRsxRcz12RfbZ6Z4irQYBWeTGSwyiAL4801yi8n
pTj0eVqZR3HvYq8aZc7BeqzpgKxbu0C8Bx0EtlxPgF7jDaGr1WJxq4ELPTCV
I6y0XC8fGcLWCFxOwVo+PITs6YoIslmBLEQtAAvQBixYWJZyPdZUQLVcYesM
4axtXAjuivHKJ4pYAK0qSaJ2FHsQRNiWacZuF5F7y7eUuBNIJNSMZYUbB60U
wnY1sC149Wu52tU5WM8D/aWCJ59hH22wchEdOpRve9uRueoefJP9teE4ycWx
zF7/9luUWzFR2Jvj2Q7Zq/lrOZ/UInSB9gAHK1TTT2t5MHq7PaKa+z5M6H1d
NV/zLaQH1GAHmXgZrLolJY3ASnI3rncTAaylbWPV4vkiTr+iI2OQyj2N4RrA
rlab16tg7SrB6d//qPzf/ky5f/stIS/CaVY0Kp/p3R9jmnLg6tVeyuTKmFxw
5meW5yJswsBfJMosQdEv6WX/9jv2BTh//Y1yd9XAEzUOWyF6YwbJYvHNS7Wh
z6GnDHajUtyk26zQJinLn0rGDYnVCKfSVK+YVWqFqNS4exUcZYauWs48tVvw
k1Qr0Mp3ZzRJjdkvxVbApRlNPxNs/vpjdrB67x7llKlsigdAqGnHtSlGAcw0
XT+1qS+0jDFz344kM+NStNBOdWoRgJkHMDNtxKGkoZNhpBj1nNJ4+3fwckc4
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
tfQGt1XlK37GbHMYbQ3e7p3K27GVD5ZqKPXCm75Kb/AmsgYb4wqCYZypJDTH
OLMERl28V8FRoWbKB9qFZn16jGD+bBXOnq7K0yapcBqW4QPiMlJKCM89SwX3
0LtEYFOOPu+KNRndDmcHtIMPxa7egjp1AiiH6QrecnoA0op+//sSxEN1gVUJ
0c4j2+mP7MLEC0ipgXT+uD5sRR18I4UGH5DToMsy5+rsQoPhnOkFAeLK4ziz
R//LH4VuCdlWz2fX9IHwlUceNCtw4wf87DN9YCe6T4tK+po8TLz5nCcS4pwN
Oj0S+ScZ/i+FogLNWrJW272RSQa9Jhm3u+k6JUzdS07xD7+WHbehCzr+gUlm
UIb/+1umJVBmMFbcPVqVJklnQdOgmypRVvztRbFEy6ajzLFmTt1+qypNfM6a
cOAAhLCSzK98CsW+j1NKou3YcLUFU8VObK2KE8epfPG1nSovUzlLhCuDqohV
VtJMsypXyapg/DPcOO1627AKvT+6F+NKsnsMLEcQ9UOe2ERjAiOK7WN3bR+x
jmL4D91Hq72j0V9MKOGUa3MqplRyItQp0phmI4r+fAavHaG1mJlRgB340G+r
6YTJBWH37tUFUMxiBJ0KVXQ6tEOmIB9YQyLlGRqYvsk9tBlNpz0kyl7dFhEK
JZFw5Cgh1DaC2gai0waSoGuYKP87OlVN5oxyZK6hkz99EpcEMgImBtIMUlqz
p5HimkmCmdeRpxtCj83VvnGuAp9CGk5R4HBr4inHFVsSY/yO02vwVs7Tk66W
Y2WGoOuDXBuABjOEQpIsAzQ5YFOGd5Z2gCNgiYmUES4FyKZZmbJsXBuo9I3x
ZE8XEgy9t2bxDDaRdYCTG2st08mBLh/QKDzrVBpLMaV8BR+ud3C5mUX06ady
fEKi6hPGTzWSMgKm4NA+HqTCyy7lQoDQqB7aKnhrl2irj9/Sya9vMo2CW6+n
41r+WSboeLdmYPj9C7gE4M8egdxslcTKSTIMnAKvmpZhFyzQiUQS8al0r0wB
jTxkLkVr5fhcVwko8MlutOVgPjml4mnhKap4bk34v5TqpEw90D2xqkWMn4qc
fW38bFsZ4Qe7vZTv/j3FJvDjGvQAN/7LC+mNB20kpwFtoJNU2RQtlE1qIUbL
N1IA842agHFSdFDOrMhjtBDcHzZYduLlqo3RE/nTEoAheBBhvPf3K2EMAWTf
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
+ex/Pvv/07Pqr/4v9N78Xg==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"bc1dc772-eb75-49c0-a6d5-5a674992c57b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Mac OS X x86 (64-bit) (June 3, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], FontFamily -> "Palatino", FontSize -> 18, FontWeight -> 
    "Regular", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    RGBColor[0.9773403524834058, 0.41602197299153126`, 
      0.049774929427023724`]]}, Visible -> False, FrontEndVersion -> 
  "13.3 for Mac OS X x86 (64-bit) (June 3, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"c26e35b1-37bf-4b4c-838b-fff5c5fc02ea"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 500, 8, 98, "Title",ExpressionUUID->"7340ae0c-826c-49d3-becc-8da37739b689"],
Cell[1083, 32, 703, 12, 30, "Text",ExpressionUUID->"93898a2b-b86a-4f61-8936-63701c3b1671"],
Cell[CellGroupData[{
Cell[1811, 48, 219, 4, 69, "Chapter",ExpressionUUID->"f766e778-1c1b-47a3-83fd-0b8626fe6242"],
Cell[2033, 54, 230, 4, 35, "Text",ExpressionUUID->"133cf86c-7347-49b3-aa28-1414ee455218"],
Cell[2266, 60, 3097, 82, 148, "Code",ExpressionUUID->"a57f7d85-c048-4bd6-95a8-3dd672edc10a"],
Cell[CellGroupData[{
Cell[5388, 146, 634, 10, 30, "Input",ExpressionUUID->"cd053ff9-bb2d-423e-9c7c-05cce96ebaf2"],
Cell[6025, 158, 3308, 62, 360, "Output",ExpressionUUID->"52363608-9ad3-4d02-8beb-99be6054d434"]
}, Open  ]],
Cell[9348, 223, 1762, 43, 52, "Input",ExpressionUUID->"79fcf677-b935-47f9-8c41-dacab4f77a8b"],
Cell[11113, 268, 196, 3, 35, "Text",ExpressionUUID->"d08b6c72-60ef-4f55-8ef8-7ced94463eb0"],
Cell[CellGroupData[{
Cell[11334, 275, 2617, 62, 110, "Code",ExpressionUUID->"bbd9ff95-8d9b-485e-b9c6-384d15931dd7"],
Cell[13954, 339, 152, 2, 34, "Output",ExpressionUUID->"48fec413-0640-4ef1-aeff-81af7c7a06f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14143, 346, 343, 7, 30, "Input",ExpressionUUID->"b42a391b-b80a-4c07-9659-ea085404f6ea"],
Cell[14489, 355, 9813, 191, 360, "Output",ExpressionUUID->"b5793956-63c3-420a-949d-51bd298a164b"]
}, Open  ]],
Cell[24317, 549, 225, 5, 35, "Text",ExpressionUUID->"0ca83fe2-1f37-48ff-bac5-4fe6eac01977"],
Cell[24545, 556, 7604, 217, 186, "Code",ExpressionUUID->"876d5295-0553-413a-9b81-9e8a4ec95050"],
Cell[CellGroupData[{
Cell[32174, 777, 334, 7, 30, "Input",ExpressionUUID->"1a41ea19-7c53-440d-a482-7d4692508992"],
Cell[32511, 786, 15188, 273, 379, "Output",ExpressionUUID->"cf3f3b31-82ab-487a-a715-a95b87ae3889"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47736, 1064, 3232, 79, 157, "Input",ExpressionUUID->"0f8cbbd3-2dc0-4bd2-b59d-e02709e9c455"],
Cell[50971, 1145, 13154, 243, 374, "Output",ExpressionUUID->"e3b6083b-3338-4582-91e3-9c3b3c9909c3"]
}, Closed]],
Cell[64140, 1391, 201, 3, 31, "Text",ExpressionUUID->"f665dcab-94e4-4c66-ba34-3ff256b0c86c"],
Cell[64344, 1396, 1537, 42, 72, "Code",ExpressionUUID->"7c5e9705-d690-4b4b-8f67-a34e464abf86"],
Cell[CellGroupData[{
Cell[65906, 1442, 362, 8, 30, "Input",ExpressionUUID->"46d63295-45ce-40a9-abff-a28e456b512a"],
Cell[66271, 1452, 50513, 945, 381, "Output",ExpressionUUID->"5132b7d4-d365-4136-a081-4d3fc98c32aa"]
}, Open  ]],
Cell[116799, 2400, 182, 3, 35, "Text",ExpressionUUID->"2bf068da-4e73-4483-b006-382be355e226"],
Cell[116984, 2405, 2952, 64, 72, "Code",ExpressionUUID->"0cdfb512-f0fe-44f3-8d40-bf9fbfa2a5a3"],
Cell[CellGroupData[{
Cell[119961, 2473, 603, 10, 30, "Input",ExpressionUUID->"6e79b2b3-5415-4bff-b5a7-a8ff5968010b"],
Cell[120567, 2485, 19995, 393, 360, "Output",ExpressionUUID->"e45f656d-5d6a-4c13-b0e1-79f38a1cd5ad"]
}, Open  ]],
Cell[140577, 2881, 181, 3, 35, "Text",ExpressionUUID->"8a240d73-daf7-4755-940b-93d15f8181fb"],
Cell[140761, 2886, 1625, 45, 72, "Code",ExpressionUUID->"1a6c5fd0-5f38-4532-82cd-88c32c6080ee"],
Cell[CellGroupData[{
Cell[142411, 2935, 477, 9, 30, "Input",ExpressionUUID->"0b430804-4e9f-4562-bdc7-bc047a6d260d"],
Cell[142891, 2946, 22079, 434, 360, "Output",ExpressionUUID->"0a4d5dbc-a556-42c7-a2a7-412b720c5e56"]
}, Open  ]],
Cell[164985, 3383, 154, 3, 35, "Text",ExpressionUUID->"fc893946-651c-4670-bf54-0a6889bd368e"],
Cell[165142, 3388, 1364, 33, 72, "Code",ExpressionUUID->"01e91fc9-f3ac-4763-90aa-948bc90d2091"],
Cell[CellGroupData[{
Cell[166531, 3425, 382, 8, 30, "Input",ExpressionUUID->"a732af91-ed58-4849-976d-00d6682edc37"],
Cell[166916, 3435, 94408, 1669, 380, 52446, 981, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"ffb269e6-26bf-46e9-b1b9-6f7288bc992e"]
}, Open  ]],
Cell[261339, 5107, 446, 9, 35, "Text",ExpressionUUID->"80ba3911-c1e5-4149-99b4-1fb3afab322e"],
Cell[261788, 5118, 515706, 8770, 370, 166627, 3046, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"ff28e781-bdaf-4e52-b3b0-4897d5282b0d"],
Cell[777497, 13890, 585, 13, 84, "Text",ExpressionUUID->"0f7f9b51-833f-4ddf-aa47-849dfb282379"],
Cell[778085, 13905, 310, 8, 38, "Text",ExpressionUUID->"1b0270f4-1399-4232-a94c-12539495ea2f"],
Cell[778398, 13915, 424, 10, 52, "Code",ExpressionUUID->"213124e7-a5a6-4248-b3da-24255bbc8756",
 InitializationCell->True,
 InitializationGroup->True],
Cell[778825, 13927, 1437, 37, 72, "Code",ExpressionUUID->"324a4d55-0811-45a2-8a2c-f67f90b44e8d",
 InitializationCell->True,
 InitializationGroup->True],
Cell[780265, 13966, 2344, 55, 148, "Code",ExpressionUUID->"b3c21eda-79ea-4303-90b0-94632ac8b175",
 InitializationCell->True,
 InitializationGroup->True],
Cell[782612, 14023, 233, 6, 35, "Text",ExpressionUUID->"aa914149-ee50-4c55-9cc2-7a410483ce84"],
Cell[782848, 14031, 2250, 62, 91, "Code",ExpressionUUID->"d238810b-e498-4be2-88c9-db2073ccd3e2"],
Cell[785101, 14095, 1280, 30, 91, "Code",ExpressionUUID->"f4d36296-20fc-476e-92ae-42d4ca9c6a06"],
Cell[CellGroupData[{
Cell[786406, 14129, 1637, 44, 94, "Input",ExpressionUUID->"659904b2-cfa4-4921-8eac-3d17630c79c3"],
Cell[788046, 14175, 1571, 41, 93, "Output",ExpressionUUID->"74c67f27-a0f8-4e08-bb23-ac9b1422b8b3"]
}, Open  ]],
Cell[789632, 14219, 1096, 28, 91, "Code",ExpressionUUID->"f0f74a2c-ffb6-426b-990b-fae6e55dbdd3"],
Cell[CellGroupData[{
Cell[790753, 14251, 208, 3, 30, "Input",ExpressionUUID->"72587a0a-95e8-4396-964f-a82637e1b4e2"],
Cell[790964, 14256, 664, 16, 34, "Output",ExpressionUUID->"ecc99a2d-7da6-4c17-8cb3-0d587f0e9bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[791665, 14277, 183, 2, 30, "Input",ExpressionUUID->"bbdca224-8879-47d9-b715-629cbae90394"],
Cell[791851, 14281, 2087, 44, 309, "Output",ExpressionUUID->"11c04df9-41d8-4df5-a9a0-b74118e5b839"]
}, Open  ]],
Cell[793953, 14328, 869, 20, 72, "Code",ExpressionUUID->"3288f7e7-bd13-470b-8d76-8f9ffded499f"],
Cell[794825, 14350, 1617, 35, 52, "Code",ExpressionUUID->"0867f820-a86d-4b5e-ba28-0d73d7d24443"],
Cell[CellGroupData[{
Cell[796467, 14389, 332, 6, 30, "Input",ExpressionUUID->"b3e1b343-666b-433e-a80e-e29c2d4d72d1"],
Cell[796802, 14397, 10446, 197, 382, "Output",ExpressionUUID->"fd8d2f63-2790-4459-9be6-4bae001a0fdb"]
}, Open  ]],
Cell[807263, 14597, 2371, 59, 72, "Code",ExpressionUUID->"f464cfab-cd06-478f-8aa6-7b83ed63c2ab"],
Cell[809637, 14658, 1736, 40, 52, "Code",ExpressionUUID->"8ed58ee4-6600-4d4c-b448-f3c72f390825"],
Cell[CellGroupData[{
Cell[811398, 14702, 339, 7, 30, "Input",ExpressionUUID->"9c535847-e7b8-42c7-bc26-bae8e3e12654"],
Cell[811740, 14711, 247266, 4362, 367, 170553, 3104, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"70a3021d-e236-4a41-984d-ad9a7f1c8bd9"]
}, Open  ]],
Cell[1059021, 19076, 1086, 29, 91, "Code",ExpressionUUID->"268c8fec-ad96-4a3c-83c2-ca8e52285e1f"],
Cell[CellGroupData[{
Cell[1060132, 19109, 212, 4, 30, "Input",ExpressionUUID->"c1200373-8a1d-4c82-9ce9-52258541e863"],
Cell[1060347, 19115, 154, 3, 34, "Output",ExpressionUUID->"ebf578fb-2612-4645-a6ff-eb0d51af06e4"]
}, Open  ]],
Cell[1060516, 19121, 1027, 20, 72, "Code",ExpressionUUID->"70be6dcb-7b4c-4997-91ca-db66dc938850"],
Cell[1061546, 19143, 285, 7, 35, "Text",ExpressionUUID->"5ccb22c1-a8c1-41d9-b2dd-6809c1b617e4"],
Cell[1061834, 19152, 2263, 65, 224, "Code",ExpressionUUID->"e988d527-f426-4f55-97eb-0eeabc464e73"],
Cell[CellGroupData[{
Cell[1064122, 19221, 369, 8, 30, "Input",ExpressionUUID->"2646302e-b542-4898-9476-3fe96cccd46e"],
Cell[1064494, 19231, 45605, 766, 380, 9044, 165, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"8de3e264-bf20-4dc4-9d0f-db33f5ec5aad"]
}, Open  ]],
Cell[1110114, 20000, 184, 3, 35, "Text",ExpressionUUID->"723d7546-299f-47ca-9334-3d3d7fd2e548"],
Cell[1110301, 20005, 7589, 198, 281, "Code",ExpressionUUID->"e2eddec4-f923-4974-aa8b-2721df26a2b2"],
Cell[CellGroupData[{
Cell[1117915, 20207, 483, 9, 30, "Input",ExpressionUUID->"24ec46a4-5e2a-471d-a999-0b6eaf344427"],
Cell[1118401, 20218, 38370, 634, 374, 6699, 114, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"9da1aabb-99b3-4602-b161-8670ce085289"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156808, 20857, 332, 7, 30, "Input",ExpressionUUID->"c2288434-32dc-46a9-8366-cc36d6187788"],
Cell[1157143, 20866, 46901, 787, 375, 9874, 179, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"04aa2f90-b906-4bc6-9a20-5903bbf2eb66"]
}, Open  ]],
Cell[1204059, 21656, 162, 3, 35, "Text",ExpressionUUID->"8b409329-8559-4f14-aa77-9122736910a0"],
Cell[1204224, 21661, 1743, 40, 52, "Code",ExpressionUUID->"94d00b71-6dc5-4526-8ebe-ffcb00ded88e"],
Cell[1205970, 21703, 1833, 38, 205, "Code",ExpressionUUID->"61fe8a31-ddc4-439a-adad-3a8c68233c8e"],
Cell[1207806, 21743, 1856, 38, 52, "Code",ExpressionUUID->"b30f2352-dcf0-4ee6-940c-0d849203282e"],
Cell[CellGroupData[{
Cell[1209687, 21785, 537, 10, 30, "Input",ExpressionUUID->"d1d5f64b-e66e-45ee-b852-5b92ae90b710"],
Cell[1210227, 21797, 38597, 662, 362, 15441, 282, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e3d427fd-0fca-423c-84a6-6d507c1c2f29"]
}, Open  ]],
Cell[1248839, 22462, 1892, 42, 52, "Code",ExpressionUUID->"8f4fde19-dc7f-4802-9dd2-c890c9672b98"],
Cell[CellGroupData[{
Cell[1250756, 22508, 586, 10, 30, "Input",ExpressionUUID->"0b160e28-5f84-4122-a04f-fe1b26124a0b"],
Cell[1251345, 22520, 304402, 5301, 450, 168041, 3065, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4f1727af-5d89-45e9-a771-33cd21d67726"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1555784, 27826, 1167, 31, 30, "Input",ExpressionUUID->"d90e9f75-0080-4568-a148-9127454406aa"],
Cell[1556954, 27859, 159053, 2909, 380, "Output",ExpressionUUID->"84e1719d-a7b2-498b-b768-c848e0b6f3a2"]
}, Open  ]],
Cell[1716022, 30771, 205, 4, 30, "Input",ExpressionUUID->"d3f7904d-b9db-4909-8474-9f41b46e16ac"],
Cell[1716230, 30777, 401, 9, 30, "Input",ExpressionUUID->"bcdac52a-eed9-41a3-93e9-a39c12b4911a"],
Cell[1716634, 30788, 164908, 2977, 393, "Input",ExpressionUUID->"19b28ee4-de83-4aed-bdd0-ec3d46151cc1"],
Cell[1881545, 33767, 420, 10, 81, "Text",ExpressionUUID->"753b8be4-d89b-4cb9-ab0d-3fcd536c9965"],
Cell[1881968, 33779, 926389, 15469, 456, 179251, 3220, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"bc1dc772-eb75-49c0-a6d5-5a674992c57b"]
}, Open  ]]
}, Open  ]]
}
]
*)

