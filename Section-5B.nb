(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    991179,      17885]
NotebookOptionsPosition[    977656,      17671]
NotebookOutlinePosition[    978092,      17688]
CellTagsIndexPosition[    978049,      17685]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Section 5B", "Title",
 CellChangeTimes->{{3.903260036448679*^9, 3.9032600373556557`*^9}, {
  3.904480132085465*^9, 3.9044801484697857`*^9}, {3.9047443823005037`*^9, 
  3.904744386179234*^9}, {3.906054426397975*^9, 3.906054428745187*^9}, {
  3.9062255023828583`*^9, 3.906225507281196*^9}, {3.9062255655931053`*^9, 
  3.906225565776046*^9}, {3.906233498648278*^9, 
  3.906233498994379*^9}},ExpressionUUID->"9c6152ea-e5e2-484b-adc8-\
55b1b1d273eb"],

Cell["\<\
This is the second part of three notebooks in which the figures in Section 5 \
were created. To make any changes first Evaluate Initialization Cells.\
\>", "Text",
 CellChangeTimes->{{3.9039100620984592`*^9, 3.90391006433148*^9}, {
  3.904744391068102*^9, 3.904744463022229*^9}, {3.904824676786264*^9, 
  3.9048247257983418`*^9}, {3.9060543984932337`*^9, 3.906054416122662*^9}, {
  3.90622306867927*^9, 3.906223110357787*^9}, {3.906225482262166*^9, 
  3.90622554797069*^9}, {3.906233500819489*^9, 
  3.906233508325132*^9}},ExpressionUUID->"b6d23247-be9d-4139-a587-\
458f1e5c4a9c"],

Cell[CellGroupData[{

Cell["The false-vertex icosahedron", "Section",
 CellChangeTimes->{{3.9033619528666353`*^9, 3.903361987537897*^9}, {
  3.90474422335336*^9, 
  3.904744226982873*^9}},ExpressionUUID->"33345e20-1bcf-4b96-8862-\
77edd796f7ef"],

Cell[TextData[{
 "First we intend to see the ",
 StyleBox["g",
  FontWeight->"Bold"],
 "reat ",
 StyleBox["s",
  FontWeight->"Bold"],
 "tellated ",
 StyleBox["d",
  FontWeight->"Bold"],
 "odecahedron with that icosahedron inside."
}], "Text",
 CellChangeTimes->{{3.903260493697433*^9, 3.903260582879179*^9}, {
  3.903260681291992*^9, 3.90326070005473*^9}, {3.903278007748089*^9, 
  3.90327801019289*^9}, {3.903280375851713*^9, 3.903280395256674*^9}, {
  3.9032822630605383`*^9, 3.9032822688293047`*^9}, {3.90474435310218*^9, 
  3.904744353365768*^9}},ExpressionUUID->"3e8172c5-78cb-4f70-9c97-\
0875744945f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gsd", ":=", 
  RowBox[{
  "UniformPolyhedron", "[", "\"\<GreatStellatedDodecahedron\>\"", 
   "]"}]}], "\n", 
 RowBox[{"gphgsd", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Yellow", ",", 
      RowBox[{
      "UniformPolyhedron", "[", "\"\<GreatStellatedDodecahedron\>\"", "]"}]}],
      "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}], "\n", 
 RowBox[{"W", ":=", 
  RowBox[{"PolyhedronData", "[", 
   RowBox[{
   "\"\<GreatStellatedDodecahedron\>\"", ",", "\"\<VertexCoordinates\>\""}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.903278011733543*^9, 3.9032780187037287`*^9}, {
   3.90328018370919*^9, 3.9032801933341913`*^9}, {3.9032802856068697`*^9, 
   3.9032802905107718`*^9}, 3.9032803312671757`*^9, {3.903282253780739*^9, 
   3.9032822552462263`*^9}, {3.9032856994653597`*^9, 3.903285707281076*^9}, {
   3.9032999604083*^9, 3.903299965851841*^9}, {3.9040582691322536`*^9, 
   3.9040583282338457`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"260cd45e-0980-493d-814d-0143b927d7e7"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[1, 1, 0], Opacity[0.2], 
   PolyhedronBox[
    NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
       1 - 20 #^2 + 80 #^4& , 4, 0]}, {
      Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
       1 - 20 #^2 + 80 #^4& , 1, 0]}, {
      Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
       1 - 100 #^2 + 80 #^4& , 3, 0]}, {
      Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
       1 - 100 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
       Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 4, 0]}, {
      Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
       Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 4, 0]}, {
      Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
       Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 1, 0]}, {
      Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
       Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 1, 0]}, {
      Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
       1 - 100 #^2 + 80 #^4& , 3, 0]}, {
      Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
       1 - 100 #^2 + 80 #^4& , 3, 0]}, {
      Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
       1 - 100 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
       1 - 100 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
       1 - 100 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
       1 - 100 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
       Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 1, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
       Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 1, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
       Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 4, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
       Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 4, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
       Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
       1 - 100 #^2 + 80 #^4& , 3, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
       Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
       1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
       0.42532540417601994`}, {
      0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
       0.10040570794311364`}, {
      0.5257311121191336, 
       0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
      0.30901699437494745`, 0.42532540417601994`}, {
      0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
      0.10040570794311364`, 
      0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5, 
      0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
      0.10040570794311364`}, {
      0.16245984811645317`, -0.5, -0.10040570794311365`}, {
      0.16245984811645317`, 
      0.5, -0.10040570794311365`}, {-0.42532540417602, -0.30901699437494745`, \
-0.10040570794311365`}, {-0.42532540417602, 
      0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
      0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
      0.19098300562505255`, 0.42532540417601994`}, {
      0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
      0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
      0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
    13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
    15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 4,
     13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 19}, {
    20, 9, 8, 18, 16}}]},
  Boxed->False]], "Output",
 CellChangeTimes->{
  3.903280331747468*^9, 3.9032822756370153`*^9, {3.9032854439258337`*^9, 
   3.903285444046405*^9}, {3.903285568181137*^9, 3.903285568895808*^9}, 
   3.903285635372128*^9, 3.903285707656312*^9, {3.9032883965955887`*^9, 
   3.903288434753055*^9}, {3.9032884826006804`*^9, 3.903288486798892*^9}, {
   3.903289190285468*^9, 3.903289190869514*^9}, {3.9032999619599953`*^9, 
   3.90329997280851*^9}, 3.903300007714306*^9, 3.903300160833619*^9, 
   3.903300319013357*^9, 3.9033041707552223`*^9, 3.903304289823374*^9, 
   3.903304320767365*^9, 3.903304402340228*^9, 3.90330443260513*^9, 
   3.9033053568554087`*^9, 3.903305563336006*^9, {3.9033604281649637`*^9, 
   3.903360428899276*^9}, 3.903361564377548*^9, 3.9033618689911013`*^9, {
   3.903361900987097*^9, 3.9033619229164333`*^9}, 3.903364226213797*^9, 
   3.903366045765757*^9, 3.903366451027748*^9, 3.904046262800394*^9, {
   3.904058310435686*^9, 3.904058328794857*^9}, 3.904480166839735*^9, {
   3.904486408984571*^9, 3.904486409573862*^9}, 3.904569659405547*^9, 
   3.904570801364946*^9, 3.904586498298625*^9, 3.904660863563032*^9, 
   3.904751306118664*^9, 3.904770970377429*^9, 3.904996992206935*^9, 
   3.9060502346516438`*^9, 3.906126186660982*^9, 3.906223060213833*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"80616452-6adf-4b07-b887-1d5115d98104"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s find a vertex of the icosahedron:", "Text",
 CellChangeTimes->{{3.903280413772723*^9, 3.903280424069291*^9}, {
  3.903361587377068*^9, 
  3.903361606601089*^9}},ExpressionUUID->"55aa263b-60e7-4600-b1b0-\
54779aa96d17"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gphw0", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Red", ",", 
     RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"W", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphw1", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Red", ",", 
     RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"W", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphe1", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Red", ",", 
     RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"W", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"W", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphw2", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Green", ",", 
     RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"W", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphw3", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Green", ",", 
     RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"W", "[", 
       RowBox[{"[", "12", "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphe2", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Green", ",", 
     RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"W", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"W", "[", 
         RowBox[{"[", "12", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "gphgsd", ",", "gphw0", ",", "gphw1", ",", "gphw2", ",", "gphw3", ",", 
   "gphe1", ",", "gphe2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9032804673526087`*^9, 3.903280496429137*^9}, {
  3.903280565810142*^9, 3.9032806510573797`*^9}, {3.903280686301585*^9, 
  3.90328069524025*^9}, {3.903280737985668*^9, 3.903280911698886*^9}, {
  3.903281039750495*^9, 3.903281132354375*^9}, {3.903282065531124*^9, 
  3.903282077398492*^9}, {3.903282272831087*^9, 3.903282273799755*^9}, {
  3.9032826057803917`*^9, 3.9032826546796637`*^9}, {3.90328416307554*^9, 
  3.903284183694509*^9}, {3.90336157374404*^9, 3.9033615781827908`*^9}, {
  3.90405833728863*^9, 3.904058340842505*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"a83b8941-762d-4b5a-9a6a-aa1c6cb5e1ff"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}, {-0.5257311121191336, 
        0, 0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311364`}, {-0.10040570794311364`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417601994`}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417601994`}, {-0.16245984811645317`, \
-0.5, 0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311364`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311364`}, {-0.42532540417601994`, \
-0.30901699437494745`, -0.10040570794311364`}, {-0.42532540417601994`, 
       0.30901699437494745`, -0.10040570794311364`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417601994`}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417601994`}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    Point3DBox[
     NCache[{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
       1 - 20 #^2 + 80 #^4& , 4, 0]}, {-0.32491969623290634`, 0, 
       0.42532540417601994`}]]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    Point3DBox[
     NCache[{Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
       1 - 100 #^2 + 80 #^4& , 2, 0]}, {
      0.5257311121191336, 0, -0.10040570794311364`}]]}, 
   {RGBColor[0, 1, 0], PointSize[0.02], 
    Point3DBox[
     NCache[{Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
       Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 4, 
        0]}, {-0.10040570794311364`, -0.30901699437494745`, 
      0.42532540417601994`}]]}, 
   {RGBColor[0, 1, 0], PointSize[0.02], 
    Point3DBox[
     NCache[{Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
       1 - 100 #^2 + 80 #^4& , 2, 0]}, {0.16245984811645317`, 
      0.5, -0.10040570794311364`}]]}, 
   {RGBColor[1, 0, 0], Thickness[0.01], 
    Line3DBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.5257311121191336, 0, -0.10040570794311364`}}]]}, 
   {RGBColor[0, 1, 0], Thickness[0.01], 
    Line3DBox[
     NCache[{{Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 
         0]}}, {{-0.10040570794311364`, -0.30901699437494745`, 
      0.42532540417601994`}, {0.16245984811645317`, 
      0.5, -0.10040570794311364`}}]]}},
  Boxed->False]], "Output",
 CellChangeTimes->{
  3.903280509484075*^9, {3.9032805443490257`*^9, 3.903280595287057*^9}, {
   3.903280639481658*^9, 3.903280658545176*^9}, {3.903280753818783*^9, 
   3.90328091192772*^9}, {3.903281080891005*^9, 3.903281132602275*^9}, 
   3.903282277991721*^9, {3.9032826352286253`*^9, 3.903282656421669*^9}, {
   3.903284165333515*^9, 3.9032841855712643`*^9}, {3.90328544412609*^9, 
   3.903285462772975*^9}, 3.9032855692643747`*^9, 3.903285714956439*^9, {
   3.903288402373845*^9, 3.903288434817562*^9}, 3.9032884869928637`*^9, 
   3.90328919100397*^9, 3.9032999730646057`*^9, 3.903300007806175*^9, 
   3.903300160901649*^9, 3.9033003190838633`*^9, 3.9033041708402033`*^9, 
   3.9033042898951387`*^9, 3.90330432082691*^9, 3.903304402401237*^9, 
   3.9033044326796*^9, 3.903305356926178*^9, 3.903305563428474*^9, 
   3.903360429054283*^9, 3.903361611877102*^9, 3.903361869034067*^9, {
   3.903361901035419*^9, 3.903361922961087*^9}, 3.903364226249949*^9, 
   3.903366045808485*^9, 3.903366451068035*^9, {3.904058332181388*^9, 
   3.904058341015485*^9}},
 CellLabel->"Out[262]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
pdlct0DSXHNOJUpG46XX9OST/HBJwtwLUm90o9abQKX7AONtEeOXnxOlaw6y
YYoYB/Q1bz2IOEeYtY/iYehIDuRmULwUgSduACk4X2Xxgjg3JkSxzM8StF4z
0Ii9BbsloJbJJCBOgau8CHHC7hIXscyHdExr1Ey5D2Tk6A7aL2Ld7gW4t1jc
Cy8/q/dBMm4SbXrSAF/Znbyf7kDTUW3sVneC3aoD9U8R2K1GwLpQZf3TAFi3
lsU0Fa9Ta8fE5K37o0cMVKjzUlACRXzdBYZyvl4OLpzbKsP07DHLN7B8TV7u
B3k5uuP9LavXmi+Eu0klZQ33/V9+j+lE4awLWr3BK7Smy4Rzf3JtlAO1Ua1C
rK8iM9wmgLgmvjbyrno1gKTMiKXKXHeNCvuNI+qqdbSvIEW460CpuxxcmQwr
s7ApdVNAqvPAa+UA04xiShm4jGlFGn5HYf0SkOgegDXaPDb9g3dE6amHxOx3
v8xozz5wO8t1mVrb/XuVtmswIXwDUC3VgrXCZpCSa6r01PWAbYuqmQzbnSv4
usBe2Sq+RMATraXehHQOLBiuBNWSuoE2467Pu74aoc4lFEynFgnpnMVPT7lj
8AMgPX9dsVdPTPQ3r3UD9uuihSqHvUgRfZHW/JUhU5OgfC97BhRWo7awCk2A
791mjVgdsNktgHqxSup18dTnhvuZOPGmxbK9vBMIRHcArsqsBpWUelxbvjxL
a+oEXas4jOxUPG7K0Bq5qFG4tRFj0IMgQ0fPffsKztBdgPgaQDytiHNPJWdm
rerokFRdP+JNZ26NnZyajv/I02QnX3xYzHVLOk21Yq6vmT/KZ65Xhtd4p0nX
ngVH5GvP5XpOWbputuTn+toV+aKN99CNd96pRxN1LQjwCHV5wnZR63UtGNlZ
YLyKvvEitGIYJOY/Uli/ChQcMV0FmAbxTF0pN0yzwI6NRsNy0Rb191cMkLt9
9zk5ltuWynlLn4WYJrKTO8d4S4q+cuBdMm8D2ToiTMQTi6wiINykCNO/DeF6
PoYU63MdMrY7W+QMrNcbkGT7V4MNlenKVF1uyTz9DhMsWUxAG/J1wHIP4/Qd
Pe32a1bCVcDso/X2SvgrfMvN2INYCa+8/9aB73m14WjEnICWyfHd53ir2F5B
M2BupN0L8DSw4+2Afl2VpRei3+jnc4d+mmYD/+6dh2mefv8NiX7VmM7xsg80
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
E1vOFLNnXaIrLWCWKU9JKse/87Y49MtXxfgrd9Mx77mc/qLRftCNJDtBtZUf
SSUeAiw2gqbrTNBgh0ttxjwGUhntNt9JsQx3hSnUCyscCo0MM42XXK3ZIz+t
q6l+ij1gLzvzZ8PM3qGv3sVbeecyIZbFt1aGwrSl0Ehv1lJ4/NEneItO/K6X
aL9+p2AxNYloMvQ9W1Gl187NHIiye8/9vM3cvFcQpzNXbInibesKuqV89zpx
+LrtdjvnVB7vLyR/D1i3ZJrmJtA0nQnWSGWC5VQ+mvW6C4w9avHll3vkXsBf
DbBGbZI/SsmZy6+QS6UiyR0ETqgtpiWO+NPciRTv08ShMcNLE/ZIKanDrgIf
3/eMOH7fM+LEvhcjpm58lQ6994uCyFSEVtOarfTFjjeOXmvox1niNEs8Zoi6
KFg/c4XY86Mx3kSe9+mplqJdeCo/sV7cDzxwI2h4toFWOFxZueExhrcZC2u/
ZPX42P1VrHrmqEVepmBWb7heHBof521iz9UmQ3VB9ShuieltXIrTgOJlCfud
1MSlL6giW94S8XH2W6Sku2m2snzNlwUxzFvEcZapZWujS6emkZL2bU5aTe17
KoUtr1nitUUSeeDqM9XnrloiPwWIbMDNzPawwlKdrOSy3NdpZ56bQKM6JIk8
9srzlsgCSE/tjiK51URG4NM+Mz72iJjZsp3TlTqYXlAwm+doXhSnUSoyn7p4
OnxmXedLbI7f/gBxeOVBuutrnO/9Oig/jif6PyIzzVxG8fia5PGWV2yO3vVY
lLP3aAsjVXfv60Zho+/RPjpCZAgiAllkU5yi5a3EotTZI9F436JujZmlg5kU
/WP5cl+QWb+P2QHsTzY8Mz070C3Kw0OS1kaguiOA1jyYhW6ytHI1Pfg8mU8m
l2jVKhw1n9WcNs3RufzhOslpDnC6VHH60L3R954VM1vvlN7kFLo+TgSmylv2
0W48QlzR+KgoX3mrKF97KVFxLQll+fJdorz7NE0jkZQub71cEEfMU4r3EWff
iv7/z3ib2k2f+hJRRzr7ltXZAUni4agojFWQeK/vfpjEEuhgzg7rrL5Fz5tY
2r5ezM4fFuVnHjcketOLC8IketPLalZBE8j0FSSJntCi6eXGeBK1F4raymoS
eaYhRfxF4nP5VyKz9D3eSI95vy6KoMZlnJBUSmWS7ov+f7fQr+qDCctnnyqZ
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
R978nJh84WFRvu0qyXKRWBaZY/f/riCqaSOyi4jjUchxLe9z7LyPjqqkFvzr
07v+Nhog81l+aL+YfOhOMf2R7ZEs0p75rGUaeVbdmO2iFdLpu3fJqlUvLbdr
tunPM5ZH8g3M4Fpw5ev35ctVYR49v30dmDSSPGbdqqWtmug0lSqTkKYVVkcr
HrCTm/n4dZyMlVTlmam0y5SjrClDT6P8XpRykdz/72F22Xoj102j4qwakMzM
PvmwmPzai+LID9/g54C+ERlJIilNH4rj625WslXesFjMnjYiZk7po9FFHlrq
qZ4p0h5Du2s+QFZSRd7CULUGuGtF1R5AVQa46+tBaySFNaNrnZ4cagB+YoNf
z5xrG4XxJz4tZm+7jnnwuPjyU8KUtqK2bDZPHCoa1E9Ho5+SBBInGdngzNza
bXqgyH/xLAT1tDMjw5EXnCdI//okQdMvPSOmv3BAErSI9hlF0JYoGzasFeXe
TkIxqlz02XylqmJJPJjv5cI8eHb7J/LlY5IHz3ZkgN2+AUhfwXlmhfIZck61
goRtkgRwtZA1i6rS9I5f8zY7+E8Ci5MyzgjygoScJnjGP3MTQ6wmftIu5KIX
4L2M9+lZuvi1PzKaG1bRQrgIwpTEm6oJ/S+j6sQ4+Wf3SoQX4wrbjwJs08BE
3wRaGaeslHub+Xdnr9rD9YPqRlCHzrf1wVzMy6gbWW76iZjY9Je8zXT/9xDM
qAbwr6amz/s1lbL73xFH3nlGzP5LLxUHlmmCnqZFaaNvFCT6nhx1q8L/1qti
9okHPfTLt1wrJiJfcviSc/hpQxpkqtvutTnvco8C+UoAcgr75ptsDJdrcvxc
ZdmmyGkWimP+3BOO6Cg26XduuMEAzBOKl8iLoG79JVxTBCpS6wRA0ha1qbwn
UPU8l4rrrAuuBjiyuYywKyeiy5ZiwpWxXcL7zPSTD4qZu28zKHcBg7Qa2OB3
5csVQZB9G3zNHE/cnBpqE4fXDfMWZdg6zrCzV4g9t2zjLToo7dNTdXkx09cn
a+ml8vrKmXS3L/d6Gsx6gLfSh9l5/yQIZUa6FmCbVzL9v7oNrpFMy+swg908
/cgI12Dp7ghCnSaoJz57v5SSHoDzqaAJVDhfBqpiChjRy8HNsWn5tzy1peHM
WzjLpQYJ54UOnDN9/+Pk4SxKOCd/cW1lqPpwZiScdJnLVMI6IAztwKcsscJw
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
j8JfUsvsqt/OHQDv/vz/x2+I//B/AYZzUEI=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"28ca19d6-76c3-4611-8c9e-3c722b834b12"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"W", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}], "-", 
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"W", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "==", 
      RowBox[{
       RowBox[{"t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"W", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "]"}], "-", 
          RowBox[{"N", "[", 
           RowBox[{"W", "[", 
            RowBox[{"[", "12", "]"}], "]"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"N", "[", 
        RowBox[{"W", "[", 
         RowBox[{"[", "12", "]"}], "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "t"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.90328177283813*^9, 3.90328186967636*^9}, {
   3.903281903508363*^9, 3.903281940511753*^9}, 3.903282123966516*^9, {
   3.903361898551347*^9, 3.903361916953228*^9}, 3.9040583505138702`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"48b1a36d-3d81-444b-91bd-c2426ba1fbe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "\[Rule]", "0.3819660112501051`"}], ",", 
     RowBox[{"t", "\[Rule]", "0.6180339887498948`"}]}], "}"}], "}"}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.90328212432456*^9, 3.903282450571064*^9, {3.903285444163621*^9, 
   3.9032854694003143`*^9}, 3.9032855693414307`*^9, {3.903288402563114*^9, 
   3.90328843482792*^9}, 3.903288487053097*^9, 3.903289191036834*^9, 
   3.903299973093047*^9, 3.903300007817874*^9, 3.903300160919807*^9, 
   3.903300319093933*^9, 3.9033041708503447`*^9, 3.90330428990793*^9, 
   3.9033043208601437`*^9, 3.903304402411625*^9, 3.903304432690836*^9, 
   3.903305356935967*^9, 3.903305563438841*^9, 3.903360429095107*^9, 
   3.903361869098463*^9, {3.9033619010474586`*^9, 3.903361922974888*^9}, 
   3.903364226264461*^9, 3.903366045819358*^9, 3.9033664510774527`*^9, 
   3.9040583527618523`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"67ac7865-c412-40c6-b252-c0fab114c83b"],

Cell[BoxData[
 RowBox[{"\[Lambda]", ":=", 
  RowBox[{"s", "/.", 
   RowBox[{"sol", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9032824250084963`*^9, 3.903282458275326*^9}, {
  3.903282496223778*^9, 3.903282547229645*^9}, {3.904058355906003*^9, 
  3.904058361221745*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bd6df76f-e2ab-459e-aedf-3a2829dc6303"],

Cell[BoxData[
 RowBox[{"0.3819660112501051`", ";"}]], "Code",
 CellChangeTimes->{{3.9032824437190533`*^9, 3.903282458610876*^9}, {
   3.9032825027721863`*^9, 3.903282547918481*^9}, 3.903283918158164*^9, {
   3.903285444171815*^9, 3.9032854709750423`*^9}, 3.903285569361421*^9, {
   3.903288402582035*^9, 3.903288434869568*^9}, 3.903288487069785*^9, 
   3.9032891910486927`*^9, 3.9032999731056433`*^9, 3.90330000785905*^9, 
   3.903300160965601*^9, 3.903300319127334*^9, 3.903304170883604*^9, 
   3.903304289948845*^9, 3.903304320868578*^9, 3.903304402442892*^9, 
   3.903304432722554*^9, 3.903305356972142*^9, 3.9033055634737473`*^9, 
   3.903360429107733*^9, 3.903361869370504*^9, {3.9033619012323923`*^9, 
   3.903361923135962*^9}, 3.903364226272593*^9, 3.90336604584866*^9, 
   3.903366451101696*^9, 3.9040583648313828`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"a00fb5c4-9ac7-417f-a0e8-fe855a08b8e1"],

Cell[BoxData[
 RowBox[{"v", ":=", 
  RowBox[{
   RowBox[{"\[Lambda]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"W", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "-", 
      RowBox[{"W", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
   RowBox[{"W", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.903281891328455*^9, 3.9032819140789003`*^9}, {
   3.9032819525231733`*^9, 3.9032819568256607`*^9}, {3.903282031873803*^9, 
   3.9032820488283453`*^9}, {3.903282552811685*^9, 3.903282555108782*^9}, {
   3.903283805017171*^9, 3.9032838122406273`*^9}, {3.903283912843007*^9, 
   3.903283915629869*^9}, {3.903284061114337*^9, 3.903284063709371*^9}, {
   3.903284150750284*^9, 3.903284154989805*^9}, 3.903284935691728*^9, {
   3.903361630515728*^9, 3.903361634312769*^9}, 3.904058368803627*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"5af828b4-52d2-433d-ab0a-af2a27a6dc5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.551115123125783`*^-17"}], ",", "0.`", ",", 
   "0.2245139882897927`"}], "}"}]], "Code",
 CellChangeTimes->{{3.903305545264799*^9, 3.903305563484223*^9}, 
   3.903360429147468*^9, 3.903361635007286*^9, 3.9033618693906*^9, {
   3.903361901240608*^9, 3.903361923147778*^9}, 3.9033642262906713`*^9, 
   3.903366045856948*^9, 3.9033664511111*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"45dbbcb3-fd67-46b4-8b54-4d60b2965224"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.551115123125783`*^-17"}], ",", "0.`", ",", 
   "0.2245139882897927`"}], "}"}]], "Output",
 CellChangeTimes->{3.904058198833621*^9, 3.9040583710892067`*^9, 
  3.90448016716372*^9, 3.904486409446477*^9, 3.9045696599223547`*^9, 
  3.9045708014582987`*^9, 3.904586498456974*^9, 3.9046608645402*^9, 
  3.904751306213756*^9, 3.90477097048792*^9, 3.904996992564083*^9, 
  3.906050235107478*^9, 3.90612618735849*^9, 3.9062230610584507`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"5f55fa75-7578-4a50-85fa-5e42981ab6b4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"gphv", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Purple", ",", 
     RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
     RowBox[{"Point", "[", "v", "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.903281970018711*^9, 3.903281999277698*^9}, {
  3.9032820890680103`*^9, 3.903282105069401*^9}, {3.903282142475706*^9, 
  3.903282151456541*^9}, {3.9032828448692923`*^9, 3.9032828456093817`*^9}, {
  3.903284938502434*^9, 3.903284948612885*^9}, {3.903300004046378*^9, 
  3.903300004815805*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"aeaf4846-226d-46dd-852a-ca6d821d5a3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gsd", ",", "gphw0", ",", "gphw1", ",", "gphw2", ",", "gphw3", ",", "gphe1",
    ",", "gphe2", ",", "gphv"}], "]"}]], "Input",
 CellChangeTimes->{{3.9032820022378683`*^9, 3.903282002435947*^9}, {
   3.9032822841464663`*^9, 3.9032822845284023`*^9}, 3.9032849430922813`*^9},
 CellLabel->
  "In[1426]:=",ExpressionUUID->"ef04ee90-a4c3-432a-aeb1-3d80950a589f"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    Point3DBox[{-0.32491969623290634`, 0., 0.42532540417601994`}]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], 
    Point3DBox[{0.5257311121191336, 0., -0.10040570794311365`}]}, 
   {RGBColor[0, 1, 0], PointSize[0.02], 
    Point3DBox[{-0.10040570794311365`, -0.30901699437494745`, 
     0.42532540417601994`}]}, 
   {RGBColor[0, 1, 0], PointSize[0.02], 
    Point3DBox[{0.16245984811645317`, 0.5, -0.10040570794311365`}]}, 
   {RGBColor[1, 0, 0], Thickness[0.01], 
    Line3DBox[{{-0.32491969623290634`, 0., 0.42532540417601994`}, {
     0.5257311121191336, 0., -0.10040570794311365`}}]}, 
   {RGBColor[0, 1, 0], Thickness[0.01], 
    Line3DBox[{{-0.10040570794311365`, -0.30901699437494745`, 
     0.42532540417601994`}, {0.16245984811645317`, 
     0.5, -0.10040570794311365`}}]}, 
   {RGBColor[0.5, 0, 0.5], PointSize[0.05], 
    Point3DBox[{-5.551115123125783*^-17, 0., 0.2245139882897927}]}},
  Boxed->False]], "Output",
 CellChangeTimes->{
  3.90328228475242*^9, 3.903282559546706*^9, 3.903282669816657*^9, {
   3.903284943600897*^9, 3.9032849504778633`*^9}, 3.903285444279374*^9, 
   3.9032854753414392`*^9, 3.9032855694381533`*^9, 3.9032857180471087`*^9, {
   3.903288402690001*^9, 3.903288434972555*^9}, 3.90328848718817*^9, 
   3.903289191153356*^9, 3.903299973180458*^9, 3.903300007944475*^9, 
   3.903300161108632*^9, 3.903300319210348*^9, 3.9033041710019827`*^9, 
   3.903304290038074*^9, 3.90330432093855*^9, 3.903304402504898*^9, 
   3.90330443279454*^9, 3.903305357033945*^9, 3.9033055635741653`*^9, 
   3.903360429216146*^9, 3.903361869470883*^9, {3.903361901290698*^9, 
   3.903361923212113*^9}, 3.903364226310598*^9, 3.903366045900673*^9, 
   3.9033664511485023`*^9},
 CellLabel->
  "Out[1426]=",ExpressionUUID->"17e1819a-1786-4f4c-ab7d-ef2d57fa9c36"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ico", ":=", 
  RowBox[{"UniformPolyhedron", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Norm", "[", "v", "]"}], "+", ".011"}], ",", "0", ",", "0"}], 
     "}"}], ",", "\"\<Icosahedron\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphico", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.4", "]"}], ",", "Blue", ",", "ico"}], "}"}], 
    ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.903282172917288*^9, 3.903282197571726*^9}, {
   3.9032822922426147`*^9, 3.903282351589727*^9}, 3.9032838356696444`*^9, {
   3.9032854539591007`*^9, 3.9032854965629673`*^9}, {3.9032857224671593`*^9, 
   3.903285724112953*^9}, {3.903285952558173*^9, 3.903285953143008*^9}, {
   3.903286063312093*^9, 3.903286090017908*^9}, {3.903299932814953*^9, 
   3.903299940912971*^9}, {3.9033001559953957`*^9, 3.903300178678359*^9}, {
   3.903300327287675*^9, 3.903300327372217*^9}, {3.9033041660143633`*^9, 
   3.903304168463614*^9}, {3.903304285466598*^9, 3.903304315197816*^9}, {
   3.903305247145564*^9, 3.903305306301525*^9}, {3.903305344748107*^9, 
   3.903305344895146*^9}, {3.9033443449854193`*^9, 3.9033443450058317`*^9}, 
   3.903361862424099*^9, {3.904571126248313*^9, 3.9045711339543552`*^9}, {
   3.904572005880377*^9, 3.904572014524523*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"11f01768-91ba-4e8f-9361-103c87aa5dba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphgsd", ",", "gphico"}], "]"}]], "Input",
 CellChangeTimes->{{3.903282204582398*^9, 3.9032822097337627`*^9}, 
   3.903283758499989*^9, {3.903285624983827*^9, 3.903285625304987*^9}, {
   3.9032860686477423`*^9, 3.903286068981037*^9}, {3.904058384222519*^9, 
   3.904058384383216*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"5d1679ce-b41f-4e58-b630-98c997b4956a"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}, {-0.5257311121191336, 
        0, 0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311364`}, {-0.10040570794311364`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417601994`}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417601994`}, {-0.16245984811645317`, \
-0.5, 0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311364`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311364`}, {-0.42532540417601994`, \
-0.30901699437494745`, -0.10040570794311364`}, {-0.42532540417601994`, 
       0.30901699437494745`, -0.10040570794311364`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417601994`}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417601994`}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {RGBColor[0, 0, 1], Opacity[0.5], 
    PolyhedronBox[{{0., 0., -0.2239871132416678}, {0., 0., 
     0.2239871132416678}, {-0.20034016451692502`, 0., -0.1001700822584625}, {
     0.20034016451692502`, 0., 0.1001700822584625}, {
     0.16207859775006517`, -0.11775699414489633`, -0.1001700822584625}, {
     0.16207859775006517`, 
     0.11775699414489633`, -0.1001700822584625}, {-0.16207859775006517`, \
-0.11775699414489633`, 0.1001700822584625}, {-0.16207859775006517`, 
     0.11775699414489633`, 
     0.1001700822584625}, {-0.06190851549160265, -0.19053481893946464`, \
-0.1001700822584625}, {-0.06190851549160265, 
     0.19053481893946464`, -0.1001700822584625}, {
     0.06190851549160265, -0.19053481893946464`, 0.1001700822584625}, {
     0.06190851549160265, 0.19053481893946464`, 0.1001700822584625}}, {{2, 12,
      8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5, 
     1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
     11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
     10}, {9, 7, 3}}]}},
  Boxed->False,
  ImageSize->{355.7742383904705, 359.9882397861165},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.9966158319613285`, 0.07962856499259559, 2.730784596265072},
  ViewVertical->{-0.1340395026703359, 0.47223331459751344`, 
   0.8712227661787396}]], "Output",
 CellChangeTimes->{
  3.903282210701138*^9, 3.9032822970300217`*^9, {3.9032823327832527`*^9, 
   3.903282353843021*^9}, 3.903282564878316*^9, 3.903284229114889*^9, 
   3.903285444345811*^9, 3.903285499759486*^9, 3.9032855698137197`*^9, {
   3.903285625491562*^9, 3.903285628953492*^9}, 3.90328572663807*^9, 
   3.9032859585274897`*^9, 3.903286099172228*^9, {3.903288402785355*^9, 
   3.9032884351292067`*^9}, 3.9032884872727137`*^9, 3.903289191206525*^9, {
   3.903299936920895*^9, 3.903299943034073*^9}, 3.9032999732758627`*^9, 
   3.903300008150326*^9, {3.903300161270158*^9, 3.903300183353504*^9}, 
   3.9033003192817593`*^9, 3.903304171385683*^9, {3.903304290236157*^9, 
   3.903304320991621*^9}, 3.903304402559396*^9, 3.9033044328642807`*^9, {
   3.9033052501556273`*^9, 3.9033053092707767`*^9}, {3.9033053479061413`*^9, 
   3.903305357111401*^9}, 3.9033055637779903`*^9, 3.903344350097515*^9, 
   3.9033604292979116`*^9, 3.9033616454033823`*^9, 3.903361869660492*^9, {
   3.903361901533989*^9, 3.903361923363392*^9}, 3.903364226367672*^9, 
   3.903366045935122*^9, 3.903366451174987*^9, 3.9040583851168633`*^9},
 CellLabel->"Out[275]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ldJMbCVOVsIE/FMSb9VGK3PW67y95oQ4Z5WO2Ig0AbDRHRf/XD4cNMEWzvGr
qwJ7vN8DO3njq29ws1aI3z57hH30a18Wj9m6UoE+LfZWvUi2WH6Sf99P22JF
0aB8zYRSzVJj1bqF1tpBEs9cb8fxikANnIBDSwPrDi2MdHEy1mlqWL9NUUBb
hax8QUGUyt9qOo6y8bR50b1wnFTELqXFzEjlOt3AdDwyDgEb/xVBRkqR4Uek
ZzSKhjgxUCwYiPs1Pz5Mpz84B7xG+PeLw31VggVXsBCfa6l8Zqm+7MpyXfEj
vLFY33iVuYvNFaf5c9oWGkrGaVsqTDbrC9wLTTWDxYKOOKfjKU7Bw7MTvc/T
EmUvaaLLD4NuEQZ9R30zKjHDNawIxMqAeYGvnLyayapOeyXMZLV2Lu0gBzYC
M/IoOQwokTNLV9Exs3+f2OZbW7yLklxiJC3IcKafOOeTcevlq8wRfDj0ozsT
Y+3LrbUZsqS4pGSpseLKcnPVI3c6657gnQ1RkuJ07OBUXJpdU/UubXMt5c/T
z2abK96Zayi7GFuoLR5niYWKwnHfzpSQijN1MaKMA8N1RLwJ7hKSQc7UJeJN
MJgRe3dubOMlolFt+URWoonMY9UXmcjxzaa/0S1kNX+j5jNbV3JQ+JsbsTNa
Y/I388nL+Lbx8v1S7F6Q45I/ucD0xivsxs9+SjNMvneJRvlGi+R8bZUfJrTN
r2lmdwd6BYfMFSSmhbVxIuf37epd7F5btVRTXE88LjRVPpFtKH9wsa36UZYQ
LMbvdNRcFqxxBun+N7Sn7zmDzxGTnBPaO8QoEUrbUkGyybNbxaggM0Qp0cgq
VxZgweoF2BXYovjrZkCpkxrCFt2IjdhaEFDrgSd6BB4F3cAXJIEkQBKdILBY
7BNE6PyWLSzb3sHubh1lt0+cYHfXrZesxm7vHKdbUG/oZNmKUrbY3lp1Z2yg
nTxRCY+3rIIu7okHOZ1HdbpIhJyWS4KoItoj6alugksvvtBYNVizel1FaZHX
BW+hXaqqFvfz5RL2+4ZsQ9kRseIWj9ikrQe0oE/L8Wg5BvqGLwBdFYq9M33j
K2z+zP0su2svu/Vr32bJj/7sZ5wOTg5/Pqdquas7s9g/WOWpL76cTtRTY0Ab
i4m9e6ep6iiRQ5tQDvdBunkSUaN7IquQSuLcfGKpumBsobZofKEoOR5WEueG
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
jP5w9RMDrDSggDJXo8ChTPb6KUEF/3HllwjksreIEdokI3QhwSs0xfh6hn/1
eZHonyVaBEEpG0HDdoIielZCXzXTvaoeWBUi6IIkiL72s13eIIb9KKQRvMTS
IQmiPM8ObWJECksBgoryymQtlsnyxFSG7KkYcOTKPZk/73Hf4+B/Q0mFhzwn
Kk5fCnpiRI9ohelpX6eNK29Fttba7QzNVgw7k/Q4anFMWVgddq8qwMxlECLe
TSf/MJJ06s1gJyZYxgt2zgyZGDFDJlYi1OMo5ahlMqGdNVI7C7V1HUo75F58
wl3PirzY6N9yMsSLQ7xwXB8nXmiLERElPi8ivPmz+DOIHNqInnaflYwgI85f
5rPEhVBPivZlgJVUsMQSwdUcFfTKzWqBm1XhE64PAVbkHX7YR5H0UqYZ2o5R
dvvZy4wVglgpE5QklaEpSgzVtAlqHKWYO/c/0E6WVhiwInyeB4vHCsH5Nsf8
dWJEzBC/IS6CelXOEMveYpXEUEyIiKT1SZVAXq/1OENa6hV7+tkHRJ0QVcpG
oiP3S4XJndzkdi60tn+eNrTqjHwv7fXPQxtO+n1ZNTA7C3+PgkCSNwxifxZJ
VemgLZh55IzkrwjwV5lHUs25kpILKtuG6BMZbOTx7PgK5+BtSZtJnmCsTuST
o+cTcSi1Fte1xiYBZY7cLxW4O5eKi3cuNDZ9nrZktrb+0xyB2npxgpaj/tbS
YNc79EmgX6QLKfj8c2LLs4s7hl68s3vkVbWKuWVdo9+zVWLXq8QUPQ4o8u4/
/VchiSXDEpvt6WLzXFbZY3sZKwExVB1BVg2mrFSPnLH2aoIZDvKbHM6viBOd
35AK8ZTzOH22qpUZ0TzskHwIHNravk4bdzXaS1frbXtqbmzjV1liYaSLo740
sO7J5a3djy9ObnlxeWLzc8nstr6nvUX9p85J1CvAhT0WyK+CLkDewInNir0T
VoX4yFLn9q4xL1JMlOsEyolw8SuUayXAVP/LdfUZ5VtpaydmApyQAEtLKnid
g/kZ+nTDPK3ZNju6CyUle5aKM+2zE71kOLSPc4zlVTt7hmliQvv44ljPmMiL
r7zKWDm4ZrASr78/AwLDu6f9fwqgFam/d4zNPHCExW783tc4RVPDKkfutjQw
Qlptt554IJiih5K83uyDRauF1lAqgxq/c/hYuzw5NXUyaW20RHQQ/AJ8k4KX
+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
Or59Nw7lKaPuhBoXhVYV2xdAeibll59I+djFVslHrYRFhkZB1W0F7UrkZipH
IkOBzJNyM3rRWUshnxZQgaM8hd/foy2tkiCfmcXlkxdZKbyV95erwkEvsi2x
2ItsKxAZkZcNhJkQzhXCLjPhn3voDu/y8qU6C0PXlITnQE3ewpJwdjEPGwMl
pepsfbJ26yOejBRLwqUbbu6zxYLqCnmYKtJec4JYdieKJStW4cFblfxyKh1W
uRC2VRC4l5RrKbci2BXoCx1LvPm9uzy6EncDuhdNF4tnQbGYsIEO4vVaLbUn
AL5NvGTH8dU1oiCpbpuRTfQWADHyoxZZLOI8V0jvd1E93ExT3qMVZIgpXTRA
79nQabpDfCfpFf5c+O4LpPOXBgZuVSvZC++5WSN85o7bwl9+6fmPR9cA6ts0
RkFVfpoDTSU4ejiI91fuqqycX2C9Bdh/JWWTVJSIv7Fh3RbVctqsbgGFOQsK
8xJNajXbjBgtoL4u6pV2j03RSl+s/A8fGL187Mi45/9qbKzLy749OFghuCXk
4j1HUItkRBjPbx4PLUHiOn/zMY+ujxW4TgJc54BdjzFc7Wpq2zUt3gWikwDX
cspupyxxtZ3CZnLVXVntjl58ZHYCk4VfhP15COzV7etHCNxfzY5terulsXJl
autQUSCcu7Jrx1BtRa8nXiGe55uq6kolAWl2YbDfO9/bLavizDW2LeiqHvms
TnkpZqwuZoElbwV1sZiyf6lIoKmttC1DEbgKSqMPuv2eRALLeWj+ys6RzYTx
2zMjG67snxy/fHh6/Ff9y7p+NTjQ5RUiOk9t6aqtXuXR6+Ltx+RazL/zU58P
aTm4JqLd2YjRasBQf2fR1DWVxZOmLGq33sRygMqicmyB/hSw7XzK3kTmIGvb
dthD03uWCE9TApGGZrd/MzdZnsz6rXI6re1k2/C6MBujWUpHmLjJdUNvt7ZU
JPfFezGelNdfesa7uHe7Vxtc6Z3vaPNOHbohrGiUJMpFVbqwyI9h8Jxy5+Rb
8SauKXGPgDK7kSXOLrPQ/adB4nIp+5lG2dXEXUqJRwweEpJGVqUKr7cqUUGj
JmeRU60jpwpkzugXKFMiW5lISPt2d9UmN+ucZSlpnv/mimXe6VsOeqcnN3kk
qChr9FdtP2V683WakL4mErufh0BRHpHbPifTMmfrCXnaDCgemZRtUJPUk71U
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
wZTWfQjQWoYZXD5wSD9qwQ6tAqh7EFB3IJm6Z3FkyK6YYAdSevRh0IY1RCWZ
qDuzQ17Ec9c7vEZgQQctSu6dlhENpqTkf5dfXgEWVAKNZX9KAz7iFKOvxFib
2Oad3n9UrTOV6ER8ZRnluZefN4xE7fNgSkbyKJnlIOH1L260wnKuB4ws1Ed5
fudeL3PnZ7+sQl2YnBQMFUFaFNUesx9MIobAoglRNAr1226PYV1jf0p3Pebs
GnOia7RCPXVC3NAaxuvlTu8KQxga8uZvv9lTYauQGYf3Aw6vdk8WGIf/GwuZ
+U0JqHJV8j1+2laPAQ77Ucif+5x3+bEPe7W9ByWPj91C125QyAGFfH5sk1cb
W++99MXPybCv22VzWvmRippxenVKTvOomRchTvclu6xW7g2gdcrEor7jXSbq
vIi6cOru+8U13ue3T4hkU+RnHv+gQOHcx54I+4/6UroP0Hwt8K0MmCZF0X8L
+FYZRL8ypRPfJO8OtGmuI569TtO7KIIWp5vvfO4jIkgvQyHTs9xM0HZl1Uzf
B872rHUvihjT/yuLGvkYY3pf8o1eOuqb5Zya6o+oNe99yKsdvUnkmKIti2h9
Fe3pQ7MixVbAC3tnvAv336kDZgV3Lzj7udZNcjZXjQL+JnCzMgh4ZUrjlgHn
5p84GTJvdehQaw2hG2S0JGO6eFjl15fRUqSXD+2W3p03pNbp3QNIvS6Z1I5o
mZEhUq9I6d03RachKNojx0J/DYncEX2GY5jeRmPVKmCVYhh1AIrzHkDqdSlJ
/fcsamRk7KqtFSntWxpZQUV9+pGTOmrikRDPkRuj6APlXxS9Sjkx2weqDgDJ
Z8H5lfVg5Y8GPREA33B7GSP58pROfoynnQA4PTml7zTIWCxbPewJGCIqKKUr
KlD6w13UI5ED/jYLBLAhpQA4EszfyqAb7U3p6rJPy2sB3HmPd+rhRwUdzkZ0
8LIxizFwBDYcNjdiiAgD9EGVnwVnJje4RwRMHG8wRJg4kCX0pnT8owCRT/8u
E4gXWPsMcRBYNJgeR3mFTZI8sIssqPw7gVpG3GswppYIkX/vNkm2uuxNWRKO
YERsxXgFIBmJSNZGJKQ2vWcVTwQoAYAGzZN2AvlsTCkfDg0iCzOSZSnrx2Hu
pAqauISKRkEigRY6trsqdE7dd6vgjMAlIg7VHG0uGWCzO0DDvBH0Ehkwd4rQ
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
tIWzzh8Sbz/+x3/4x3/4/+cfvH/y/wAwaF8B\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"972d2255-2d1e-43cc-9495-d6ed408bf495"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Flags", "Section",
 CellChangeTimes->{{3.9033619820701103`*^9, 
  3.9033619827821293`*^9}},ExpressionUUID->"53baa5fc-4ff5-46c9-9bb2-\
7cd13b4952e1"],

Cell["Wonderful! Now we find a basic flag for the 600-cell.", "Text",
 CellChangeTimes->{{3.903282766638721*^9, 3.903282772867806*^9}, {
  3.903282852133204*^9, 3.9032828836819563`*^9}, {3.903283423053669*^9, 
  3.903283474277595*^9}, {3.903283534497594*^9, 3.903283535068159*^9}, {
  3.904480569231758*^9, 3.904480569694561*^9}, {3.904744288427237*^9, 
  3.904744292007456*^9}},ExpressionUUID->"1392a223-6aa5-4bc8-8a1a-\
a50646501697"],

Cell[BoxData[
 RowBox[{"V", ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Norm", "[", "v", "]"}], "+", ".011"}], ")"}], "*", 
     RowBox[{
      RowBox[{"PolyhedronData", "[", 
       RowBox[{"\"\<Icosahedron\>\"", ",", "\"\<VertexCoordinates\>\""}], 
       "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "12"}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.903284362855321*^9, 3.9032843635763493`*^9}, {
   3.9032844263516483`*^9, 3.903284485626544*^9}, {3.903284532074361*^9, 
   3.903284548690303*^9}, {3.903284842971529*^9, 3.9032848720364923`*^9}, {
   3.903284906505595*^9, 3.903284909230074*^9}, {3.903285522775275*^9, 
   3.903285527392846*^9}, {3.903304428354782*^9, 3.903304430580922*^9}, 
   3.903305354266253*^9, {3.904058453098085*^9, 3.9040584541574917`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6e86e284-141b-47ee-8554-35f570675476"],

Cell["The base cell is a tetrahedron:", "Text",
 CellChangeTimes->{{3.9032904553191957`*^9, 
  3.9032904589910917`*^9}},ExpressionUUID->"98b66e26-00e9-4a7b-918c-\
7b857e5cecc4"],

Cell[BoxData[{
 RowBox[{"tet", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"V", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", 
    RowBox[{"V", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"V", "[", 
     RowBox[{"[", "10", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphtet", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Green", ",", 
      RowBox[{"ConvexHullMesh", "[", "tet", "]"}]}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}], "\n", 
 RowBox[{"v0", ":=", 
  RowBox[{"V", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"v1", ":=", 
  RowBox[{"Midpoint", "[", 
   RowBox[{"{", 
    RowBox[{"v0", ",", 
     RowBox[{"V", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", ":=", 
  RowBox[{"RegionCentroid", "[", 
   RowBox[{"Polygon", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"V", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "v0"}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"v3", ":=", 
  RowBox[{"RegionCentroid", "[", 
   RowBox[{"Tetrahedron", "[", "tet", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"flg600", ":=", 
  RowBox[{"{", 
   RowBox[{"v0", ",", "v1", ",", "v2", ",", "v3"}], "}"}]}], "\n", 
 RowBox[{"gphflg600", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"flg600", ",", 
        RowBox[{"VertexColors", "->", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Yellow"}], 
          "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Opacity", "[", 
       RowBox[{"1", ",", "Magenta"}], "]"}], ",", 
      RowBox[{"ConvexHullMesh", "[", "flg600", "]"}]}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.9032904620872593`*^9, 3.903290502884177*^9}, 
   3.90330467454047*^9, {3.9033047454297132`*^9, 3.903304749104051*^9}, {
   3.904058515842476*^9, 3.904058528062175*^9}, {3.9045710591870747`*^9, 
   3.904571077695098*^9}, {3.904572017033112*^9, 3.9045720171331453`*^9}, {
   3.9045721575064793`*^9, 3.904572157601864*^9}, {3.9045732607963753`*^9, 
   3.904573260895879*^9}, 3.904660860706996*^9, {3.9046609283766537`*^9, 
   3.904660947954239*^9}, {3.904660992247014*^9, 3.904661026446556*^9}, {
   3.904661083111722*^9, 3.9046610841244926`*^9}, {3.904771058880869*^9, 
   3.904771058998336*^9}, 3.904997058147241*^9, {3.9060502443903513`*^9, 
   3.90605026479002*^9}, {3.906223121552936*^9, 3.906223128150921*^9}, 
   3.906223159021915*^9, {3.906223314628112*^9, 3.906223348429977*^9}, {
   3.906223701114895*^9, 3.906223703548539*^9}, 3.9062237494238863`*^9, {
   3.906224702335712*^9, 3.906224702415773*^9}, {3.906224841031493*^9, 
   3.9062248411112843`*^9}, 3.9062249317673597`*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"1eb6859c-4258-4b79-890f-2c5977166084"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", ",", "gphflg600"}], "]"}]], "Input",
 CellChangeTimes->{{3.903290479226227*^9, 3.9032904828942013`*^9}, {
  3.9045710663640747`*^9, 3.904571067631328*^9}, {3.904660982366938*^9, 
  3.9046609832594852`*^9}, {3.904661035345395*^9, 3.90466103604305*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"1fe564a2-c4fe-43e1-b7c5-b3b3486e1acc"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.045], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{362.5437261253092, 331.98994204470006`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.7911465578064013, 0.2697888989650956, -3.278917668082914},
  ViewVertical->{0.09612616604116693, 
   0.8466074049700734, -0.5234650533245404}]], "Output",
 CellChangeTimes->{
  3.903290392474386*^9, {3.903290484062381*^9, 3.9032905053492317`*^9}, 
   3.903290685465082*^9, 3.903299973905937*^9, 3.903300009064589*^9, 
   3.903300162066922*^9, 3.90330031983841*^9, 3.903304172195603*^9, 
   3.90330429099341*^9, 3.9033043217489147`*^9, 3.9033044031494493`*^9, 
   3.9033044336848087`*^9, 3.903305191021755*^9, 3.903305357949972*^9, 
   3.9033055643474493`*^9, 3.9033604307088327`*^9, 3.903361664011948*^9, 
   3.903361703795002*^9, 3.903361871354767*^9, {3.9033619023452883`*^9, 
   3.903361924281617*^9}, 3.9033642269613533`*^9, 3.903366046438829*^9, 
   3.903366451568912*^9, 3.9040585319307833`*^9, {3.9045710619643183`*^9, 
   3.9045710805623693`*^9}, 3.904660871797204*^9, {3.904660933678857*^9, 
   3.904660951102854*^9}, 3.904660984211576*^9, {3.904661028973898*^9, 
   3.904661036968484*^9}, 3.904661087057568*^9, {3.9060502505753736`*^9, 
   3.906050267461184*^9}, {3.9062231345878*^9, 3.9062231616711187`*^9}},
 CellLabel->"Out[67]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"344f820a-ea42-4e93-b94a-b4e83dab8ba3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphico", ",", "gphflg600"}], "]"}]], "Input",
 CellChangeTimes->{{3.903290479226227*^9, 3.9032904828942013`*^9}, {
  3.9045710663640747`*^9, 3.904571067631328*^9}, {3.904571113863014*^9, 
  3.9045711146593533`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"bf148575-56d3-43e2-ad86-ff406fcb6799"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Opacity[0.4], 
    PolyhedronBox[{{0., 0., -0.22398711324166784`}, {0., 0., 
     0.22398711324166784`}, {-0.20034016451692505`, 
     0., -0.10017008225846251`}, {0.20034016451692505`, 0., 
     0.10017008225846251`}, {
     0.16207859775006517`, -0.11775699414489635`, -0.10017008225846251`}, {
     0.16207859775006517`, 
     0.11775699414489635`, -0.10017008225846251`}, {-0.16207859775006517`, \
-0.11775699414489635`, 0.10017008225846251`}, {-0.16207859775006517`, 
     0.11775699414489635`, 
     0.10017008225846251`}, {-0.06190851549160266, -0.19053481893946467`, \
-0.10017008225846251`}, {-0.06190851549160266, 
     0.19053481893946467`, -0.10017008225846251`}, {
     0.06190851549160266, -0.19053481893946467`, 0.10017008225846251`}, {
     0.06190851549160266, 0.19053481893946467`, 0.10017008225846251`}}, {{2, 
     12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5, 
     1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
     11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
     10}, {9, 7, 3}}]}, 
   {PointSize[0.04], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}},
  Boxed->False,
  ImageSize->{334.4318157615238, 360.12283946781565`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.17434925127983575`, 0.8964968393520925, -3.25820437597304},
  ViewVertical->{-0.1756698313766648, 
   0.9295285497416295, -0.32421718887085105`}]], "Output",
 CellChangeTimes->{{3.9045711156673594`*^9, 3.904571137634807*^9}},
 CellLabel->"Out[115]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
MvjZPn39ly/88oVfvvDLF/6nfCH3r/5/rBbqtg==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"62e017e3-b168-4eba-997d-5454d118e363"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphgsd", ",", "gphflg600", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Blue", ",", "ico"}], "}"}],
      ",", 
     RowBox[{"Boxed", "->", "False"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903290479226227*^9, 3.9032904828942013`*^9}, {
  3.904569680910915*^9, 3.904569682003704*^9}, {3.904569714403516*^9, 
  3.904569751164208*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"a8028e95-e97d-41e3-89a2-72b09b31d468"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {RGBColor[0, 0, 1], Opacity[0.3], 
    PolyhedronBox[{{0., 0., -0.22398711324166784`}, {0., 0., 
     0.22398711324166784`}, {-0.20034016451692505`, 
     0., -0.10017008225846251`}, {0.20034016451692505`, 0., 
     0.10017008225846251`}, {
     0.16207859775006517`, -0.11775699414489635`, -0.10017008225846251`}, {
     0.16207859775006517`, 
     0.11775699414489635`, -0.10017008225846251`}, {-0.16207859775006517`, \
-0.11775699414489635`, 0.10017008225846251`}, {-0.16207859775006517`, 
     0.11775699414489635`, 
     0.10017008225846251`}, {-0.06190851549160266, -0.19053481893946467`, \
-0.10017008225846251`}, {-0.06190851549160266, 
     0.19053481893946467`, -0.10017008225846251`}, {
     0.06190851549160266, -0.19053481893946467`, 0.10017008225846251`}, {
     0.06190851549160266, 0.19053481893946467`, 0.10017008225846251`}}, {{2, 
     12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5, 
     1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
     11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
     10}, {9, 7, 3}}]}},
  Boxed->False,
  ImageSize->{446.0295219152672, 446.0295219152672},
  ImageSizeRaw->Automatic,
  SphericalRegion->True,
  ViewAngle->0.295644141068997,
  ViewPoint->{-0.471953436511592, 1.250110301963166, -3.1087753515959418`},
  ViewVertical->{-0.21257889016201625`, 
   0.9401451195559535, -0.26634070217037276`}]], "Input",
 CellChangeTimes->{{3.904569812646501*^9, 3.904569812650322*^9}, 
   3.90456987197885*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Ae3wtP3YnnJPm6naw9G0/Rz+T5i27+QotvUJWqFFiDRQtUoA/Cts5uq3TXhP
xpy593T3eWFVL9Ughw/HzOGDbj9n1cv3+MyNnqdBDi8C5uGZ+xE+AWZeDRYh
3hW4nM+8GlSsQzFnPgBOaC6ACP8BnnkKeHsRMP+y/vIfgbfHmLk6zGMBcz+T
VQNvH4qZwwfc3s6ql98PZm7n8CSQtwJgvvLMWXNWBWb+noC5n8yqgbwNljdz
5u0ozn8YjNnP4SmQw/MA+JfYtJmrj4PmrAoE+XsB8BqQwwdi5vB+4OpFMO0/
4tNWqp4E2pYDtCOmje4vg6b9ePC7pbRZDi9z2sjPWYS/AKadAE6eA7T1LbrE
fwBOHnfaTwS/W0qbOXl/zNKl3+3kbNp6ADyHJ4CqZQDtiGmj2zBVgti2b6ho
Shfk5P0xc3hftJP7xH6i3nPzgq9A0MRtJ88A2M+xWTMfR3f3QrN+yrKYyWI1
IH9HzJptn/QBH0eh/Sd81kbLada+op3cRrcCCLH2Zv0PeuTzwlpMjpg1W3n4
gJs1y919MXN3r9vFWdXys2DMZtYiQfM2KrNNlyxJAPuLbNrMxUdAL1YJIvtp
N2yWuPti7pv0uF2cRfafqXfrqRkVysXp6yt1lWa2DDKf7Yv2bIdjzvaDJQ5C
86wFrt0bM1n3uF2bzVY/u9R/wBuNSX2VMyXACcD2C2y2LJCHQFFWAZYXPmxZ
yrCtBS7dU95smUujQF5U77nS2RJMmqiB6vH8+4CJ31uuMEPfUB+xftfkpVrg
vREzZALdDby3AszwZfWeNTM0LGl2/ti+wKa3YLvrYMzpfSwA6FcbtSDtdpc3
vRXd9d+o93Tp9F4MT4ut/wy4p8VWBD4OqNWBtNodM612u/2STesv9bToc01a
9U39LJsWCzd0D+QKIC6fDH63lBarDeNOq8vtjGwL+t8G5qSxLFjTedWytImt
AdDYFMF0PhU4bikl5nxdMcuALuB8KLbUXx5g46cx+MHTD8ZfAM34MxZKk9CR
l3XGTOidbi9jCV2N/x1s/CxK+kBBUgDB/1lr7ka960Cu6oyZmTvc7sSiBIyf
hUNvzPF/3m1/ln06YmafDrf/OMd/1fJh4/8R42cnTz3rtj/LLRHjZ4vzHcB/
nP4fHr/v/z0rj1/90ULNa5164D/tMZNHe+A//uVnlfHGz5YRu2OO/7kgdnz7
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
Dz94e+r/r/8q/tn/Byeb5kw=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"3efb0345-e472-4486-abe2-aad87b63b9bc"],

Cell["\<\
Now consider the following basic flag in the great stellated dodecahedron:\
\>", "Text",
 CellChangeTimes->{{3.903287940238949*^9, 
  3.903287955285699*^9}},ExpressionUUID->"a0f58270-9a77-4df3-bacf-\
f238b3916848"],

Cell[BoxData[{
 RowBox[{"w0", ":=", 
  RowBox[{"W", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"w1", ":=", "v1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lst", ":=", 
   RowBox[{"{", 
    RowBox[{"w0", ",", 
     RowBox[{"W", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"[", "16", "]"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"[", "20", "]"}], "]"}]}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{"Vertices", " ", "in", " ", "the", " ", "base", " ", "face"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"w2", ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "5"}], ")"}], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"lst", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"lst", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"lst", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "5"}], "}"}]}], "]"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"w3", ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"flggsd", ":=", 
  RowBox[{"{", 
   RowBox[{"w0", ",", "w1", ",", "w2", ",", "w3"}], "}"}]}]}], "Code",
 CellChangeTimes->{{3.903287972640708*^9, 3.903287995201872*^9}, {
   3.9032880365657053`*^9, 3.9032880496654367`*^9}, {3.903288081382248*^9, 
   3.903288081577662*^9}, {3.903288111996335*^9, 3.9032883773712873`*^9}, {
   3.903288415636632*^9, 3.9032884192978287`*^9}, {3.9032888730193987`*^9, 
   3.90328905845159*^9}, {3.903289097617056*^9, 3.903289300985044*^9}, 
   3.903289356872583*^9, {3.903289436077157*^9, 3.90328944005334*^9}, {
   3.903290610316525*^9, 3.9032906128968678`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"c02f386f-500a-4c2d-a847-c70a35aba8d5"],

Cell[BoxData[
 RowBox[{"gphflggsd", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flggsd", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Yellow"}], "}"}]}]}],
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.8", ",", "Cyan"}], "]"}], ",", 
     RowBox[{"Tetrahedron", "[", "flggsd", "]"}]}], "}"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.9032836243779173`*^9, 3.903283634784589*^9}, {
  3.903285507834956*^9, 3.903285508103053*^9}, {3.903285541264377*^9, 
  3.9032855415222187`*^9}, {3.903285824072638*^9, 3.903285942460763*^9}, {
  3.903285977719314*^9, 3.903286073519762*^9}, {3.903286122933949*^9, 
  3.903286176493156*^9}, {3.903288007056671*^9, 3.903288014171783*^9}, {
  3.903288059613089*^9, 3.903288059739081*^9}, {3.903289272195509*^9, 
  3.9032893092782793`*^9}, {3.90328945068792*^9, 3.903289451182516*^9}, {
  3.90330164096242*^9, 3.903301641469988*^9}, {3.903303566673114*^9, 
  3.903303594318492*^9}, {3.903344757369096*^9, 3.903344759247493*^9}, {
  3.9062233434716177`*^9, 3.9062233438998833`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"4c660879-9e61-44b3-941d-e7151220cebd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", ",", "gphflg600", ",", "gphflggsd"}], "]"}]], "Input",
 CellChangeTimes->{{3.903290479226227*^9, 3.9032904828942013`*^9}, {
  3.9045710663640747`*^9, 3.904571067631328*^9}, {3.904660982366938*^9, 
  3.9046609832594852`*^9}, {3.904661035345395*^9, 3.90466103604305*^9}, {
  3.904771216243361*^9, 3.904771219760069*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"cbbb27b8-a853-4e8d-9061-1baf76cce40f"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.025], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {PointSize[0.025], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{487.66455675525344`, 258.5130569217654},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.801569940275076, 0.7394228568601527, -3.203238902985569},
  ViewVertical->{0.012227521949201185`, 
   0.9675775237980556, -0.25227806711604}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.904771220986258*^9, 3.9060504570296803`*^9, {3.906223298812756*^9, 
   3.90622336000163*^9}},ExpressionUUID->"1b561f61-5fa1-4e87-8f4d-\
a3eb2b8696b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphgsd", ",", "gphflggsd"}], "]"}]], "Input",
 CellChangeTimes->{{3.903289303921364*^9, 3.9032893240335903`*^9}, {
   3.9032894047616377`*^9, 3.9032894464308777`*^9}, {3.9032921128096857`*^9, 
   3.903292120193454*^9}, {3.9032921664865017`*^9, 3.903292167169917*^9}, 
   3.9033014921488047`*^9, {3.9033016808909473`*^9, 3.9033016976281548`*^9}, {
   3.9033048285031633`*^9, 3.9033048433394938`*^9}, {3.903362012603043*^9, 
   3.90336201419133*^9}, {3.904486430127966*^9, 3.904486438648644*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"5ff6dc68-626a-477d-8c57-31e29058a1bb"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}, {-0.5257311121191336, 
        0, 0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311364`}, {-0.10040570794311364`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417601994`}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417601994`}, {-0.16245984811645317`, \
-0.5, 0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311364`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311364`}, {-0.42532540417601994`, \
-0.30901699437494745`, -0.10040570794311364`}, {-0.42532540417601994`, 
       0.30901699437494745`, -0.10040570794311364`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417601994`}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417601994`}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{505.94489755260184`, 501.2730919512498},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.7050986385636435, 0.9707547315455621, -3.1639328629219703`},
  ViewVertical->{0.015780082578352003`, 
   0.9202662808112102, -0.3909743743466098}]], "Output",
 CellChangeTimes->{
  3.903292168047151*^9, 3.903299975657542*^9, 3.9033000109477797`*^9, 
   3.90330016441527*^9, 3.9033014931117573`*^9, {3.903301686825021*^9, 
   3.9033016983734827`*^9}, 3.903304173880748*^9, 3.903304292580998*^9, 
   3.9033043235199623`*^9, 3.903304404941925*^9, 3.9033047976401863`*^9, {
   3.903304831329239*^9, 3.903304844346615*^9}, 3.903305200720426*^9, 
   3.903305321624626*^9, 3.903305359720604*^9, 3.903305565888818*^9, 
   3.9033604320837097`*^9, {3.903361874241618*^9, 3.903361925316882*^9}, 
   3.903362014791453*^9, 3.903364227145372*^9, 3.90336604663629*^9, 
   3.903366451845254*^9, {3.90448641813339*^9, 3.904486439474218*^9}},
 CellLabel->"Out[38]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXmcndV553ly97pbLbdu7fuu0q7SvpZ2hJAEEiABQoAAsQqwsNgXGShs
MBhsbGS8YMd27CbuslNZnIwTjNudpDsuK5NJOhUnncjpdG6mx5NWz/R4ujsZ
p6vf5znvOe859/7OW7cKMX+1Pp/71qK6733P832W33POuxy47cN333n6tg/f
c/ttPXvP3PbQ3ffc/nDPngfPeL+K/oIQ0Z95r5/2iJj3/awQIZv/KsT//O3/
/O0H9Nsv87fRcWH8C/7y2sq/pO/PVfGXkVnr/6+D/y+i7+EPPlzxwTH6fnLN
EjFTbBDj1h8fcf/xxD3Xi/ecf/wl/jZxzv+Z3nD8h1/nTzgnXIcj3xQ13yQi
9DZpm/HKwVyN3z1TaOSPUu+mPb1X9bsnl62Sv4vKdyuzlL37UHXvJjvNzv/d
seCzz1W++2Dlu+n749/+Hfm7eKjVDlT3bkV4znfH1Lvp6MnW8VDDXVX1Dhy2
q2IHiVDw++feQTLUglcav3ibv42fE5KeuRO1F4clq91LKtQX9oXvRVNNhdq0
2r3UhBr2iir3kg51kL3z24tjRGAvCrK1l0yodfdUsZfhYSGyof6yu2IvifK9
TO4/KCaPXKEOx2HgeewoG2rjXfPekcPM89hRLhgasPRO4xdf5G91RqSdeLmc
tlG1M95XLtTqOxa+R0fEzrXHqNySR9B+zD06/Gv7wvfoALKQPeZDnW58AXus
DSWzrXKPptOE7dFBZiF7rAsls7W6PVreUx866i0L36ODzEL22BCaFzYvfI8O
fzT3+AW5R7K29p4Y2GMhlMymBeyxMZTMxjn2GAfeUwj1x4XssTGUzIaF79FB
ZiF7LIb64/rKPdL3EzeedO+xKZTMOrxH7Y8he3SQqXKPlvc0h/rj2oXv0UFm
IXtsCSWzZgF7bA31x9XGLz4v90h/Rb0X7yvh3qNj1GCPZG3tj8YeZ9avlnts
CyUzNscek8B72oA/cs8TGVe7+puF79bCI1sp7tTtg/93C/iAdkBrf8Bl1jLM
QkbQDuD5H0A/z7QWwj+AhqkzAfqADqAPZV/C+p8+YHLzct7nuTBTWY7tf9DM
2nVi4sl75Ad1AsSydWFxP/HoCXH8736d9/nefD/I8vdOkIlkXxJTI6IPolcw
q7OQD+oCYSBbl6Q5IjWqmWKzHDl/yF8v/AMtZ5DNiXQkjxN9mKexacv7m1y9
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
8RGk22KgWz3QLQ9SW3WYj4mV6kd7Z/uGcqXbPjtKpzDO5vuLOjSSbqQgq9gT
Usu6b3r6H3Za00ZVdT4Tk9s3ivLaVeLiLVeL1159SkxvHfU0lfaQu2BIW/fl
bLZjaVLhc+LmU96LKalqPQj0dexJyAYlBeIkt69y7s4MmoTNGzewvnSNXDMq
HKVhefXREZKULpqgIyO8u2b9TP22TXS5lUqcJiPrKj++Xbx890xmSTeJivRd
BPQtBOtr5bsarK9qd2VJX3oesXTlfYOk8eymo22znSNF0rmUXd870/z+/fRR
R1bSXPSGFCXuGw7fwhZmg5vqXK3pkmXPqzw5V68QU6Nrld5OiN6NwNuoyRwn
vceuvlycv/8uMbl9M09q0n0/0D1iVyE8rzMg+Bq6R9mUUvCVmktt6R4t9x7Z
Q/qz+nHFwKXC9r0z9Zu300XTfWQkwtLL/7FnmzfBI3SP0PyWWaxwmCmgi9te
jZcPw6neC1BoCEbByqK1Pgpm57NLuZ+Z+tv3Ewo03eVvlDCIBH0+s+FDe2ZG
fmsPR3WJw9sj//oCffReVOpGc4aiG6Mxq6j4X5iKte6GbknF1O7NfFEUUGA4
9OnU3m0eHHGfDdNGMRsFsAlHsZHQbJz83pf5Ikb4FR4U+NXW4IQJCF1W1VKl
4JjsqPeDfjXofbs7JzjIuzGC0rHHCuUCFSn4Xlp9YvTthj2H6aLGJ93n8kPy
bNtUrt+6sVQvx8IhTtz6Rhe4dYoWIqeUKeaZkx5ASxHQUgsSQx1I6B2uUS58
+rR+xFlmKEIlThGEvv7Nnm9eT5eOIBHiRQK+9HdPEzVWIOnBla77cuu3sZVe
bdNCO8OmL9shYoqW8qYRMf7wnR4tqhsapxIYEVMLbJx2BgYwtG2G7vQ1nx0v
QXHP/YhpaKx+RjUojnKVkaRxYDFzEXPv2im410zfFdtpw78kQsaH3YdL9dv3
luo3bZ8pbNleql8/qrPLTGH7plK6q72UbM7LWDC38u0CFDTOk4ICoKCVKXBM
Ckj9mB8zSkPXL9cglHqOLaffSgRIwJmGyrSCqqtzrh1UGLivpp/jBN0H0jUN
vIlHfrzw2N3CRSJ24fH3iakrpDN46SN+hkmFc1EDkkzR7Xzu2+NzEVNcmMnG
PRvdGTuyS62TuQGkGiSXmuCdV55/JDbibvxw8wwzkVSxYqZ+96Fy/a7LZGqR
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
UpSv2SrMYyc4sUjxpEEI89IvgwTuSvI7QJJ1YHJE3nlycAJfDTqI7SCBx0AC
bwDhqAD0yATrYTUghrEeNUCPGPDSVWpzNHGe0W1EPhLptoPi4gdv8D5nR3bL
AaFnjLTVJJrzxgsfEOVT+8RrLz0iytdtd02cM37LHolMn5ga6hHlQi4okX8Z
dH3d52jU8QB211dpljCnEV3z8c7DoPzpAHncAXm84K/TefGsCCRLB0tmZZA1
2HNVgz32jivZynZfsqQvWdSUTEZmKZhwLnzmXk86b46llVxvXbtHTG9cIS7u
XCPKxRpXlwRtnRpbuoiv84f3yB9nmzp2+Urprb8GihxXpG8CkdbzPW5OLLM4
RYZ4DRCnE6T3KEjvBWCIG4E4KSBOE4hvG3B6z4DCxn3OhcQis6osbJA4ERYn
ReK89r1P8kXfgXMr4c6t+24Ubx7cxNdbi9r0JJpqbhYToxv4KvctotcdPMUj
YGj2VeAU1CF94hu+Zl5jQWkW04ulYMXMdsXrggWz3IED3EE9CIBNQLDkPAXb
iAVLAcEivmA8IUmwYK0cUyu6+NsRNdVM5yBidI+STMosX9y/i1LB/e8TFz7x
hCjv30ep5aXP0yjef6+Y3L5RsGRKOOf8TddInFeJyXXD4vyDt4uvgOpGndsn
vg6028DaOTTfytl06N6f9UC2LuAjosBH1IEg2AJkS/jdO22ltWxWENyMTZ16
AVtSy0bWmRoHY3vUA6blzYMqprFCUVMhEeF7XIe/ypnl2CJFSaT4a7/zRflb
pq+/VkzccZsgjeiauE7+w4/sp5dHPMX/5mt4ZpFAOmVZNsNV52uB6kTp81C/
PRosjWUpHGApakEIbA2WBjzmafcEtmFLEWFpUqQSfckP4OdqZXrPiqndq8TU
aD//VRfO0Vb40PlSoUKGVYjSXJk6fjUroOeLVoKFqAKB7lXgINRRiu6R3SjQ
OfQ5JaxyfX2g6d4Ium3dwDFEgWOoBTGuDSgSD1bEinHb1dLh+MP3iql9+0R5
6TJqg0ldRHJq/SYxcc1Jde2VsfLwFvHi5DfEVG8rSxHFs4L0eOvwRmkOLCny
SgoKWZRlA6WoVlJQ2OLgLsOW+CLwCa4UXwmWgo4goe9NDq0UU3fc7B6rZ/uD
zaD+6fH9AQnAIkSAP8iDuNUBpIgFS8G/RvvtTb4UE7fexJeUYo9EMTt97TXi
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
93T9T6Zv//H///p/7V+Tn/hfDEHukQ==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"5f729e1a-ec1f-40c3-ba37-cffdbb1de49f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphgsd", ",", "gphflggsd", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Blue", ",", "ico"}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903289303921364*^9, 3.9032893240335903`*^9}, {
   3.9032894047616377`*^9, 3.9032894464308777`*^9}, {3.9032921128096857`*^9, 
   3.903292120193454*^9}, {3.9032921664865017`*^9, 3.903292167169917*^9}, 
   3.9033014921488047`*^9, {3.9033016808909473`*^9, 3.9033016976281548`*^9}, {
   3.9033048285031633`*^9, 3.9033048433394938`*^9}, {3.903362012603043*^9, 
   3.90336201419133*^9}, {3.904486430127966*^9, 3.904486438648644*^9}, {
   3.904569796354059*^9, 3.904569802198147*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"f330b6e8-e63b-4aca-9d33-f7a8fdecd1d5"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}, 
   {RGBColor[0, 0, 1], Opacity[0.3], 
    PolyhedronBox[{{0., 0., -0.22398711324166784`}, {0., 0., 
     0.22398711324166784`}, {-0.20034016451692505`, 
     0., -0.10017008225846251`}, {0.20034016451692505`, 0., 
     0.10017008225846251`}, {
     0.16207859775006517`, -0.11775699414489635`, -0.10017008225846251`}, {
     0.16207859775006517`, 
     0.11775699414489635`, -0.10017008225846251`}, {-0.16207859775006517`, \
-0.11775699414489635`, 0.10017008225846251`}, {-0.16207859775006517`, 
     0.11775699414489635`, 
     0.10017008225846251`}, {-0.06190851549160266, -0.19053481893946467`, \
-0.10017008225846251`}, {-0.06190851549160266, 
     0.19053481893946467`, -0.10017008225846251`}, {
     0.06190851549160266, -0.19053481893946467`, 0.10017008225846251`}, {
     0.06190851549160266, 0.19053481893946467`, 0.10017008225846251`}}, {{2, 
     12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5, 
     1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
     11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
     10}, {9, 7, 3}}]}},
  Boxed->False,
  ImageSize->{432.0011109568079, 449.},
  SphericalRegion->True,
  ViewAngle->0.29564414106899706`,
  ViewPoint->{-0.6116437580490925, 0.16651765495549067`, -3.3238778232401547`},
  ViewVertical->{-0.3395480502801534, 
   0.7565805825494215, -0.558831766867386}]], "Input",
 CellChangeTimes->{{3.904569875337034*^9, 
  3.904569875643354*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
PvqVN8T8Ew+oeBnnvRK4aFQcmRi/hBZ+Lp3I65CZnujY6YZMTq382RWdW05t
6t/Ja94KVr6X95FTO7dvOrt8xcjc+LKx45s3XZE4smfH3UygS677xJFrb7lS
RHkfOb599yb6+dmJ1f2ndl813vHevttWyuDcfVX/7KatjbSJHO0js0MjjSJy
tqaQ1jaf622RMbFzrUgpXvODfWLmmj28iTztuwDIDO/DsytXitll42JqcjU9
zo324dklo+LkohH+5GyR4H2YSLpCN68YLrZTDgWGRK6CZPt6i+HDhC9HvLIg
KtKA15jiVfz4Rz19W8L7WLGyUkw3N7USL9roiMeHmyaTIFgcZKc2DOwsLm3b
4Iush/dhGS0riAMhky7AvGTcTLq84rwPywgapt8jVmIZw4qe2rStn09Mttb1
MpuaFPUJP+Qc9PjNghDRJvMS7cPEzfVbfjdRgjX87t9QcJ147aBHMc37cHHL
RWLmyu28iTjvw/PbN4jZizeIqctlPRTnfXi2p72kekJ95XfVlzEgdQkvEomk
ljuOxKsC9S5HKHcrdrOPPSBmXv6UYjfG+/DM9TLR1hYkr4ElIkT0RPh4T+cS
ijnGF/fi7uzS9i2ML+/F3ey6nosZX4uCeLYymT+1fu0qxtdlxx0BorirABwT
iiP9m35NhtaIGGeOcc3x1OLete9tXH5VMRVllufW9FODLHlGCWDUJaZgETZG
N6IAzn/xM2LmW58T7/7FEboLg/bh4qcfFodO/zlvIsH78NSzD4mTt+4RLHDt
ft1rO+h+OmivPtNOP9zT7KVkE60KjpJYZIrL/PQ05yegdyuoUy9+qgzq/PIx
gppSONV+LpXK6hpExLzIPLVeCifhrFJQKSpdMW1WUGc7qntmB3pVTHaCyMwA
oklF1FRSMebIqEFUhIipiMwOtPQS1WJ7Tpx+/nbR5IIticwQUNUQwN7pYZ9/
6wWFPemPffau68Thx25X2G8HNDr8mt56EMtd6su4rcjsBWlPkc2yZUi9JL2I
a2rUT5tfBmK8WLE/cfARDui55sYGEfECmg7F1KOK/fE1PVe5AV0NShjEvkOx
N4NZZAH7lJdFTWVeBPCHGX9U45+/eFF1cbjALiC6L1isG/yhz3ztFTH17TcU
9KSCTt0WrTuv/WEAvaAqfzP0ib2aG+oHFGu8nHAzAUXTAL9ClI4229clVHJq
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
jbipGkLRQ131PkpTQcmKGBFEUtmjCk8LvbZTNGKXEeU254GWcxmYHH5D0eMd
0HIuxW5zga0gZx7bx24TVZU8mBsmgNWoB/RIAquRxQqyEuw7MOiRUPRQFlMd
ihquYgWphc+KPLCaaEdXEWwXWR6ohq4npBqKGC6RorykCL+mbK7XDsN3GUv2
DbpMDcfUEIKiOcJnhGgGXxwYAq3oBBg2vqVevg1a0cUR4+TRQDioHwW1RbND
VCtmXHns7nJmVPiNGkCOlCLHxTtu3ez7jRTWjjVMDtfc4aDu6n3wbpEtH0nc
tdvkR5L4UQPcJtrBWQRucxmQiXR0DQkGy55IaCowE5IeH+T3pZZ7V0+P/83z
ny7/xfMhfCivIRUiMQBa0glwsehNxYdvAZFYjDcfLQ5EgkZSuo7kQA2pASOp
JLAZBcCDTGAz/Bri4otH65kHTjkHsno2cYeEf926wEncdBdZUK4a0mKW64Pl
NeNgO1kj8JpLsT5kkN00Coc3jg4rHIoTCSoWEuAO4sTM+NnnSuM/f46+bpnV
X1S0qf2gTZ0AtePrihbfBDKxCNeOpUGbSgpRVjuoTfUnlbXhtLCm1TlAi2xQ
O3xaxCKuCm+0uXF2tPgYaYLihqO4QZKgHGYamIkCMJsxcMmiCZjNxUAlshE1
Q82q4qZWyO8qiZFSZ+5Ql/3iBTo+XfY3zxMpiBxEkoAghrn4MReSKO/ZA/rV
laCOfFW9vA285yj2nuPqVg89yibd0ONs6DDqwlliOYwsYEmV8hlm01ouGmJL
cG1DsSI/IXzTSbTwpCITzgnLYEZwwjKYi0BbWlVWOVyzcmiZ0Eywykaaz15r
+s39xAQR57NLjDDlgsrJHPxFRdvaDdrWlaCUvGE6DLttXYhHGMttzYgqJQ1g
upnEg+4UIEROta4XD+zbTYSQxzpfIrYFRCDQz0703xcQgezDHWwhqPvI88+o
87jpLiaHC8ihutOE6TPVE08VMVpA+VhgN6V6dpXD5SNCJSA36PsW2ZMSKxJ8
drBSlNHiJ/dzKUlG2M5O0KquBPXkK4obXwdysSBipDERaIbuWbX1hCwpApak
gOFIhGqGO3n7LTtKWzZuvHbTtq1sPlasWie2e05zwyZ+RiJRhK5yX+3/8iZR
7V3y4IsfeS4qSzzS3HTXdMfrT9cxH1zTZmouiBZgLecDgcjPXjQsN4GKRkbR
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
Ids4MjPqIqYRJ8JHWXr8bUiIq0lCB8nJlTeeontiK5nRBsZWmhk7dmSIGVeX
jNfrJ7tazGgGzFgMZtspYAjrAq3Q7CCtSARaQdrAtOhRWuGVjo4orbiybYW4
dNtmxZAsnWOKGFP7twoiBytHnBjiBpTwh5jb8IyhQVGC6sin4x4lEgEldD3R
NsKjREUruQLMNB8wSWG3knW4ljwaqIUeS5mjBruWxAh7GRaJPmHP+NcDFnSE
s6C0e3fSZ0EfYEHLjbHA8oi1/uRpVFcMkVYUIC3wy0W30ofycqH1IQPQrw7Q
d0z0fSNBzcTpW3wPsSPCN6oHc8V1lWDoU4oAyFB4s4QKTeAJ5XJwJeyIYsED
oJmsxTvvHgMDpzioGYVADshaaim4/O3nBbQQXYAInoWQdrJw7bbbCtdWrU0T
ISQJtutntVuEaA3dRWMTIg0sZAHLQkZxQrtJkxNezegrl4SM7R6YEw18Tpg1
g2lRrdIrRrVBSr/XRZZLgkmLGts7MBey2DtE2ctloEDcp17uB5JQEzFZeMJ+
AnCox6xTn41CjCA2XH/tEWYEaiJ7wKSxWjWRU8ePNlw7dLDmg6efWGASoiu4
BHph7eZxZkLbHC+BZoClzAGByAE/2RkIhFkjtEBkARmalY0gwZjs7RTndm/l
g75Wn/KM6LA5wk8WFCfo575zqJrVOVSYynFQJu41qWELRDUuE0+FC4Q1kW7w
PnXzOyeFSQkWiCzgRF/o9DkpxaJdikaGOEHH5M031/uVowNcG2+/MWJYzjKL
hSIPzKXHDRIOKRTdmhtlQmEVjxbPXH7pETWm+8f3ZIjpHCOKCIdIUhL+B8N1
MFU8bpRLBXMjF1gIv4LkIyxESAVh0VgKKshhRZDDgWj4PWk1nkc8AwZRqII0
RVSQJCBIPxhCKNFIETkmH7i/RRPk4qGDXZogJB6tgCMdc+RIFnjMNBCPGmAw
O/js6rmEOY7SymGxo1WxQzOD2ZGic5zY4X1CPD+AS7KCRWQjNpZZ0IHWzOor
KozlUlBFDqqXQ4oQJ4XRhuYjduQ9C+bTcVBF2uwqolnhAEIMAkLoK53SUmhC
0IcS09myF82AEZ03xgjLb6ZAP1oH/GYbLifECJpUoXLikYJIQixgUuT4HD/z
+nN+eVF/CpWW1REGNA2a0jpsN6KUYzEoLQcUUQ4A5cjjecXzYJoVByPsDjWv
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
ef8=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"249b1537-4bae-48c1-b8f8-0179d5d77311"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphgsd", ",", "gphflggsd", ",", "fgsd", ",", "gphflg600"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904570796998681*^9, 3.904570855719955*^9}, {
  3.9045709070515003`*^9, 3.9045709088552*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"f046be75-ac77-4959-982e-f2c1855857b0"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}, 
   {RGBColor[0, 1, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.32491969623290634`, 0, -0.42532540417602}}]], 
    Line3DBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}}, {{
       0.32491969623290634`, 0, -0.42532540417602}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}}, {{-0.10040570794311365`, 
      0.30901699437494745`, 
      0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}}]], 
    Line3DBox[
     NCache[{{Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 
         0]}}, {{-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}, {0.42532540417601994`, 0.30901699437494745`, 
      0.10040570794311364`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{0.42532540417601994`, 
       0.30901699437494745`, 
       0.10040570794311364`}, {-0.5257311121191336, 0, 
        0.10040570794311364`}}]]}, 
   {PointSize[0.045], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{355.6756810232458, 362.61091815465926`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.022104327856097727`, 0.805029617030361, -3.2865542311658245`},
  
  ViewVertical->{-0.17394195416504202`, 
   0.8783732751496751, -0.4452017363893355}]], "Output",
 CellChangeTimes->{{3.9045708023426037`*^9, 3.904570856828847*^9}, 
   3.904570909965206*^9, 3.90457377210026*^9, 3.906223176599308*^9},
 CellLabel->"Out[68]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXl8XeV1Lvx+5+wzajiaZ9myLcmW59nGE7KNMZ4AJ8woBmzGMDgMJhhD
EIPCnNAwGJJAICFkAJEoSUmT1hFN0zSt4uRrczm36e01TYt+Tcmtb5L63t5Q
uPvba737nc559vYR6Z+ff7+9jyRLe+/3fZ71rGetPe267Jarr7j+sluu2XdZ
z9abLvvI1dfsu7nn9P03BT9K/j9CJH4ULMUe4QVf+0Lg1V8J8f//QH69jb9M
DgrrH//Hx6yvz5C/NKy+1/9xV/QvDUf/UtKP/K8Ef5ksNhWEPiT+0Z3W11v5
yxTtYXT5Cv7ZyOW7xDg8dvnL6XHrl4fGHxdqDxEbT/Pvff9H+vdHl/bzDsp+
/3T+0lPbUn+ToD+SI9X/+JtD5X+rBlLyt7TL4ZP97XjJ3yaj9nt7+d+q4y35
W5qa4ci/3cJfpuzxqr9XG9BgxGwgbQ+almJTM6NoHcSgs42D5dugnYxcfrXe
Bm2PZi3yOMA27EHwNjZtEqMbVwjPTKR7HLdZX5/GX3L00PHT3wfo0To5unu3
GD17k5CbiUIUbMyeGLgxLwrij5ZvzJ6huI2VHxnYmD1VcRujefcjN7YZzFkS
bCwVxcZbyzfmzFnMxsoZATbmzBnaWDqKogfKN+bMWczGlL7gjW0Cc+aBjWWi
qHFL+cacOYvZWDk1wMacOUvJjflz+nlD8Ud2c/nGnDmL2Vg5NeyNbQRzlo7e
WDlpwcacOUMby0ZR46byjTlzFrOxctKCjTlzhjaWi9KzG62vB8GcZaI3Vk4N
sDFnztDG8lHU+Ej5xnx7zmI2Vn5kERvTcxazsXJq2Bs71QxTz1kWbKwqirT7
8cb0nMVsrJwaYGPOnGVBoFdHkfYGvDE9ZzEbK9cze2MbwDBzYGM1UdS4/v1v
rJwaYGPOMNHGaqOO7Lr3v7FyatgbWw+GmY/eWDlp38/GClHUuLZ8Y84wYzZW
Ttr3s7G6KD37sPX1OjDMquiNlVPj/WysXnohmxqDahtXl2/PGWm4vZGPHhTF
1Uud7amDo2W80u1VA+2Qg00pgqhlUG/oKmuja8Gga8BGw4MkoqgNDv8nbI+3
1VgrRk9Zq7eLtucMGm1PDjpNkzg5o0NM7j2D/562q4/zyve/XRr32L17xcQd
H5L16P4D5njt7a4B468F25WxkiWQ6HgP//jTvPDx/O0vRLG1zZDqive/fXXc
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
6M6nbZJEjtbhfzgcvMeZQNq5zjaDIJdbHYmJwVN58kSC16mx/dfzoI8/cHMw
ITeLsa8/UXk81wOB7APWCD26CE1mLZjMCM8+56Se3Z3KfJRLulfu+hUTztoW
DcY3PEumMk3fH/vAliAsvxBMBXUaruIpjcnd6LH0TpOiH1CzAKzQMtCk4CtH
Ij37/CjjIz17qfGpjg5txwftAhCmgMKgx4D2OlAM27KwMbLDnrRlIYSCf0Yw
0EInqL5ACvn03QzJxDN3a/N/UkwKQHHnAD+FngO4HCguFydxGWvR1GCpLbVO
itaDFeKQCqnR1ipG167mRaRonRg5cH34H9qhSjcoRk2s6NS3ETgIeSIrXabb
YZykGBePQsVWn4UVQlMLoBkw7kwnw2pwLnI56LFE96VcEV9sPEVUxaAiQ6kP
g1QT7c4oOS7+fQELdhcgNvSLn/ESDJvWKfqZwlCrwxwHRyfQNkdfqwE0zw20
tAw0pX0caAsqRLMapJL5wBqiR/YuMWiSINISnYOXvc8ipRBjCfkCgizNY7ZC
dDp4nbbRKdabM0kDDkCDwmqDnBZ5pVDaBkgF2vHZPXSyzBZATvGVniiuArgs
AJYzH905d3CRup+a7GgSE2vm8zK5eY4Y2bOY2tzvz63XVdgBKbgwZQmX+RII
BcLowExeFBDykjLxqtCBqN3BacBodWDFo++PjtxI5+6Q4oWXyTjPwkJY5EEn
alEYI0KaA0YhC+pRvi4hwRB4BJDSAwIiQSikDj97G21oSbuJleXvE5AG4FvZ
JSQAAmskAvSlQmDoM8McDjTf8x0E6E+11d0CTIG8TDdlI0AWl8KAzhmW6dOc
+KsJ9NznQLZZDKxuFljdXjP3SXvug10EE5+TEz9267miuGaaPfHpqEm3DK6e
8ypaZ0dvvZj23vTTcTcSknq6z+DpTo5u36KnO6jpgwkPthdOOf8L5/1rct6d
XI/mvRVL0GR3FzO/DkhQf4VTnwE9raXAF2eAL5Z3Rnm2BBECsh1Isx9s94qd
giBgGKolGBMXrhOjZ/RJMJaevNSgCS9uvXcnT3+K1ln/7A0iMzFyXTApk7sf
2Fqa8kfX/tuR3SEUF5wj6C2No1s3aChGdlvXRS50oHDS9enAdsk7gFI2FDoE
GrACoWvw0ZMj0yAbLA+jYPYsEwUpUD13RmZpgEM9wGEg7EcEqYJ+RkuACq1P
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
Bmi2rOx+t6G/+53+s9b5vTvXNsps8m7v4W6dTXIqmzzfRmJDXAnYS+ukzRmR
ARmmJdSSrYXX/X8oPEdL8Le0Doh04A9tsynLjjQRSUmMKspJexstb6maTbWl
smJ8pQjJM9nWzERh2mSkrBB5dEL5vmTOmEko+gRji6SNSigTF50pws1mSLlK
ZUV1nRRnbKep3KY5IeF6jZYYNZFPn0i7dUY8cXKSOCPre/l625Hdc/httEQc
Si7KdmjiPPVkKXGyZEf82Wsa/HkXrvIHtvdKAm3t9Qf2rPDnXbE66RKIlOWd
gDtNRCDtPy6s9tc1FkKuGMbMSBX8UzLTNGN0V6pAFwdIxowWvqIZ4/E6yYzZ
NHbUvuBTuVLlOSRNMlSMqjdjktQc/ckt4tixPeLY3+2lJPpvG6gV8M9n8ff8
swR2qZKTgEp5SSX6Xmeo1yWVvulmKLatjS6VyJuEiS9NSlfqgk7c+PLmnCxY
bRYFR0nrpHKtsoUJ/Ek7lqACM8krrVgTUTSqBjRqMTTS+ShF6zzzpoZ5suCa
bXpZf+M6/5TLF/uLLlrs95292J99/jLi0DsD16yj6SHiiGZgYlVXq3e82u9d
00Z2JpAzSSIiENkaSR+VqxbocqYFkCgTkohyVyg9bgfPNbaTy773SZ28GuQ1
fyQ+xdcH5RUOfrD8biXJI7Ep7b92w2BpgUvQeiaJEYHI0lAtj5JYeEr0WziJ
1blJjCmUkyZHqpFh7YmBf/2RiOGPqntt/jjmpjNGjvIVtj1CItUBDjWZHKY5
lJZSxLLjSlHSplQAGa2T/orrN/unH1jpn3lwcfCzgGDkewJ6BVPwbu/mle/0
n3FKyKr3ev+4UNYwt5NZhtcpm1W8UMskEXbTthZmM5OCREan3HVSCxkmqi2J
Kumg0qMG6JZ1q0hOj/3qs2Lydzski64MlmckoySZUv76n46XGWUP2KE61yhz
RguvqHjNzWhslGuBEcojGZL8ffu8nz+cM2fQVCJTNFKnUiSBgBOajmUobexx
FINUZCopYhLVAyo1hte1WcW0phJZnzgqebzOKiq9u/aG9X7fZdskhTauf693
3Uq/d/XiBPGJjVFWkeeyxZo82VCSVKW1oWpaSJqUJo1aArKIupA8ZKOVNBUs
aaL8Zp2JI/JMfPDXL1gn3DITJ66XxFHLj0MSBV8HxyPl6OBzw6W+duKBu85O
AhI1glwWXnclr1V1u+15k8uISGyLaqQQoXpbxDBI2WibQY4vmsHrLBIiIpGq
sMrOxFhNOLvAagaGus4kNFV004UXLyi2lDKIWEV+iLiTDsVo4Ipt7/bt3e7z
ZP2uf8eOBBGIivPVi9/rXb9MKVIB5DnPVqQwz+WZVJ6/vXaa6usTmdIhT0h4
lF/KAzFqinPYSaKT1qPwuj2tRUShZLi+MqQWZbkM06qq1Gr7g+N0ekhM/msz
q4nySMyrZpzmwotov4PTXAY4pUJpLW/kKTTbLruSRp/01R4JYJN6Tb+qeMrd
O+mpEa4lcHo2LpXaAJVqQa2eNVSi630iqZQKJWneVdveC6j0u9n7dhD0aWKT
SL/Tf/ppRCkiFC2KUDWGUCrNEZXkerhXEyoXpjiq9Um5OmvlCaMvV90aKEao
PgF7SJWCRZ8XIlapn3UAF44MVAKkvRSgmRfS7JlQvYhm6TD/OeqlThqxv3Ft
eBvIf+H19X/s2nDOfylJrtEPbi8lV2biI3uEP/+LZaL55v1/vk1kgJdKGi+u
JSwBvNSs8FkRQU1LxUrFzaBOQLBqUPznDMH4+eABySDBZLZLvTfv6u2U5d6Z
vU+TTOSZZSk76ynZov+TLYFd3CF4t+/p7uB4LW8uk6GkWJLqvWBX5zfO9r9V
e6u/LjXb/0jmrAVWggv7RjHeO6USnn7mQuCWAppKuijvTUSRlVwWeW9/OPia
+tbjdC5skJqE5VkuvLPqiMly+kRDAlilOkkV/8Id4sgX7hPHe/75qO3S2HZH
UyVt225alFeaAkPolnryPqMDbdQuLmdIFajyJUM8xRDFkjQgSVKuiSSkQpTU
RIJoIi0W0YSpUhUvSx5zJq84QzXe72afte6di25e8O6FT3dLqSJ52tVL3Mka
6qSZOr9ufE4vRKHV3uxFlvqUPEtOKU3of4J1gkQl+OX/vYZ5wixJhBmMrbVV
4YcZjHjCPxuX57uL/1ajOFOWwcL7NGW9lrIzmKKLqA8NUaAqxw7uY7ocvfGr
ZyuBlE8yluoiG8+ANh6vU7bNVuZIzAyt9Wn/EVXKZ4sNv31r5ILXDw19ZUTQ
Mrp2Hvtm4gt56C5JH6KSvEB1Dr+8tay6z0tTbdNHUYjOWKbClFZS9787cCXT
h2gUeKJyCtXy2lMUctx28Kvn3zjff+jJ7vcePtwd7PvXLDfnX1jt7z+94D93
+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
orX/iHe/+//BL7z/6f8DP1x0yg==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"5ab9d405-8a3c-4de5-b527-db7642fae1ea"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "26754405-7a18-4282-a402-9b6c4da3cd03"],
 " in terms of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aa3107c1-ef3b-4410-8feb-ab3bbabf0625"]
}], "Section",
 CellChangeTimes->{{3.904586677503706*^9, 3.904586684223579*^9}, {
  3.904744123434189*^9, 3.9047441278088923`*^9}, {3.9047441641618633`*^9, 
  3.904744180702971*^9}},ExpressionUUID->"a6c4f5ea-3d9d-466c-877c-\
b79e904f4829"],

Cell[BoxData[{
 RowBox[{"gphP1", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Orange", ",", 
      RowBox[{"InfinitePlane", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", "w2", ",", "w3"}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gphflggsdMagenta", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{"flggsd", ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Magenta", ",", "Blue", ",", "Green", ",", "Yellow"}], 
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.8", ",", "Cyan"}], "]"}], ",", 
     RowBox[{"Tetrahedron", "[", "flggsd", "]"}]}], "}"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.903364218341845*^9, 3.903364298747154*^9}, {
  3.9033643428294687`*^9, 3.903364358764292*^9}, {3.903366013629122*^9, 
  3.903366044695149*^9}, {3.903366447342053*^9, 3.903366447553412*^9}, {
  3.903366507011928*^9, 3.903366534220994*^9}, {3.9044864810962048`*^9, 
  3.9044864818178368`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"effa1ae3-3a7f-405f-bd4e-183cfcb9685e"],

Cell[BoxData[{
 RowBox[{"R0", ":=", 
  RowBox[{"Chop", "[", 
   RowBox[{"ReflectionTransform", "[", 
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"v3", "-", "v2"}], ",", 
       RowBox[{"v2", "-", "v1"}]}], "]"}], ",", "v1"}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{"R1", ":=", 
  RowBox[{"Chop", "[", 
   RowBox[{"ReflectionTransform", "[", 
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"v3", "-", "v2"}], ",", 
       RowBox[{"v3", "-", "v0"}]}], "]"}], ",", "v0"}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{"R2", ":=", 
  RowBox[{"Chop", "[", 
   RowBox[{"ReflectionTransform", "[", 
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"v0", "-", "v1"}], ",", 
       RowBox[{"v3", "-", "v1"}]}], "]"}], ",", "v0"}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{"R3", ":=", 
  RowBox[{"Chop", "[", 
   RowBox[{"ReflectionTransform", "[", 
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"v0", "-", "v1"}], ",", 
       RowBox[{"v2", "-", "v1"}]}], "]"}], ",", "v1"}], "]"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.904584586224094*^9, 3.904584714189056*^9}, {
  3.904586571380838*^9, 3.904586579459303*^9}, {3.904586989996089*^9, 
  3.904587010674087*^9}, {3.904587092756147*^9, 3.9045871092852592`*^9}, {
  3.904662826187129*^9, 3.904662826377983*^9}, {3.904662909798725*^9, 
  3.9046629099450827`*^9}, {3.9046629936828337`*^9, 3.904662995691551*^9}, {
  3.904741187455707*^9, 3.9047412397554607`*^9}, {3.904741315555386*^9, 
  3.904741317123584*^9}, {3.904741601088992*^9, 3.9047416016777163`*^9}, {
  3.904741656822893*^9, 3.904741677205121*^9}, {3.90474216021653*^9, 
  3.904742176080368*^9}, {3.9047422903690643`*^9, 3.90474229885721*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"20020b11-5b1e-4ee2-a5c3-2d3652c9f213"],

Cell[BoxData[{
 RowBox[{"flg", ":=", "flg600"}], "\n", 
 RowBox[{
  RowBox[{"vtet", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"V", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"V", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"V", "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "}"}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Q", ":=", 
    RowBox[{"Composition", "[", 
     RowBox[{"R1", ",", "R2", ",", "R3", ",", "R2", ",", "R1"}], "]"}]}], 
   "*)"}]}], "\n", 
 RowBox[{"Q", ":=", 
  RowBox[{"ReflectionTransform", "[", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"vtet", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"vtet", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"vtet", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"vtet", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"vtet", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"gphtetQ", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", 
       RowBox[{"0.2", ",", "Green"}], "]"}], ",", 
      RowBox[{"ConvexHullMesh", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Q", "[", 
           RowBox[{"vtet", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}], "\n", 
 RowBox[{"gphflgQ", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
     RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Q", "[", 
           RowBox[{"flg600", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Yellow"}], "}"}]}]}],
       "]"}], ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.2", ",", "Magenta"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"flg", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"gphQR0Q", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Orange", ",", 
     RowBox[{"InfinitePlane", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Q", "[", 
          RowBox[{"flg", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.9045849736982193`*^9, 3.904585220194201*^9}, {
   3.904585255511114*^9, 3.9045853337674227`*^9}, {3.904586518075996*^9, 
   3.904586518728587*^9}, {3.90458661786607*^9, 3.904586630736183*^9}, {
   3.904662735969571*^9, 3.904662736148222*^9}, {3.90466302413759*^9, 
   3.904663033830585*^9}, {3.9046630870017147`*^9, 3.9046630913055477`*^9}, {
   3.904741120566801*^9, 3.9047411225846167`*^9}, {3.9047412553771276`*^9, 
   3.904741259334217*^9}, {3.9047412982310762`*^9, 3.904741300773788*^9}, {
   3.904741686556479*^9, 3.9047416981543837`*^9}, 3.904741735325078*^9, 
   3.904741838110504*^9, {3.9047422403156843`*^9, 3.904742240812476*^9}, {
   3.9047424086859283`*^9, 3.904742424917039*^9}, 3.904742594226173*^9, {
   3.904742736561103*^9, 3.904742789363329*^9}, {3.904742928269047*^9, 
   3.9047429530001593`*^9}, 3.906223721718936*^9, {3.906224697444364*^9, 
   3.90622469749209*^9}, {3.906224837851556*^9, 3.9062248379697647`*^9}, {
   3.906224887511344*^9, 3.906224887629154*^9}, 3.90622492665501*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"059a0b5f-600c-4f78-837a-f09ec4fc89c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphflg600", ",", "gphflggsd", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9045736847394857`*^9, 3.904573685035943*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"f3145191-e9be-458c-bd87-c475b3179563"],

Cell[BoxData[
 Graphics3DBox[{
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{518.1586583337322, 191.},
  ViewPoint->{-0.15019297723110347`, 1.194783102475465, -3.1622674472013848`},
  
  ViewVertical->{-0.01369686123449631, 
   0.9958827763080933, -0.08960966379362838}]], "Output",
 CellChangeTimes->{3.904573686086378*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"39f7ec37-4327-44e2-b8a5-6aff44836a16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphR0", ",", "gphflg600", ",", "gphflggsd", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903302669329208*^9, 3.903302673362742*^9}, {
   3.904573303549065*^9, 3.9045733103672047`*^9}, {3.90457349551719*^9, 
   3.904573496237804*^9}, 3.904573678995864*^9},
 CellLabel->"",ExpressionUUID->"04158868-9b2e-4809-9aaa-542f0bb79366"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{652.4288575722222, 162.44923079617922`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-0.047735569575231784`, 
   0.7453983199283196, -3.3003185694786144`},
  ViewVertical->{-0.002095439457478092, 
   0.9721977764160258, -0.23415185812889727`}]], "Output",
 CellChangeTimes->{{3.9033026656345053`*^9, 3.903302674748538*^9}, 
   3.9033027977720537`*^9, {3.90330284441306*^9, 3.903302866044354*^9}, 
   3.903304178780624*^9, 3.903304296886606*^9, 3.903304327889098*^9, 
   3.903304409153942*^9, 3.9033053635763273`*^9, 3.903305569662941*^9, 
   3.90336043581534*^9, {3.9033619088330107`*^9, 3.90336192995164*^9}, 
   3.903364230431431*^9, 3.9033660510722322`*^9, 3.903366456040249*^9, {
   3.904573304984295*^9, 3.904573311785243*^9}},
 CellLabel->"Out[163]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"f4a9dc0d-7576-4dd0-8bc3-4eeac51f419a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphR2", ",", "gphflg600", ",", "gphflggsd", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904572973610618*^9, 3.90457300013894*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"01444660-7c35-47da-9ad0-18b4235805b8"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{524.598448320942, 122.23466852947202`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.13574036203221124`, -0.4977264904329718, -3.3442253056330786`},
  ViewVertical->{0.007588644494749532, 
   0.845058843502447, -0.5346194567101342}]], "Input",
 CellChangeTimes->{{3.904573423701639*^9, 
  3.904573423737286*^9}},ExpressionUUID->"9c3caec7-613c-4c4f-a4a7-\
58d985ca9a7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphR3", ",", "gphflg600", ",", "gphflggsd", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904573449330017*^9, 3.904573449436462*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"9751a2e0-c215-4360-9767-f79be6c3d8c4"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{626.7816918433612, 184.2073291426722},
  ImageSizeRaw->Automatic,
  PlotRange->All,
  ViewPoint->{0.009655960641889255, 1.064387135221538, -3.212006660765039},
  ViewVertical->{0.0010682354039798852`, 
   0.994523506322249, -0.10450767553448588`}]], "Output",
 CellChangeTimes->{3.904573450678797*^9},
 CellLabel->"Out[165]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
g9WzBKVsiRW2Vpqtf1RaLg2zAr3Sjg6ZTyVBuq7SSvUOk1GMlNGZI3NoGVQ+
jIzkb+k6QEuV0mLeX7C0NHm1hHSsPkE+XQtxxNBmevSg+P0+MbtSe8ihKVyI
yVz7Xt84NZ6md93admSafHJKaT8s/mOHMdiUo2KwHktnkxfAwhKmLVVtW0qr
yihV74o/9xtVY4+K9aYGVaXIWjQ9BZKyk8hy50kx1TQ2HxXL6N8c1W/9sexq
9PAp2OmRfTl6SRp4ro7GbJJ6F9dGi5k+FmE5L8KE1ue1SeW8rJcJJL8gN4JR
Bs7r+zx1MWqiHNaWk6P3TU93nZey5+PW8DXYuowqPP05Maa3cM30frnyFhtm
mrCptoRP1TesXeRLdoFeo09hypyYeNSeFCjYvTEBzmG7KFSwC9k2xqvXFMu9
5lzrNQG7jVO7yMfcBWrgY2Oq2Mp2kQe7KKtC7+JyoGJMTPudpx5Ca8OOmCD6
mtbdYBftMVVsUw+hxfuomLa4QD10JdhFS8xd6KvJrvJ34YWkl/1lQfQx7dVg
F7X+LowStAt90v/DNFQX4im/OPyhf3/vofceeu+h9x5676H3Hnrvof/fHhIj
/hueTfcF\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"6b8ed0e5-5454-44d1-bd0e-1562ec762294"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphP1", ",", "gphflg600", ",", "gphflggsd", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904573449330017*^9, 3.904573449436462*^9}, {
  3.904574336860824*^9, 3.9045743375002527`*^9}, {3.904574778098094*^9, 
  3.904574789841866*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"41177f33-a358-4455-9bfa-7b7b9d074bde"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{657.0378101011696, 209.56282816274935`},
  ImageSizeRaw->Automatic,
  PlotRange->All,
  ViewPoint->{0.07902266182586215, 1.2283912560790158`, -3.1519534166777583`},
  
  ViewVertical->{-0.0028686840134262695`, 
   0.9915085094889111, -0.13001017753664165`}]], "Output",
 CellChangeTimes->{
  3.904574338637184*^9, {3.9045747802574463`*^9, 3.904574790961842*^9}},
 CellLabel->"Out[173]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXmcFNW1vtNd3T0bszHADAPDzLBvyiKCrM0iCCLIgOCOCCEaJe5L4s9H
R3wm7nFDcdcoUV70ieKKOkGDQiQafSoE3PFpcNfEIMxAvTp3qbq3+txbt2fA
f17GX12hpuee7/vOd869VV30HLHg3FN+smTBuacuXFA35ewFZ55y6sJz6iaf
cbZ3Kp5HSKKBkLz76ojj/dklxGroTciP9v1R9I/xtPfXDD9IjI70HBFfoSm2
S2eHB1M0eYcLp/PpGG8SUyJTfChNMQyZosSNRPGudHYoMkU5myJjmOId6ewQ
NkWG/zj94fYBEd0U26SzgwMU/hQdo4n8TTo7CJmiKnqKLdLZA5EpqqOJyFMc
gExREy3n5uwpmuQpuvA/6cjTn+kWDfVt6exAFicjx6mNFuyt7CmakClMbOUp
BiCCWRBBplCI1CGCbQ7/THfrF5n5vBn+GV5A3tjkIyptxTxl9GeS3phx+Tf4
AX9vateKKRmMQmnKNIfYxM+lpfNNha0OIdgT+reEfy7jK1IQbbasuUNmK/an
TYupmfhRWQ3ZpQiBXOHDC74M8GgttPPnISoeT4A0eUok0ItN0sh8/xOeLwSz
QAsz31svvvFe9CE9MuRML9wIeE0TDxeK9NfsSGk5UiHiYEokCQFiECHmCoDE
1ygU5RXprLateVGayN8FdpKiY9I796AFj43ZETKyx3jv9WbZ6Uco9ikQR546
nT39ejQhrAiTxW8wAhV0VsdHzF8QQ+C+IM3X35edIvDma09ibvWgwz243tw+
Bb6IyQkmlVwkRCCExfNS1H4hFu17jPCgZ0ftiAhXFUoNUd0cirpWitoH4ZpC
olYihuhKxwTGNRzyKSlkb4RoARKyXCLKw5KGXEz+mHS2J8Kz2A/aKMrJb5Gy
ur1yMv5qKWoPhCqLmnCLq3rSczAj0PMi+t0OooOrvPNkYE6OekiK3oBwLoHo
VLs4nZdlFGJ5BwFlv4He4tI/HWRfP6ukuPUI6xJf6/aCNZnE28qmIe/r2IXD
rJTCdEPolfIwXkgaxpuSTOUCXjXk9+70IWdEFMfvpAi1CJGyEBFPGzI9ZJB2
Q4YbDHK3FKELwqGcRxAGAQ5H8mQJqTwexKICbpPO1oTIeNN7S5RwAzXCg77l
G0OamRmtkMJU0z86MiPQrQIhdXQo/6EgaYTQTVKkKoRQexrG8fPPM3ScJB+n
xOTDrHw9i9EiUuN6aFwC/ycdcXKVkifqPFGB3Emc3IpF72EKYuSuYYH/FQRu
8g74z5uH0MtYb1eBsO4gub6O7jsIWRSiXL1oiY1jrmBn/4lgKKZjvEmIAV/F
uCAdOSA4BYCg2k/JyVK/YfN/h+AoC3D4XwXidZIqnUKWg1eczlWBrIDlLFVZ
xs5+y6IIJBRHBaJKSrwuUISjCZzJZTlDnyahDAaIn/8GAdSBAUrL8sQReapD
poVXnJu7aS9mEb5GkHRi1s3ISIhqFI7C8a0Lh1ewF0h5UmTBCvaXbN6vEAjV
dHTSNDsB+RrJn+NIT1qwF9GQ+TQTENYLifEPxT6fxf5SCCzF7swSQX0h6NZw
uuBJie5SiS7obmnLs6XgNSJaU5DiLiHPcarLpCxzccNMw5HOZJG+IByTRLMK
odmVB4a/Q1DC2vBlfD8hS+wdFkxPk+JXI0xrQzbiTK+UdD1m0Urb6jqFnf0c
SWpHhG03ie18MlywvYbtVb3YXtezc9NPlMCKzJUI67qQm4C111OuD8nca/l9
vsxY/ZwsRcX41UvVspRMoz9zM68WSVkLfieySJ8h/CoQfg0hG/GeeasvbMzS
Psfq45YjhBtCdcOTemeoQ3BdI1ayo/WxSxHOPUJm4pzv5TmFuIuXvyPiWnCf
rY9fwrqjWLkEhu4hWwEMr5hWBn52fO78xzBbzdIHLhaBOXEA4EXryQMLzXl3
pNtS7xJR6C7xj1qdjrDAAGcBR4Zi6BHyHCf/cEj/rJoSN8pddpMDDpKkd7vi
4ft38tBOAai0mhLhDgaM4mrgF4/Cmbwc6VXIajt7DgiAijtI9MYL6CNAIkqy
HRZrEmUC2eDaELLAt7wDPy7tb7h2RFu14iJdhlYWQPO/QtBSErRQktsJpNWl
PtJ66QIcHCZr+LTU1qQ0hzXkV9b+HTj4XkWQbB3QpAJUSXaxALq6loKRJSW8
HHh7f47fdhGSDt2wTWBENw1dELAdGNi0AazDzvIlX9lVFSFg66WmAUC5qutC
YCVRpQ1ddZB4H2KnaIhxBWIGhbhwtA+xDikerilZz3uMwCiJmtVjKhG01dFo
Y+ws3a356d5SKiD6CooK4qvOxlAFecikCqLylSGAOkfbMRbKMFzzzmH7jEI5
w9MG0vsSsnyibsTF3SakRWtqh7W82mi98thZ1hoTaX66hVRWfk8a5+wkS8cF
MK8YKJqRvykivGq4jK9LW0GeYH0j4hdwGVnQruyuJEEMuCNQEE7vJGPGkTiA
JHGA6ZsyJZuSw+2GdCO+7pE3kUpXiie0jXU4jizY5v5JyKfcQJLGJMkI7Car
+voEEmLNFLZlJGqRwuLrJtnCL/tlZ0jFFVKf+qEeUZp79RNE6XwGtIW8XekD
dcQI/s0GKhZ3Wex3uNgySLVTwTv/3Yy+3ctOfIzIWRT4QSAFJ7gw98LRfIkC
AQFhF6TUxHXqBxRnoWKKULfyXsceU2iC60JT/jng7YisJRSwIwNW4LKmqsAl
vOTkFXV76GKESyt1MEBaZYPyQ0TW9gzlbrJsxG5y3JQWMn8Cc312VQkB/460
+lCvEgKKdVLTRTmuD4jvYV+9Tizdikw1UmcCQFymT5E3b+BWOL/PGwdgDisT
kVSKqhwpE94z3wuUahJKVSOIOiP1IFbEz/z3Bxgs9q4cjHH5Njqbkb5nwTwH
fy3RQ3sXEata1MaYcRSKDE0uAd7K2dtt3i4t9IaMl73+skLUWTFEuUI9vG2I
cjWiE/bp628iZeWE5cVi+CW/vyJDo6ovmucp198rhf70zVRCk85US/PXcJj5
eoRbEQG7IAirkRIQAn6mvo0GxTjP02johoe9qphHAbZjzhcp5XAtqnQLomCt
AR+RmoZQ8BMEXwzgeYAWL7+EgoRvWLWNzYhg3RBAVUgxiFVse/h9x93kvIUt
7ZacwEGxkWsn778gsf4anQXtLUSrerGcVVb66wG7eZxUFlhp7Xoff/u3hYwa
Aji9rcg3r3idvN0nf6Ip5mnmWzD45k7y2M3wyoibjrvYiTcRQRuQ7tIJqREh
6Du8RkIlLCADIJKiuOMt13gyCwvy7UzLulFD4LvsFXRM0JR4P+8SVPKdDPwb
iOQ9EPAdueRy+Ujr2hYL/EUM3e5l5y1U8RfAN2LwOrPe7N0P8jqid08tZLWi
xKL3lgXeMoDFXQGgfYELuYG4S4TIoZs+7M0I8hoicG8EbQcusFxuksBivy4B
JlLtARaKqj0TeeeEx24OX/soJin1NTc9W8KuhciriOK9pZYhFqkOmrrka+hr
oTYG0asRvPziEc75eCtUzUVNhzRnVx5kE6J5X6TFdUAqUtzR3YSAreUV6AkZ
vi5XDNLJqgLZ5p0/e6SK2w8BWymJK1cgXyQ2IHi7I3g7IOLW0DEZFjfbDx8x
yBsRfQdoIasVKNbc9QjePgjeisC8AjOsCRb6vs/AbkD0HYiAbS91OLkAub7r
LDrGgMDMgoO4YacUX0/Lhsf2NuQlRO4DkRZSoSk/vsg8b8FgCMKgGMlAP6sW
yB84Xo9kYJABf7gF8mX9GQv8IxD8dG8ZgwIdYtX0+MOSLyKqD0FQl2vqkqv+
pAXqicHK6Cs83KrhsbWQP66nKjzUgFUuSEnhNfziNLRTp4r9p1XNsZWC/BHR
bhiCp0yzq+DL9GqkR1xl26v+zKA0IdIMQ8pfPMgkFY+3wMIYF2swVecPCKYb
rbR5mQF6DtFmuBZQdjVwbVYhOG6z7Cv86c5nEWlGIEjkp8h4lhRpxFNS95v3
3fda9QxmHfIMotJILbZsR/Mtx+8squ9Bq67AxCJPI5qNQnCVaJzNl7+7LXA9
YtUBGCDyJB39J49AL8A2Gim6EkkyAUta6G63gPaUleGfYNCeUCUDmchYBFc7
jeG5ZCssd8DP2zaIRxm8Nbhy4xCExYZC4C2UgrwJqc2XrST7b4bpMUSy8VpA
yawNLF97bkBwvGrZI/gTrKtxdSYgYIqkB8xM6lyDoHrLqjc8wDA9wtQR2aTq
TERqsNjQGzx1rkJwvGvVC+5jOFiy4rIuZBKCQwgjGRtdWn5tUXnbrZrCPQzg
Q4hQkxGAhYa1j4tFoV1qAfBzK5/fyQD+AVFwigGg5HNUwYwFwO9s+8OtDOMq
RMSpCMYCg/35akTRXWyBcbeViDczgA8iIk5D6lMAlMoBXcZ/adgFurQ+LFsI
f3L494iA0xF8+YYy4WsTRXYBUrcUV4FVE/ktQ7USUe0IBFXKUBvi6TZAda4O
VblVS7mKoboP0WqmARVWELJWZ+pQVVn1kcsZqt8hWs1E3qRIGdZHviRRVEvM
G0UKsM6qBC5jAO9BZJuF1GjKUALyEnWqRY1SlL1sm8klDOjdiJKNCNCk1EzC
tSArudgW6AFWci5lKCnYFDTTDoiwcxC8CaRK4kiDPtkW7zDLHsMfdmbA4wDZ
5Qe8aeTSNytdui6k4W9liP5HGfhgvUheEedbbkopp1FW/elCxuhihFG7gBFl
A19FSIbmIe+ZOEhtYhk6XtcxJln1sXMZqosQ9OUMvY8cvvKRfByN9DvHULjy
4nqMDv3hVv3uLIaKmqpjILb/lUDEPhaBG0f2AnFkqT1KB3e2Vbn+nKH6BRdR
FrsDYpU4IvZxCPqYoZhlsRt16I+17Yo/Y8AuRAhUwRhD9D7BgBgrV3mRnmnb
fhZY6f9TBv8CBH41HR0oAFnvE5BVM2aoTHktP9wW/CmWvZM/6H6+Fr7X19gT
yS2xfn3IfKRPxgz7EFn4w2yxn2HVI0+SkNcwpd10mrixjpVuauKYltS8RoY2
KaOlBy9JB1n1J9mCvMCqFR7PQJ7H5FVaYSdVXjcxoI/3t8JjZnnWiM2hCyyF
fzwdE1kkYEYH2Q5MiNq6/4dVGzxGQi6cIMnrrY4e1BMRbLz+CKbuWF23uMyq
1uYyTGcEHcF3tegSSP9TFE4hCrP+5/hLJe95DrLWj9IRuNq23TUqHIDkiop8
sikZI8xHXuIyArQgUoLon8+I7E7MnR0m4rdFXpEOssQP1xG5ySoTMxUWcGro
z4fQg8RgjLkfve2dP+s0+O6F5xEKneaJdSP6d48oJRuDMYkkqxDhyHeeOycs
Hbd72aq+cHheZD8LE8LEd6WHK4uVyN5BFtcct1s2zmkRCqRAAS8XOz4g7jef
sVx63Gh6aYZiAJVnJTZ2jJuaO4sUAWGJYcu6tysptxRnSFPYpDIk0mZikG37
srsRfxgjyfYYVAkwKyUZh7GIkoxTgj98T3gXVhPpGdbjmpjjJdKNzZrlkpn0
ACfMnOXAN2jXa0RY50u+h9yyv2VvQgbasl5l1bQnRbAuoayTfmqBOfc3lCat
TErMoUS9PfiRjbvJrNlwQKXNmj0NIVso6UbNkumJLqP9bMmuturz4xWyIMji
PuUS2XLuY3h9snsfNktVrZe9QfDMa2zkeDcxaTIckOVJk1Nu7YmTPWp5jXN2
5c2a3exxJ3EYqRgO1cDb+zQG7ZfeZS+mWz0gzzoB0A+/K9E7lwstu7cnxirs
lSqW2KfcEcMY++Ips+DYUzi50e121GS3y8zxcF0ydbQDesThT8A2PWVX3tQZ
oAFJwegwGfZ4Y8j/oAd/v004IXADbYysu4XfCfHcr2ngf7RdiUZacadNXHCH
ZyenQCF3nDGd8h+6cLTH3xsF9diIKXvyDprA3eGNDqiRT6WIC0NQNWK+KUhC
rhA4wB/kAESWIp0s4jHJep0sG6z8wD7njixBSt+BsYJrAq/nXvC6lDfGQI44
1SPeXNM4Zaczfg4cntfpuCs+egaIA4dH3RsdptEeMmICSAQHaCLESshiwQHm
IdoiakDEKg7Ecvx64lvFWp1Or1muf0MilCLxTds2EZCLSlaKCFekmqm54vAj
SAmVKyHLJTxFHN9PYCVWX1SrZFBjCbnG4GihsoFi4pllb8cQupvC3h6Cc966
Kj8M0Vmn0ttWy+cgRSOlt3KNFj9xS7ZGcsG1YxrtSk6c7VuqA4wOdVJCFJs4
wE6k9TVXARqVUVESvijyQ6qFvAe76eCTUQptVyS7d9YGKKopfSmh60tUpjpz
qSXkUhM9mrSq2pLB+h3apDPV3m9S/w1lvlAtc6Z8a9JOtY+t1vG+EaqR+IrX
1lrVY3P+pEbfa73bVo/aHVCoVZXwrSMVLNNT7NpTstuaRtAXxcRCkDlTOJAe
kTp+YbUC9GI6no70tZTsPlm4QiYc7Ap84Qa3rUjLJUGgKXEnJRBBHH6F0JQZ
YRbgH7Y7g4YIDUK9vQQpyEKkbx3SmvqMM4WaL5G6dkmwsKkXAnFEnjgXSVwc
ivLxe3mzlS+6KZq4ci/PRzRpJ2kSr6ikahQgNplosInb9EopKZOubfnnhnCa
jkzTV0T8A7IMKxTKkA55lgt75yyifiMpMBCV64HuiGYAs3K+vgJ6eAVPlEAe
QszvAeyc8H3wXHKIQOSayz4Ci386in/XmAIvglE0PtjRFwwbQ/Emg8QIw5Ij
AviOAj+THhEgLuRNP/OPBS759EVxtJDP1sOm44uXKfK9VutepYJcqboiZLdQ
rN+eKw6bgRHhV9R8zWq+ZOfCnXlfbRTHrrwvN0B/+vwlB9jAXuGz9cBGHDvJ
VxtZZn6wWpzK9dSKA2rCV/5thQfvDorHQRanmTB2Z6bZ86svT2gmW9fCAS10
69p8oAIr+5cbgIo49pAd6wnlRRMEK/tXG1W7fWvVEUoUUkqhlCCkCpFCiSFd
8kiF1I4TmmNvrIUDWuUbaz3gGx52KElv1fj4RZEyWHO/2khzBo10x3qDHb+y
XQcK9QzLEIb5/FYBLy1IFTCb4xMq2Om852EEMvE9ea+uAS5wQAvgrFjS4nLS
IJsWTtxhlTT+wRg/C9oD3HqlZCphTMAuyasjjwnwgr+BVZtj3fqSuWz9al52
b7AU1cFYDrxgYdvyIpItyMcba4Q34YDEkfwgYXE5YSAG92aw/bPo2zGFmVJj
XXiyvAVrT15ZJaVBydRzm72wczBQoDSq6JiQycAB+SIW7mN5ist5grWWk3nP
qofjLLoyFvAKv1iOYinZ88LrwV6ylpFqXvb1Qp9UfeC8hOw8OCA7xMJ82nax
Oaq9NyuklDripMCE4DGZlOIzTmrXoZ8s90n13Z+2ezOqsf8QSUoUTuC3bkhq
hrbGb4lWt4nXotrE94zXqUiH6KZ3oJKsLjCO8y3H0hGX09HWFeplixb+rUJE
KSWMyFyklDojrju0ja6LWp3WRyXoq0he2cYDDmePDb+1rfS9mftzcWqKbuI7
FFpKPRloQT/fM+H8wQGt4/an756M6t+f6lnUIaZjo7MrPmgsO//eRjBbJyQ/
Jxt915ZF6fGo/s1/E8opSEuo15JKQGp2xe/3KweIifeklQ54eludp03XQ1FN
/AOFmVJL9YjpZosr+EFj9+QdTHPjzU7zAoz8+ipD+sb5lr60WJv+K6pFvGtF
y98LcVrwoyJhnnmyaRUjycvsz+3S/RZt/m8KV6XiGhBzzuLrlZfS5tgSyoPt
y0Nck0EJwnlq3qv3m1HvjMro25EsoSTBmMFFFDOq6CukDMYYkFmxPzdOFv8A
j/+LzZ8i/aQ7UnVHBq3et+eaH3fXdFNU339NoaRUXHfk6mMm0kiez2GP3pq1
6xpWTJjH/GJ6RaHRJNPogRTTDKRxvLSf90dXRvX0DQoHpVR6IKVyRNAQ/FT8
9cd1V+TTX+sjKSkFMx2p/q37bvn5lUVXXscQLw7qwS/xnkg9TA9K3O/KH7XV
SC55/3mDkS5SaYSVpzSez6Lh10MvpB6mIWX9xX5bNM6N2rc9o6CHb/v37Hsh
193TkGr+3no33Uy2rzN0JIr4rKg2+qSCWDF6L8ToU5Ha3duGfXKkZ0636KGP
6Tn0RjxzWKC6v6lyYcy3NU4C2KjSf9gUsRgssqhh9m9M+SeQq+bvgxCZgtQw
JVLRBg95ROLGLeLJUb3zoUgWiqUmIyVMWdS0aU0IEsQqW+O0uC5fNv+c4EGF
qVLuBqbKtooy7ZHDRiSJeQ+oxY32m2PRe1cqdJQ66ovYbxLSCyidga1eR7IN
6ZLNT0UYsjGqK9/bKl5KV6a8Dm6zIRk3bkgnbEht8qZFdfG7GMNFSMn1Q4w4
Udc40rkYkaXPZEQK/jCLDn6bFX5/8zIB2W5R/FN/XOdNsOgRtyjUlB7RHzHf
eF2PaNzn5tv8lJX5RkX1+5sUhkp59Ue2/2ld2zjedtWydd4Ii/RcFwleqZy0
rjcsynkTpOSG8QlWKjU35pVqkEVr57/WaiFSYAOQq4Nxugbxc9stUlL2XJCj
zU+Zl6n+Ub38Cj2RgUg5jdF1igtzNFuYyPvPx4ytoU9Uy/61QkTpCwORqhmj
6wuZfW+8YFUyG6/eorMvU2gq9TUQqa/Rus3gFdbGw/MlG4+Cr7VoDplI8ErV
jNY1hxtabTaRELPZqqNaNP8FYScjVXMgUjUjkVu2lMjtbV6EFL85Yb9p+0K5
RbZ+EUlSufg+RNcaVtpvgmjqYuIGDvMZdgOnxKJFn6/AVxrCgUilHKJr0Q+3
fg/khO0XA0Jm7xVEdeyzFV5KEQ1CvDdc1wGear33UrL35J4A3pNyhTkv8iFA
9g/yyALGT9CmzAbr+WU3iXWtsl1CpqLeP9lr0Z5PU8ArNTMYMd3Bur3bn1tj
ulS4MWxfxxqDZDv8Ju4PFu3glNyoDdO1gzejV54o07GCsjNd5KOAP1F4uXKf
GIL47SBdn3jXclEKzBYTl0Rhp9k837cgC7bfBjDYQ3Vt4JO273cYPdlmWCI+
sejZ/HfpnRTUvn/TfSjisaG62v/acncTY/RkR5EQi4+j+vGxCmalLiTM/qZm
iK7kd+07/0Q+pDdPj/kgxDyDdXd46RD7sRy02aIBz1aYKWVxEHIZMEhXzXQo
3nc2etOipI+MxK64/0BdSdOhg3kFQdyVku/Fi6VF3ORArIZdx/wlqtvyX144
H6nwYcglwIG6yzQ61LZ+CxOiKSctoMkIIjRtnt6bqjBVauxgpMYG6voCHfrk
uJnBzMhuvon1n/H6k0VTnhxJRCmpgbqmTIdBrd/Y4M6MI9RiSMqei+rjExSa
SvUdjFTfAGPnGNlqZ8bpN5LqBifYjtJm8kxUfx8XyUWpsv66vRodJtl7TwIf
AGeXcJAcCv5xiy4+iuE/EekSI5Da6WfsEtP3o+XUC7iQ5R6y6BIjFKZKcY1A
LrL7GrvEXMv1yk/T9nVaj0U+ojcsErlSL32NbWG+5eZHa7D3n/cNZvPM3WAF
vFIghyAG6627gUOHU1q5Acpyl3i32Mpdd1i07gNyo9nL2AfObru7/BzdFtWN
+zHkJyAdYCTirl7GDnBRtLvQeuc31+LBrsC4xNwQ1ZZ7K6SUksFI9TRu8C7d
N67bujYn19k8g9ddT3MU4roexs5g+8hqPNj2CMeJbU/2nbYrLVpEncJCqR2M
RXdjZ16+z9agHD15aVQb7xpJU/Fkg7FF3N3qbQ/7RkJtGPzeDu0YNs/ssV+5
zD+zT31mbzRyKd5g3MI9mOu2x9J7Nk/tdcwi4lfQGMR7dcZG8eg+9d72dbL3
jL0i8vG+CoVmE0JTubKoMzaKtfvPe5FP/ZUqRJQiGoMUUTdjr1hvZbysm71i
JaNvAmnu89o8/VcUyUW5dqg1NoRX96H39pC/Pc3e4sJuDtk8D8g+qJgch5TV
OKSsuhr7w2bLhUnjrhby0R+ZuyIfAExEwlbKpIuxG3xouxfK0VrHW+ifpxAB
kv6t9nFImXQxbup2tG7/w78BZlJ7NWaqiKf89ih8lFIZh5RKjbHs/5Gbn1zy
18dwP5me39ulR5xGKqCz8cZvS9uttJtsfyHLStMN7fZfjMCxSC2MR66Xq40l
TIfk/vBRxEN630WyUAqhythj6VDWVvdsfYa5J+IZvK8V5EoJT0AM1MlYwnSo
2qdLxBtriMlaYwy9lt3QiKe9kxl+8F/DTH9XOv0TfD2sSKDUECZBR2PV06Gh
7VuXN9bg6Yx4Zu9A7kDvnMsPUuD6zNOC86pIzophOxp3anTo37ZdjsbC2M36
iOf5+iESlDAJfPrwxX4DDv9YbbVmJyISdIjuPAf9mM4faFgVeiASlAcu8L9W
6iWYhDi/fXTbGttG5yeZZVQXAH9qBNNDg3W8g8mc27t+tftf9yuclYZn4Gxq
eFPasGzmYPuIpwlrEP4dAv6+9e9T+CuVPwmxfUV0tzuy1bb311zodkwGfp3t
hD0f8ThiJ4R9FYz3W9H1t3QV0Y3umJxWZrOhTQ8mtkcoVSOG5v9642ikiCcj
hi4z3vqmw8I2GlolvJtsexY1dMQziyWckMy/Bunj90TyV66mSqOb2Olt3EFi
bt72rOzmiOcd6SV7LZJrlavSvCYjxVsa3bzOi3azPtdac2N3j1KGBSuJ5Lor
smDdrfBXqnkycoFWYrxypsNSW68nsRUafiQuFmlIcdC06CIdNyxY4hf/yJxp
znlBs2d61AcmD0MKul10y/p1W1dl2dNBnrc9y/Ls2eCcBVn3PZvoZ7FlpfAu
hZ1Sroch5RqD0etW9/ZNRa9E17XFzA57NZC88zcuWTRPfKgktVqTlKXOudGa
Ipy5mmxKfucl04UPh4XRA/m6t5tsnLIrPm0Go2ruTLfiiYRGzooKVtuRg5s9
r4ljV97q5ewfFHutueDTF93UQ9e7zjkL6BEbOZh9QLKD0CxHGpBK05Ub0KEI
zQJBdkupSxaOFgdQFhvpMMX7BMX7l8O3xQEp57+mo5l+kocH3zMekAFS4uDk
KDIPn1c8QIySc5BzNLvFwPOeLGJ+Z5mIECsSxFbXysRcMm2gS8b13xX/3xfD
xB6CIQZcYm7ytAWe7vGDB4tFjx6QDUHM+7M4R//PUcdZTmieFBJOkEVHzqLE
bW7QUPy3USaKkmO8KKtiOua75IqBKjeA+ewlLml+GPiF6NHH6pOUWVxmBiIp
usNf8/mHn/rfEC/GPqHlDgW+UloTEPjtYIwDYhgH10I+ADPM3QwNPu+fa5Cb
X3SgH2nVg9oyDo7zcTXAWOGelQDAO1LE/SahXFku3lBORQV04vfoYoD9u0Hv
hABDGapFwso5GrN/vyUoGNIAYw+YoQeEZsuib2j6+Twd3Y8KPUk8HkWMApyE
FyMUlHJIB+XgUygRFORyqPboXDwPVgegAJZBKLyqU7yeOQFEBVSURgOMSyB+
NaCXUvFDjP5KHsED6LoRPMYhPEphjAnvsFqm8FMwhhfUXDR/DMauIdRsgaGV
u+lfMf/FbgD8KKRmaQIqFKQgNatMhlTrmNG+3D10+u7lFn3Nk9CDSyHX0jEB
oFdsLVaAhpAqbtdKDO1KWIVVaKHOJd8iUtfrKpQq70JUvpdY/ER1wKIbYwHM
BAOgn5aajIGF0mQYi3jAgtA1gSn//eUqhQeMbgnloB4xD2V0LYexrTiUl3iw
88+Innl7ln2ahFC0ChwkyjDfV6x9+hVcQIl5KdszTwiwK/7JcsptQc71S8ls
RUzGqiMpp0fuSTxD9K0OhxKNC07y0qEEjMEo/h1lzSvhNS4JvwfS9WZnZ6H/
Qs0TUUQuablEsIa/wdgckz5rjkrQMedmQCWgA23FrLpoZv2XxIKkNoWSuihI
aoYf7IrC0SlAP5Ip5nakH3dd9gFxiz4jbuJ7sY1hvyKD/gd2Zs1ELD2M/97+
4pVZGvyldQ6gwxLEBjVMDahcX414cN3jf/HPRFiSsxqhZFTBmARxYqBLvuhP
acLccXQp9CdHVsMNbeKlD8W8NOd2pfXGGqTgqxGrOHpxzteJk9A1gVIYC7lV
uE0C+8egWIRf2ILDamRvf1ZSY43ri7a30WEvwrcKxpSeYMbYDTCCSRjbUYIp
uRZYsuGnL54HWQYLMNqiRWRow8j45zz2kNeq6MUoGA5HOHZEDC9+Q4zc0znl
y20ou0WnEeBIeZbAKLbh1Nc4nU3Jez3FjTmiw/UIifaIMVN6EtdLJBgctYu7
iWGEcvAOqMvTvFaV7UnavkLgHg4WfgEQfklYIW8zPrh8PbjlhPitTkk/tb+j
Q5gINVh+FZWF8BEEYSnigQKxe+J72TDCEh1CfkVfRH/XZ+LxAA1fwmAno8st
Bq4wkE8AJO2QmrxVAgfedP3/SKUOq3Ckkv4EfGdTstHvHKBBGOmjAVJABofX
370xBsBD2S6LhJuR4daK1S7jAT7K7510JXZ0nSWEb53YNsaCS1ke8mYY6iFG
vlQHdruZUJRnEBvLUULEurI8NBFJCfqwWyJDDEtmKOjqyKDprKA14hutXadD
GO5HNkgcwy2IAWsY8YxMvEEHSbs6hjDcgbhqhYJB0aEzIv5AowEsMNyox7AC
wVDNMKRlDAcbMSQQA1ytD3orErQTEjRtDGphwksRE3IMtyEYOiAYponXWXsy
hOEiPYbbEQwViAGkSzRLDGY/nKGHxK7U1YZQitTFfB2kVlp0MbKQcUh3I5CK
Akh+tujnMDhtwHAi4lj+0WP3+hASQX58QS40RrbwyDx9ZHqOPrKTU/udgaws
8owjdPmzDXAo4iE5wHhdANvGeUhEgMONolsEGISsDnKAOcYAWMvrh6TxZmnG
E4wzWoheHxFgsU5026xWRQQ4I+cA5hwUI0mW412oi9fKnGP3weR4lxgzZA6w
K2LuK41zm5PzHdIe5blvhMG2QXyGJHm5NNkdOtEt5v4wYu6Vurkt2sJbSE+T
536kDcnbhCRPnvtp49yhZrA+YrIXjJOZBX42cEITNvcrOoEtkrcGSd5N0txv
5jy3Vu8HIkK9qwtl4ZO7Iub+1Ci/ee7lSGrlub8xzh3yybURk9En922r+rKI
ydgMOlktAvwHIuuN4QDFugAWeTvbJkAHXYDcc3mqTbxuMDitC3AS0rCyAvQx
BjCn5Bgk51kBBusUs8j5kTYBRuYcQKvYJKS7ZcWbqItn4bHRSM5vCAc4wpgS
c4ChNgHmGgOEusQAmxnnw2DbKrojWc2aUfrFWarKFgE62wQ4SxfAIo0lNgF+
qQuQe1aTSA6uD8e7FAYn5wAtNnNfbZxbm43vbeZertPJnOkvkO6WNfddOc+N
SfQBku6sUA/oQpn9tNlm7keN8mvnfhVpZ1lzrzXOHTSDDUgurwtP9ifjZNpc
NtnM/RedwGafPGEz99s5z43pvQrJZVao93WhckrtPTahdhizoZ37Fpu5vzPO
rc3G9Ug2fhuem/7uW4vV5HKbyeiQ0IluDpCxDlCiC2Cu/nORJoYHqDLqrQ1w
GpJLPEC9MUDQBxZZz9jPOKNW9OOQroUHGKoT3ZzV2UhWr0UDjM45AJaDKdbx
DtXFyynnY63jzYTByTnAMMQCeICjjQG0GTrAOgD9MFqLVtHTekbp17yrOTAH
6IqIfg0a4BxdAHOrKLcOcLFRdG2AfOsAlxkDBK0iD+lu+IzXGmfERN+JJBSf
23+f0zqhX1nPfU/Oc4eU/whpdnioVbpQWttsRRJ6NTr3GqP82NyvW8/9nHFu
TKI/W8/9Egzm6l+H5BKf7DWdwNq5n7Kee4tubm3y/mA994e6uW1zeR+i91Vo
qM9hcHKZ+zbruf9pnBuTH3uuAJ97j04ibWqvRFoXPjcdUjkHCOm0FEm3IV6Z
Lp7WT+fnFqAzDA59pWWmlyCdzBCguzEAXUN+iuT3Sv2MA2AwNwPsLXbDjOLj
ObJU1gY4KrcAY3UBtGmciqTREGCKLoBtVtO5xZsFg5NLgOG5BTjWGABLyWAk
JVfoAyzUKabNeZ/cApyec4CQYl1yi3eeLp7WY+2R3mcIsBQGh85rmfNCJOeG
AL8xBqCtAntj3TDjdcYZ2Tn/63L9PHTo/e/v//v7//7+//fvk7z/A3+JBpI=
\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"d3a638fe-8723-492a-91bd-a22a50458120"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphflgQ", ",", "gphQR0Q", 
   ",", "gphflggsd"}], 
  RowBox[{"(*", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vtet", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   "*)"}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy08og3EAxvF3shXmwrIDiUU5eLMsO6xkk5DU9NJi40CtMcVBaju8NRws
vWrExprsD5altO2l/EtSrFFyMOVvmXLQlKIUB+/zOzx9eg7f8oFRxpxFUVSp
MFhhv5y0yDO6Qp90GiqZiAfKPn69kBVL/NAuUQTgsy4Yhz+9ZTz0brD7kM9e
J7Z6vJcw0hogyj9nnIOCJ2MuopmZ42AXHVyG35acEGzqia7Bp4VrHspoyw5U
3ikP4di8mtjA5Zk4QYnR3w8nbOIh2N6YsMK2lr8oZLcdMZh6NXCzggZWtQSr
I7YVaB868kPTsH4Daq8WN6HxrugcauiSBPnU6U1csKhbm4IPB3P3sHjPQ6Sm
6mlecHU8vwbq0rkq2KcP1cEqV6UGdjSXdULrl8gM1Zp34tlS0gHDx5lJWLs1
sgi5l4QbMnt6H3y4dREfY29B6HbGwlCRdkShVPG5S7pedxIWiEUX8B+efeS/

  "],
 CellLabel->
  "In[160]:=",ExpressionUUID->"311d9d59-233d-4669-97fe-c8966a15c7d9"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.025], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.025], Opacity[0.2], 
    Point3DBox[{{-0.20034016451692505`, 
       0, -0.1001700822584625}, {-0.1812093811334951, 0.058878497072448174`, 
       0}, {-0.12080625408899673`, 0.03925233138163212, 
       0}, {-0.10608181943964821`, 
      0.07707295327109026, -0.025042520564615617`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.2], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, -6.938893903907228*^-18, \
-0.1001700822584625}, {-0.1812093811334951, 0.058878497072448174`, 
         1.3877787807814457`*^-17}, {-0.12080625408899673`, 
         0.03925233138163212, 6.938893903907228*^-18}, {-0.10608181943964821`,
          0.07707295327109026, -0.025042520564615617`}}, {
          Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 7753259513917747691}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, \
-6.938893903907228*^-18, -0.1001700822584625}, {-0.1812093811334951, 
         0.058878497072448174`, 
         1.3877787807814457`*^-17}, {-0.12080625408899673`, 
         0.03925233138163212, 6.938893903907228*^-18}, {-0.10608181943964821`,
          0.07707295327109026, -0.025042520564615617`}}, {{}, 
          TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.1812093811334951, 0.058878497072448174`, 
        0}, {-0.12080625408899673`, 0.03925233138163212, 
        0}, {-0.10608181943964821`, 
       0.07707295327109026, -0.025042520564615617`}}],
     "InfinitePlane"]}, 
   {PointSize[0.025], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{452.5236746671434, 286.21082992163645`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.7048827576469003`, 1.2364845061817964`, -2.6484865203830403`},
  ViewVertical->{-0.047918744916456306`, 
   0.9899922252281582, -0.13273728893355852`}]], "Output",
 CellChangeTimes->{
  3.904577068319426*^9, 3.904577107790009*^9, 3.904577204843041*^9, 
   3.904577243220257*^9, {3.904577339057407*^9, 3.9045773500231943`*^9}, {
   3.904577456974864*^9, 3.904577482898443*^9}, 3.904577533450211*^9, 
   3.9045776159230757`*^9, 3.904586546139585*^9, 3.904586600305471*^9, 
   3.904586647289846*^9, {3.904586835464059*^9, 3.9045868561513357`*^9}, {
   3.904586890082985*^9, 3.904586958611725*^9}, {3.904587014825247*^9, 
   3.9045870226308937`*^9}, 3.904587066741186*^9, 3.9045871011335897`*^9, 
   3.9045871389656897`*^9, 3.904587204216839*^9, 3.90458725950412*^9, {
   3.904660186235461*^9, 3.904660238771346*^9}, {3.90466029763778*^9, 
   3.904660311563868*^9}, {3.9046608810522223`*^9, 3.904660885239986*^9}, 
   3.904662620373601*^9, {3.904662654791161*^9, 3.904662791311962*^9}, {
   3.9046628429817457`*^9, 3.904662874147621*^9}, 3.904663052260586*^9, 
   3.904663124251019*^9, 3.904741071150919*^9, {3.9047411053431187`*^9, 
   3.904741130845286*^9}, 3.9047412162016582`*^9, 3.904741249862784*^9, {
   3.904741286850507*^9, 3.9047413260582237`*^9}, {3.904741807941483*^9, 
   3.904741848037326*^9}, 3.904741929236582*^9, {3.904741985562289*^9, 
   3.904742050284219*^9}, {3.904742206075004*^9, 3.904742247004031*^9}, 
   3.9047423079600697`*^9, {3.904742415513938*^9, 3.904742430571645*^9}, {
   3.9047425851396513`*^9, 3.9047426021523857`*^9}, 3.904742640607244*^9, {
   3.904742689382316*^9, 3.9047427188007727`*^9}, 3.9047428011350517`*^9, {
   3.904742832463667*^9, 3.9047428453240843`*^9}, 3.904743010932149*^9, 
   3.90622480477949*^9, 3.90622487646451*^9, 3.906224907179846*^9, 
   3.906224954381138*^9},
 CellLabel->"Out[160]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
PXb02NFjR9FRlvf/APnpZo4=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"b7c84e5d-8603-471b-b63b-16e9d6de8191"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphQR0Q", ",", 
   "gphflgQ"}], 
  RowBox[{"(*", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vtet", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   "*)"}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdx08oQwEAx/FHtvLvRHOgsCiHLUNWVrJJSDI9Wv4eqDWb4rCUHVYzB0tP
PTKbNdkftizR/pA/k6QYrTQyNUOhHDSlKMXB+73Dt0/f0uFxUplOEEQxEyzT
RY2qgpQsz54zA0WkzwLzP35tUM/hOqCOy3fCJ5krCH8GSkLQ5tEfwFDGOmur
xRaFvlYna8HnrGmE8URLsyrJeQp2C13L8FuV6YZNvf41+LgYC8F8oWoHihKi
MNQuiFkbqOx+ipHb5xiCU5McNWxvjGhgW8ufH+q3DQEYf1VQc4wKfY0VCnyT
K1CnPnLA/lG5B0qvzBuwL8E7hxJhUYR94vQ2yMjrkcZh8nD+HhbuW1iJ6Xph
iHF1IrcSyl6yauCg3F0LK+hyCexsLumCmq80JRRL3lnPrJcG6D1OGWH15pgZ
Us+RJUjuy+0weUezPgTeXHDJFPBC/ovBD3P4n7tQa7wIQ4E1dgTpuqpruNex
dQP/AVdv7qY=
  "],
 CellLabel->
  "In[123]:=",ExpressionUUID->"a0d4ce15-b724-4546-984b-c0bba6337617"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.04], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.1812093811334951, 0.058878497072448174`, 
        0}, {-0.12080625408899673`, 0.03925233138163212, 
        0}, {-0.10608181943964821`, 
       0.07707295327109026, -0.025042520564615617`}}],
     "InfinitePlane"]}, 
   {PointSize[0.04], Opacity[0.4], 
    Point3DBox[{{-0.20034016451692505`, 
       0, -0.1001700822584625}, {-0.1812093811334951, 0.058878497072448174`, 
       0}, {-0.12080625408899673`, 0.03925233138163212, 
       0}, {-0.10608181943964821`, 
      0.07707295327109026, -0.025042520564615617`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[0.2], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, -6.938893903907228*^-18, \
-0.1001700822584625}, {-0.1812093811334951, 0.058878497072448174`, 
         1.3877787807814457`*^-17}, {-0.12080625408899673`, 
         0.03925233138163212, 6.938893903907228*^-18}, {-0.10608181943964821`,
          0.07707295327109026, -0.025042520564615617`}}, {
          Polygon[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 7753259513917747691}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, \
-6.938893903907228*^-18, -0.1001700822584625}, {-0.1812093811334951, 
         0.058878497072448174`, 
         1.3877787807814457`*^-17}, {-0.12080625408899673`, 
         0.03925233138163212, 6.938893903907228*^-18}, {-0.10608181943964821`,
          0.07707295327109026, -0.025042520564615617`}}, {{}, 
          TagBox[Polygon3DBox[{{2, 4, 1}, {4, 3, 1}, {3, 2, 1}, {2, 3, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}},
  Boxed->False,
  ImageSize->{456.599852337204, 332.0733411310791},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.0314953360644346`, 0.618976972698215, -2.6343678951159806`},
  ViewVertical->{-0.27399414367448854`, 
   0.9396256489951951, -0.20501426531449454`}]], "Output",
 CellChangeTimes->{
  3.904742905596632*^9, 3.904742965520151*^9, {3.904743063419589*^9, 
   3.904743080366745*^9}, 3.906223628240934*^9, {3.9062237392523737`*^9, 
   3.906223764573887*^9}, 3.906224740234737*^9},
 CellLabel->"Out[123]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnXeYXXW5/benTW9JpiVTUyY9k0nvmZRJ7400UklILxASSgITQpAiglgQ
NFbsWCK52DAQpQoRUQGj3oCFqKAXjdfbvfPb37LLe+azN3Afn99f8Dxnz2SY
OWet9a53fd/vPvucM3/jgW1bdm88sH3zxoaZV2zct2375isbZuy9wv1R8l2O
k7zbcRIfbnBS7vcdjhNz+KDjvPPTd376zk/f+ek7P33np+/89M1/er3+d7La
/cdwezP/o1v2b14d/OY897ZV/TBHH5Pz7F9W+39dmv3XB+Gvi8xf68f0/tPf
F2b/9QH46zLz19Wd/jo/9P18dUi1u/9KdagfJdW3rfZ/mmMPc9/e/ep77RqF
LC/0/Vzzh+oeO+zNyTeP8oh7bBePUml+eXj4UcoD9eSj5Ia+nw2PUmIexefh
/3LXQCf/UaqidMqEvp8Jj9Il4CL/sAwepTqKS/hRZpg/fCT8KN2CR2kVipXA
o/SIqks69H2b+cPW8KNURilWpA71WzvsP3NC/2s63E911P0UmF8W9a2N0iQV
+n4aPEr3KOXtowiv1kXVNxn6fio8Sk0UF91AjVHg4W7bw3dba79jTRp8qdPZ
99MQxVq3Qy/8wykAoD6KV45/PyRXovPdPgJ32x57t52dGb7bVnO3reG7bfiH
3a0QoVEdX1c/r3V/7pR8XeVI8lyt+RP9Z118RVNv5c7u9sE77fbmDFDHQdrr
HasaJud2bOva5CQ7RuR19R8lx5hGPb5vguIob70lVuMASH99VAUL+PU3j9wx
uLRegVM3Z4A6zu54sPX6RMfzTfOcVMdDNWM7buzapJAr3An7R4rCNvNjJ9Fx
omZsQOt3Y2rVb7jflf5fq6P+uqOuQ4FXmJf7PAp8QbOA99fHZMfNQ9cp9Orm
fEQfUx03t67rWNU6Wd8Gt9YnOraqmnYcdeF6zFwCKU040/FQ09iOy2u6dlQ7
zl+7Fzu/WNmsGVniryysLPJq5dUpkt8fYy1RaPiZepTucq2+Sv2rYVV3xeVv
GnxSAe5wNVLgXQzuMc8WxoWsFPcwJp67fkoY5JlvjqrT/yrJDoYPvD1/vOzU
Oo+6CaRuzgB1bDrqPOH+D/fbL/oVK/Hrpv643SX0RyfXBf5gysX8YVWY1tv9
wnSoY54l+PSglYqRZpXWx6Quie8kRczJUd970Dx+XjFMIcIcJ6jDoJBZBIv+
+pj8hDuzKSqazuEoUlrThEev4ZwipW5Ogf4uTOXbY/f7VJJAJaWppFW51M8u
1BQ6b0wpyHtlV2WRk1CEjIB+DhRm0xqkDqXqJ4MUhZdiC9Hq3h4J2ikLfZ6P
Pl8dkuyqtEGs/vnDyT2M+LdXdHnl1gCx6IiCqI5Ihgg4mXb740fdlUR99arT
oQgVG1ZudbZ2rkR72uNS+scOZ+gTmkuOPiaV06THcvW36Y7vDd+SzczJBMVQ
hVD0Xllc0cWEAxQj3y+GHdkG66PC43zCnd+POo/pr4qT14iKk+cyQy5fHcp8
NjnAJh3PJqkzz7NUblCgf9o5RDP50Y296zu2VvosRIHyopb3VJiUDgdVFEXK
SepjxiPn2shRkfSos9sl9z7DKxesWOzTzAvTtAZM2mOnYMjY2LY0X3JGOk9u
XGiZZhRrxfLEZ2c6HcMd58zDIwZ1bK33yP6ovam8Y54lmxu1jtp2GuL4qaeI
GZr6mH7U2eUKsFQQNUwz6lDq99UjttO8vU0q3GVuen9Wc8rxliJ3eXKXrded
Kuf7zkon8VXnmAtA0VPsTC0NT4VTVfSH1/fQLefxTBuebxwsyHz97vA2UxOz
O6NmQyxsTVWhx3SFAmJOQlHTrJKmfm7Nfy7r52e6+VlBKEps5UzVUswwDQxD
ie5V8sJ+17ef6l3/yu393HDpX+TR/NHH3XJutTQzUeGSEazbw94t6FxO9VXx
NsSzgiaO86qG09KpSdmQyqlOLhBOGMLqdxRZbd2txro+4QzUNRVF2G7Dhgb+
9ctcpI4JxVd3WMD279ChRcDWbtHdIr4s2SY8tu4Y5d6xZlug2Jp65nqLhKIX
du0rd/erUhQzUNJkVBzlCoat9seaYakp6SecOx1FU5D8b7Cx3ZO6zvyYJGRH
Q3fCet2Z57p1t1Ooi5f6Rq/9OnK8hTqhKDlpz6Sa1L39al75UP9KJ0ezSoXr
Ns/rRnuepgVipouXqQGJcNT8B/CohML8L/Mo1TzSqgk/s3CSMJ27bLvw3bu5
vr6Lgq7hZ5UmOMtVZBgMgzzpFs/g34BBOVTif7NdtcZxyjT8jMqPF51yZ63z
A2fX+I86p7dOcE1V34UYmLxIPfT5aU0PfGjRkFe7dC1oZRKt4XiolCSyE/9f
gUSXUBksESTR1ZBQCI472zUJdXvRmeZ8Z93clsQDH50/xf2Tpf2rFGB18yYq
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
HdnsN9dsiOvaaB8SN3FKbzOMy+a8uHM9JMSvgVu9bC7FTVUsBfQawZvDfG7T
IcJrox0puC2Fum0CR1puNxhuYil62VzmcPA3ymPDbw4I1sn1SJFzMsCul2Gn
iub7cwR03mRI+Vrwp+X52qgJfbN5ihpugqVK8hRZYq5WyiiiHQ/+Nbjd/IRO
/Vq5aimGTq5hq0qrclNz6s1WHQWEx8GKUAempahZBoXdAKY1TzzYQsuo+bk1
bYiwa1d1lPFTDU2ab5irf/vDbhMsf2OB9qjoOgs/10TTFnXeAH6WtEUO/cyu
5rNeCmhngHYl928BMO8HDp/g928LrCh14GviuxzKvB58bfkeBV+/CHxzgG8F
tHMRkO0Pe4LJPtnBMBDEePrM6qVT/AuEV0Bx14GnzbNUzo0QVj8FsrmW7ODd
wWanG3RzsSHrLaua5iDw9JSoTV0f2NTVRRtbBPUlcKbxUtitSu6t4UL/BLjn
We6r7g1yu4u8+EFdBfxs5ohTAtE9JGpjOwX6uiesU/XRPif64pTwpeBzS/9Y
EGf+Gvw80M/Poq8uaim105Tta7UH1pO9s9n1/F0oQzPsTmaAAnUwhdTDaRdS
YCUYYA2cdtktFBDJphUoyqKsZrMSS9m2tqKrfvVR914uJPY6pUC5BYw/C4bK
aljD6gPPv1Y+wVwpXxss2meWr2gJUxZFXwO7Gkv5Jgi352ANK1THhCJalLXT
dKcX+7GISa/cmnoJrOPDeB2f6zd/OSxjZPdaiPVVUOzVYHfL/Hhgdz/pfmhP
4dz7J2JeYC+U8XpcZZ/7/9RvOwlvO/sxXX3NvRSCfgS4foFPvxQK3wBej6Ev
Cr8KVvE9gr7w+lno9iKffl7WxlZH/xMuCj3jKLeoP3/Z2a89UAbkR8GmahG0
fAGsd+T/OpBhNbhgJfjfynAzhN6z4P9Ahly5pCsJXE/ofFB/4TnA6QICjGb/
LwENMjDgNEQ+B5w+tWv3goe3Hpzr3R7fcMNMJ3F2zc3TndS5eXvGXRw+o+fD
668deWrL/tGrwSkroVGsRO82EomRQL+UrTSUit7rg9JZ11+5/8+bFTxnhHtD
zAXjYMe2HKRJwJ6busReu6OkUXJoMTL6mLwweWXzhQmrm84uv63FlUkdk4+v
OjZMSRReO8UTDyugm/YKjUSM/gC6qRgkS2aNDravvCnDzVSlVVg1sahMgKa6
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
9P/3T513/T9okqDO\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"a1877639-da80-414f-9a5c-b4447836fdeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphQR0Q", ",", 
   "gphflggsd"}], 
  RowBox[{"(*", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vtet", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "4", "]"}], "]"}], ",", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   "*)"}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy00ow3EAxvH/ZCtvF5YdrMyiHCzL4rCSTUJS00hsc6DWmOIgtZXVzMHS
X21iY5G9MFlKe6G8JQlrFjmYmtdMOWhqRSkO/s/v8PTpOXzLBkaV2iyKokqZ
wXJj3KLjpeVFy/nTUKwMOCH389cFTWyOGxo5Qg98lnvD8EcjiECX37QPI9nr
xFanKw4DrR4iLzNjHWQ8GbMRtUo7DbtE3iX4rcvxwabe4Bp8mr+JQK5ItwPF
SfEhHJurIzbQeWqakaNy98NJA3sItjdG9bCt5S8ITdvmEEy8ddOzjN0mySKs
ChhWoHHoyA3Vwwo/lF0vbEJVsvgCSkX8KPnU6W2YsbhHloAPB/Z7WLLnJFJT
9aII4+p4QTWUp3IlsE/hq4WVtgop7GgWdEL9F0sL66QfxPPFmBluHKctsGZr
ZAHSr1EHVO4pluHDnY34GHr3Qoc1tAGFKXMQ5gszu6TTOGKwkM26hJKJsyv4
wo8R/wE3pO2I
  "],
 CellLabel->
  "In[159]:=",ExpressionUUID->"e194f051-d884-4f6d-b969-b0ecf19ec3f5"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.025], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.1812093811334951, 0.058878497072448174`, 
        0}, {-0.12080625408899673`, 0.03925233138163212, 
        0}, {-0.10608181943964821`, 
       0.07707295327109026, -0.025042520564615617`}}],
     "InfinitePlane"]}, 
   {PointSize[0.025], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}},
  Boxed->False]], "Output",
 CellChangeTimes->{3.9047430361261253`*^9, 3.906224944299223*^9},
 CellLabel->"Out[159]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
0ZIwol2Y6G5BVBUtTrHSd+cFtv4op9jsGogqAcU5RQ9EK8G0uwwcFGQugeJV
gGKVoOhZOKR92RqSl9WAZXvRo89isKRcDhb+U2BqnATD7dsMlrsAy8Gg+owI
j9jBnCjNLk4qoh7NQ4uK9uhsMKkqB5MqdaPSQ8+xc5/9hTcr9HwYO/fZ39D9
VA69okdf2vjIa06udgLONb5ndS0aHT7i1ELOh5cV7d8pTs4pkzNtxPf8L16n
w8E8p/+KpOiNOQlBSwcz/Ttu0N4OilM9cPW4kIBuIM7ykIjIElfOd1XRnh45
sKeJKa0eeD2mz//iDWYOrd2SxguDUrrY03s59YEjBvVtgHoDGH0mhow+jS7q
64t2+NAQ6jc/VE+EOWlBPZnv6RHrwJLuoR3jPMozXvcYpunnh8dV8ffp7z1S
Gi7DIUOCK4EEjWBomhye6E0uFTYXPT5V+irolXY1qV50XadWISFineuo3ovL
v3hpz9/vmMtVyXBREkoUJX2MFNlviLEViNEEhq9pruGr2SXDjqLnIyXgYEqd
AD3303pbhhgxjkkJFPkbT1P3vb9i5UQ/RsxRQuw2BNgiBLBK4FAwuM0MqQXD
XBrsCQ2FhKDez0ZOzbO2HJ9/yfX53ls+OTng4ng+l2OUAKLC831asSbOfOt7
nbc5dOE73kFnhMTYaUixGUjRAsri7PDEaHWpcXDAiKiqp6Nm2sTxMxQiw0Wg
tiSIKUDfr1m+/w2l18O9rzJSgKtQFZIP2wwNNgENhoER8fLwEXGES4NDfO+F
0Ya9ebZsSy9bvf0iW+ul/byltCYzps0rchTNkrKKbOlvvs6ZL0uy/Luv577m
o199aLBvMthtBOyGAw+3hwT7KBe1fSrYfWq06LB2B8v23fzpNk3JoEXVitOR
3szQH4dECNsrDFJXgBI2EgxpHSFD2mgXqd2AVJKTSmhSkkyM2MjqLCNTEAqE
4tCQUFxr8FoPeI0C49Ti8HQcG1qgBbV+tnyrIMX3Jf25TXXaP7TRzyosiRsF
I+LWqkNRxKrptJUGt3WA2xgw7HS6hp3xLlZb+T5rsqLkotQiS/1ltdUmIzWC
qJIiCowgdsVIn9hIvk+5gnKZwW0t4DYWjCgrQpJsooveRuG0fjZ3SZ5V1Yra
QKRE4PUlds4pGDOk49RUOf+jHzPFjY0LCcbFBqk1oHKMB5VjVXgwtlm8th7R
vFYrt+VWq6Ghv6yuJl82uIrzSu5e0Jv54tHezOcP9H/rN40hbnv11K0+vTbh
NlcdWWgwXA0YTgCVf2145Z+sD3SPyWOhI8w4EFLkyGl1NcJp/cmrOvpLvnDC
mxB49GLAcykx73n1V6+xj6z/NHux/QCnODU8KOcb7FYBdm3Af1eEBOVUcAzf
4aSW6o9NHd6X7FrcW9JzY2/mK9f0Z57c35/5bBdn6YXwLU82at8JgklFUG35
qbWMzbSHNx6acwxqKwG1SaD+bwqp/9MAtblOaglOLf2e/b3Zb91O1OK9mS8f
9yh5DPsyT+zjBGOSZmxiY19i77S+2345TVabRP+3Xm+k38m/L37jb1mCuHqO
mNriF5zZ4ZE7wxBgOSg4U8BAsTU8N2eEr7WFalDy9TMprkFSaPDUfmLfl7p1
NW/i/e3cARHsyrUsrkiP80lfHh7QUw3SywDpaWAE2e4aQWYBuhOcdJM2XRHR
LMM5J/KZz+wlzsrXkm5/bErjl2Ycd9NdACK7zeDYCThOByPJrpCknQNojrRp
coKIpoxuryzz8O7LfOFIPnXjCo4tLTgS3RdbFlocX2xf41fgReFxPM6gu1TQ
7TbpzgQ1and4HM8FjIdyxmmTcV9D21h6VYy9hPX4eqp4sUx8OedSmdixSU35
xK6pfZnn9qtg7ks9sPrV8qEB5lf6zJeGB/Nog/kSUMJmgbGnK3zsmQeY1xbD
XIQ151wm0rkvdecGPgBnnj+Sz3x1r6mAlc4xpcABX4EVIL6HG7QXA9pzgMMP
hMR3O+BcEYFzXHKWfDnbcr5Pkbf7Evtn9Wa+e9zknQRpjWivCQ/5ZkOBRUCB
uWDsujpk7FoAFEgXKsCnU56dAgXMeK+QmS69TgrQQPZdnv1CCS5Cwp39NGbr
CreO75PBHCAZ5CNKhA4dfqUjLfjp0HlgCDsanvodXIqkKYWSwJpwFUhgBH6l
n/IqCChMlAT9ma93CfJ+GVCJECIBn2ETfRUJQw32C0Gdbwdj2QnXWCZCwHP3
ok0e1yaPaR1tkutIj+thz2WFAV8J3J1UXHsOaa4xyTXzzQN8yjb1h5zlr/j+
Ni/yXzQj3+JKpFoMrgsA1wVgTDsdkvNzB6L70FGi+/z95Npv3OSRPE0bqwau
TQm6/Zln9xNdouhVq8w3veDIe9GdbzjIONGEoPtC+899167AdFsNuu2Abgco
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"0d53f724-72c5-4818-ab54-4716071a44c4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The base vertex ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "0"], TraditionalForm]],ExpressionUUID->
  "aec323de-e870-4ca6-b158-d1b99ea5a081"]
}], "Section",
 CellChangeTimes->{{3.904824575415165*^9, 
  3.9048245981295443`*^9}},ExpressionUUID->"3ef7bcf9-0e09-4e8d-a42c-\
ac89db0a08b8"],

Cell[BoxData[{
 RowBox[{"Q2", ":=", 
  RowBox[{"ReflectionTransform", "[", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "[", 
        RowBox[{"vtet", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "-", 
       RowBox[{"vtet", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Q", "[", 
        RowBox[{"vtet", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "-", 
       RowBox[{"vtet", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"Q", "[", 
     RowBox[{"vtet", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"gphtetQ2", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", 
       RowBox[{"0.2", ",", "Green"}], "]"}], ",", 
      RowBox[{"ConvexHullMesh", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Q2", "[", 
           RowBox[{"Q", "[", 
            RowBox[{"vtet", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}], "\n", 
 RowBox[{"gphflgQ2", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
     RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Q2", "[", 
           RowBox[{"Q", "[", 
            RowBox[{"flg600", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Yellow"}], "}"}]}]}],
       "]"}], ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.2", ",", "Magenta"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Q2", "[", 
         RowBox[{"Q", "[", 
          RowBox[{"flg", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"gphQ2", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Orange", ",", 
     RowBox[{"InfinitePlane", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Q2", "[", 
          RowBox[{"Q", "[", 
           RowBox[{"flg", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.9045849736982193`*^9, 3.904585220194201*^9}, {
   3.904585255511114*^9, 3.9045853337674227`*^9}, {3.904586518075996*^9, 
   3.904586518728587*^9}, {3.90458661786607*^9, 3.904586630736183*^9}, {
   3.904662735969571*^9, 3.904662736148222*^9}, {3.90466302413759*^9, 
   3.904663033830585*^9}, {3.9046630870017147`*^9, 3.9046630913055477`*^9}, {
   3.904741120566801*^9, 3.9047411225846167`*^9}, {3.9047412553771276`*^9, 
   3.904741259334217*^9}, {3.9047412982310762`*^9, 3.904741300773788*^9}, {
   3.904741686556479*^9, 3.9047416981543837`*^9}, 3.904741735325078*^9, 
   3.904741838110504*^9, {3.9047422403156843`*^9, 3.904742240812476*^9}, {
   3.9047424086859283`*^9, 3.904742424917039*^9}, 3.904742594226173*^9, {
   3.904742736561103*^9, 3.904742789363329*^9}, {3.904742928269047*^9, 
   3.9047429530001593`*^9}, {3.904751227596706*^9, 3.904751234991025*^9}, {
   3.904751526542116*^9, 3.904751608009492*^9}, {3.90475166411176*^9, 
   3.904751673211327*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"ec4a6293-ace8-40a3-9307-f0de87ca3135"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphtetQ2", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", 
      RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"Q3", "[", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "]"}], "}"}], "]"}]}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904751270672969*^9, 3.904751319905691*^9}, {
  3.904751352861665*^9, 3.904751394395887*^9}, {3.9047514297856197`*^9, 
  3.904751505658649*^9}, {3.904751567932004*^9, 3.9047515693529873`*^9}, {
  3.904751726372802*^9, 3.904751731507468*^9}, {3.904771691260646*^9, 
  3.9047716989814863`*^9}, {3.904771742393334*^9, 3.904771789410348*^9}, {
  3.9047718244571257`*^9, 3.904771824632262*^9}},
 CellLabel->
  "In[1143]:=",ExpressionUUID->"b87ba1a7-8aa2-460c-b773-2b9b6a0fb6d4"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1121723022632641598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 1], PointSize[0.03], 
    Point3DBox[{{-0.37818339475015217`, 0.039252331381632075`, 
     0.04915465990264948}}]}},
  Boxed->False,
  ImageSize->{380.2383375275096, 243.3505624076641},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.696755170545736, 0.42113741101184976`, -2.0000387074207047`},
  
  ViewVertical->{-0.27614722586388163`, 
   0.878459245521542, -0.38993853824084296`}]], "Output",
 CellChangeTimes->{
  3.904751510180036*^9, {3.904751571790905*^9, 3.904751579110847*^9}, 
   3.904751627521694*^9, 3.904751660208378*^9, 3.904751690377543*^9, 
   3.904751748817725*^9, 3.904771721589149*^9, {3.9047717698785963`*^9, 
   3.9047718074055967`*^9}, 3.904771844799954*^9},
 CellLabel->"Out[1143]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXWmUVdWVPr6p5hkKioKqYiwKqgooirEYqmQULOZRJpFBUERmEKcnCoqz
iYBGTTSDMSYkTUhcURNLgzGJmE66syJt0mnSWW063XTbnfSUTjqpvufsc+69
59W3j/flV6cXrPVevXq8+75v7/3tb5973323Ojfu27blpo37tm/aWDdnz8Zd
27Zv2ls3++Y93lPxK4SI/UaIK35RJxLe424h8N1vhbj8xOUnLj/x/+6JW9Tv
iXbR3Z32bl3erdu7xeQvt2a++ID6PR5+ochV9+o5Yf4dyNxwP21oNlKb5NOG
XeEN92duuA9sWAg23Je54V6wYTHYcG/mhnuCGP0NS8GGe+CGveiV7eFX7s58
JT2hXuRDlIM0chumwYZdUTa0slEh73uEr15ZCaLY5XplOvIrI7xndJ5/TCrC
ZXJnO3pBtWasgkbSzF6wYSSV7gMbRuqL/WDDSJ14INjQJF3k+FZxKPPlh+Wd
+i96Yz/VPUzl/4oT/kk8MUQ9TLR7v6S9W5d3k3mNyV/UC34QevFA9TDeHnqh
Z9fyPp4OKq1ffD70uC7YsNtsmE8bdvXY8O3Q41qwYSG34XdDj2vAhsXcht8J
PR4ANizlNvx25oa96JXtPV75FvPKnnkLv7I/kUmHyVR0dwPaWb6ykkP/VuYr
qb5Jbz4Lr+fUf6ib97vIi/wuSXpl+F285xTl7nZ6N/WKVOR3FAk/Vv2miW7i
a1jK992bEt1jU/RY0MtSMCvV6mG+9zrRtTwUZlq/v3ncTW8cl79490+W0X/9
OuX1jPwPnalQGbrMe1l4fdXDlNwiLUJ4qwdMkW+Q1EpP6zg0ZfXzPQ9zawHF
5eGG6cWiiKq3epgHoY81ruk+23ZL9+o2RcPLKbVqVwg/zOV9j8c7fYjL84Ua
P+Gn29usHWW7Qj1MSviuDHgvqR6BWHdTW43Mr/ekkXNMK1EEevFLaYAlF1MT
nw/Jrp2wepIpdZBJSTLe+x5ro7zI21uNa9T7xmTG4xohlBzvPzwaXnNIIjIx
71Wo59//Ua045UGcF7MVSBpWp8jBpkixiUsGPljcpxLTHWRqYuqytVC8/3Kz
iEtskTjjTdL3PV+Vb95uQN8MEch3ECjVBKRM2iMRkDfvSYmaVATi8qEd/rkQ
eo4DvUKhp+Rzz3oLkWe37vNEP0Bc+n4fkVGPpMQ9n16mbmfEIRWxyCEC4egJ
9I0QgYSDQG9FINndVFLzuugQd4lvekQe9F7T5qF/SdzubXdpVh/x/pxaVezz
z80SZ9Z6K5nEKfGqiEncHDsHgSBfD1G4wkGhj86B9/tFz7QkBXm7KBaKC2K5
ZqHkKDHlTWK+qsOWuIqB5mGkGKTiNeLxeweFqpAIvOclvIip+6TMhGRgbuot
8whfloF4ee+Y6xDj14nCbx0U+ttKMFl4XWxTWYiDLOQSi/NilkJU+Hl2FgJF
vkoU/stBoUZnoanR14LOQjycBViRvKAiEluxyOfE+TJx+XcHlzrNxXNtKYQw
F5mSS2KuxeWCGCtkHhSLfLs6siKigOvUrxGXXzm4DDLq8BzTywOxCPJyTlzP
cykIuPg1KgzyYiv1JeLygYPLUM3Fw5V9Gs6L/N3PSxxwKQQ1KgzyYupEXL5K
XC45uNQbvbTVyJqE8yJr5ucFcSkiLqY+ikURp92zxOWXDi4NQY18vcSDvBj9
igTQbhHo5mJHN58hOu876Iy0JSMpiESQGtnRLJ1i31pLOdH+GTH4uYNBc1Ac
XygJ0MyIQQmw11Kumb9IXC46uIwOuPjFSQTN7GcjyXOxilPGjZzTxOWvARdv
wEk+ogUIJcnnxRJtGTDccm7sfJ64vOfg0gpUkgQmlwRcykEzlztE+zmi866D
zgQgmSTwOUSnAvRzBdfPLxCXHzq4TAKSSQKfS/FcLM/tzcn3eeLyAweXNiCZ
FPC5FJBvL1Cm3lxbf4a4fM/BZSqQTAr4XA7g0hvUqJKbRZ8iLm87uLQDvaRA
Wzu4WG3dh5tFnyQudGgi2S5Ce3mGy5VALzmgrRGXStDWfTntPktc3nRwmQn0
ksPnxdJuX2C9fR1t/XGi84aDzmwgmVw+NYiOVaZ+nHyfIS6vObhcBSSTAxwv
F3CpAmWq5tr6KeLyqoPLfCCZXNDWmssl0Sfg0g+0dTU3lT5GXL7m4NIJJJML
7C4PyLcatHV/bio9QVxOqPt4WvjHkcxhQsxvIdBQHljPOPhZdjyAa/VTxO8x
eReT9OTBEXV8XPhHjrxC8EyXAIXlAoPMB0z7+yuvWq79KXHiEcpfe/iYTV7A
VJh/ZQ6my4D+8oBN6JyeE8t0/jymNaDmtVwvfJS4PAw4FwDORQ7OK4BO84GX
5IH+rQFeUsd5yUeIy0OAcxHgnOfgvApoNx/kOR9wrgWeM5AbmY8SlwcB5xLA
OengvAaoOB8sxRDnOjBCBnL9RkIWDwDOZaRqi7OOtwffdUDL+cDXCwIvlToI
87V21wdz/vWQxTcd5luu7nE+NwDdFgCvLwCuMBBoYLBjJD9gUezqKQNpafIQ
etqiuBHItACMgEJAcRAYR0M4C7s/xM9FaDPQYAHwfERoMPCnoZw/3UeE7gca
zHfw2wo0VwCcvhD45xAwk4Zx8/tei5+luRzAT3MU24DmCoHvFIIeHupPouFc
JxzlWSX83Nms/McDVntabKLHbU0x7+6st1FT26e7V7edNLcNQJBFwOsR/2HA
g+o5D7onHEkqXH99U1HE1GtT3fanuvLWLoPJVUHEVRD6Y42wK/kKRhUo4iOw
plUD11JHwi2fYvLelaIhYBgrwilNW+bc0F4LhF0EzL8ImGk9MKsGh1mlifl9
fu7tD9A083yL+Q7FWR4ZP7seaLwI+H4x8IjhQCMjuPXAncSTRJ+TyVMerpZH
zb2fL5r1gf4/rxKNb8mOaDu7Dgi6GAwBB1lrSDVyC4HbiewRnFRDVh0BK/Ib
titMOAZkgdYERWBAlAD6DcDvGrl+vI3o3+mmn2Og9231jafAskM/GtmUcIlQ
DMZJMbDrkWC+NXHGeJjoUxGsIxeGejAmenCPa+7tnoX/VKwD8i4BFlgMDKQR
jMAmRyfq04MOO2iXOGmn1WQMKyUs9BLgeyU8bUspozjfO0icDzo4VwDOtKeU
uCiqf0yf9DUJKQskcJRtRLvJH5hjuGWGPl1rn4NslUlSx4uSnJ/abnpOBpH5
KYc6r0DyXgX0jZJeCly7GVjhaG45os9X2+2IozZIuvkg0fSr4qw/+4e7c6Vg
0pQCS2kGA7KF60l9Vt9OB+dGe+kmOYnlQMilwPLKAL9RYBK2cJanT1e80cFv
NOC3DCi2FEwUxG808LSxXKPdTPy2Ofi1hvh5fBSzJUCTpXYcYX6W544BE6/V
4V83EcUtDooTg3bwKS5iLTYhKcrXmvFQDvq+BdjVOG4RsYMoXuegOCXUJYbi
AqDCnCCLkqK8iZi8T6hTJ3Iuik7vyc0qxZfkm4n53s/lXhwbsIGNBXIYzy0w
bqBANjgCaQcW1WnLVZGO0716nZS1OvFD3ick/dRd8kNpbb+3qJuIXRDr1XOh
iNA+QCsYgOO5BtxOEa11RDQTGNh8fTKTLJVmLzMfl9xldY4JGYAKohCEElf3
qXNeQmVQMiR5kyGd8wSdC6y6FdjeRM72rqeoVjuimgNsZV64JzqJfi9AP2XT
v+S1b5g++jh1HHDFiY6upnYWKxwRzAcRzM1smWNC9AYR5Kv7ZJi9ryl0msl4
MCgncaa5mbgvdXBfCExzTrhLSECQe5G8z2gGhTsRSKSNW5WQGYlFDpJLgW3O
Cju7lkglIFlKErkg5ni1rfHed6O6nRd3ewn8GJRDG7fw2EhUOx1UVwL7nAHU
3IelmnNBjPHozfS4vORRPOU9Tnvcbla0RUwSR1Y5hWtB8kgxz0F6DbDKDiDg
vizpeJi0PDfOu0+GicufkrqZqpYpTuFMcT1xn9OTuzxRTvIXG4AptgMBR+We
o+5TJvFh7lIvTWDcTuP6j8zce2ee/rWSfixjBEkDmQ70rWOQ3n7BMwvFvoxi
oHzupxjye8YQ1jzamZzmsMBrKIwORxjXuFcDKbMaMDcT5lTQGlXuKGVsKr5i
dR/v2R4NQGLTuSURjSYxzRHcchlcQsWUDC8TzLCllUIu0ZaC8zu/DTRRv4jh
lTmaCB2b6+DWSispwjZHhAud5UuAxURJEIUf7WTQdlGj7eWW7GBg0x2ca9Cs
FhMdAc+LVNJqIi+f8IOcCPqyGgSJvKWvHaQpqwlyIJjtV3K2voyCHOcIcmbW
VR0UCtgMgvGgRftHDLi/Q8M1YPdqhsOFllDALRRwuwgOyvkBT/erSrYTD9uO
DH2zaA5FaMZFj7PQvC4dEDHCWnkfkwFKQYfC6w8UO5MbFIsptlGO2CbRGWDh
YppdQ76erSFPMoOlFXRp1GgHubu0CgyWWdy6byHF3OiIuTWjnsnMMaJK1Q6C
bAFdWsMHaVnRUHeX9gHTZRa3YlxAQTY4gmyOVNh5YLqMBp1ZGzHIBkdn9gJr
nDmcD11NEQ5zRDjcvTjAVV0KBkwzaNS6iAE3Bo2ayFzUlfnHTudyM2U+hTnY
EebgYKZwRxPWgYHSBPoxalCj3P1YAqQ6l/OgqyjCOkeEA7IeKJtBwCNBbw4M
XnfO2+VWoZYAA2rl1nyFYEV0lWOa0C4FOuXLj7ZvpDXCLjBQGkBjDgL7HyjC
CY7GzAczZR63sJ1NEfZzRFiedT0PAK8dDrpycMRoJ7v3ttDXnOZzA4V2s9C5
cX7ARR++QDgCIqwHLRo1wqnuFk2AVdDV3DSZQRH2ckSY88csE45nxCyjHQq6
dAgfs2VLHQ4Nx8Bw6eSGC+1yopMI/YBjH17SE2CUDAYtOjRieDODUZIMx2bW
PWKBw3imU0jF6j4eDknOCaECqFa/h57z4ltsjchPAF8dCPpwWMSQ5iCVyu/7
b/Uk+YwOCAwN2m3WZ0zGTZAXpet4+Z6qRLUzENrzgHYdaK6otOcZ2vs93Cov
2Xu8n5s82kcV7U7OKqb0KIJ8WlIVXwB+XgN6oR5QLAb9f7USizz0KFKnxCta
KMRT/pRc53MeTvvsogTw/DzwqQFA1MMj8uykySqJnhEHhKQqe/UVGq/yDQK+
Zuj0PNYwiQiXBoS7jB4Q4Wog2YbsCFPtBRFOqvuUNFbJWnIO62EOt7qjQwWi
nGgbyorIi8Ab+wHJRqW9wKxgZqrj0YpwjrpPGNpGHjHJezbXeuOJcwXP2TK8
vkDDDUFsl7wVEdtmC4E28inhSM56Pxf7XyvRphkmz9pTtJWkXwTuUAkkPQKs
jh20jUIkdflVx0yFGNpSIVdynTiWaPcGnYho9w5/S/VYdrQXBbR9hZS4hd3B
Gd0Yol35IbSN0VWEv9C6mWiPjEh7cSAS+gT0FfV9vFeUeAORkKqnc0uc0US4
j20gapR8DhhIefhb0loejYAw6sSlp3THikDVvRyqnsatUpqJcxXoxBcA51Lb
9NQrmrLjbJleH7c22hzNSAdf9D6Cm7nkXAJUHZX5Mn8O9nPzncwZ3kgiWw2c
4wVgeEVAy80RyS4HhtffIY1JXP/RgR9zJR+r/14AtlEA5DyK52z133IgjVpu
gE/gfG44ER4ACH9WK2LuOx5h+iRWxANF+KdpJvS91nf32Q+E3CZqHCvAgBzo
lsw4bjlCR6X8C0cJ87mn5yafUXSSKhqPobrJqGSHxgLp+NZIUSWpi9/wt5Hb
u2RlhbYSWORgO7TMJexYbskylEKrA637SXWfa4Umb5K2NiEZTEzKLBEKdfXj
6nWyqB/oQvsrdzQFHCFaM7fe0TktXLfTkTZzeTIrvuc0lwM/8WOTJftA7o6F
Y9QC9EUqP9GQJZavTFCM8j2cMRYBd1gNBnRD0GmJzEXFKIcDU3xiEAjzWXmf
0mxNXLLJvJ8xe4aoF6mXNoFlKIrhGiDFke4ua+Y8gzSoK2Z7htpPzVH0clQM
SmdeHfSnS6ad9GtszY2IGMsaMMibuZVHE2fVZBL64nl2FM8AwaW04KSgZBBK
XNREIheIyxEMfbHWDsay8TGOBhrJraTIwrVP2PE8DeLRBfDj8X6KPHru4pO/
iBSHZQRrgY2PdS++G7gFFo18UQ+a5GN6inoU/VB0+o2fqd9UKI0Rua8D43+c
uznqHT1OC0M9Wm36T4JKVGSnHsTcUs8kh3qGcfZL17LT6xeb8xOhdUC2nAuJ
8zmxWKvCe8UGoJQ2B2f2a3S0lyNGAMUrzr05gywEpnItMMipbg0M4gyS9hr1
AtYmdgrotwy03ciItDcCL5zuXmKwX+elQwt6J8GmfRLotowfqVFpWyN1hkMD
tdyyiA7hiKaAs38A6iRIdQlINXKJwsCp/bOsrgMKmcUtuGu4RqNDZfqjf7vR
TgDCRYCwQ9KWOWwC2pjjlnS1w9bo6KneY/9w5gU8c7TiQswtW5vnOGjGXqGD
DlTrwyL2PiTijAYgWuwjzpuBrXU6JF3F2VoBcW4BbXgisGLZdpKnXpioNjSr
KfnVjR6ckRVvBYNvoXtoV3LrD7rmpD5wBtxYMRzHE7P8YSvYrVjilm5vbjWR
S8RabYtQO4Xfj0jnelDb5dyKs8LRQyniMh700PcictkGbGilQ2flnBPR5RjE
BMDlHZ6LZYnbgcOsdpeJvaxanOhMBK16nqdjteB2MFXWuukUc84RIzqTgJzf
jkjnBv8Q2LWO+hRx41iIyQD8uxHBbwSl2chNqwIwXv9AHNpsDqptvgM4FAB7
2QFsfLO7Huhynv9DTKYCob7FM7Ga5ibQwFvdy6Qc3Mb6wuvTAJlvBUf4/JNa
EJmdwHW3OxSSAhr9b6IxHdB4EywPHDQsj93hOKyRAJ1LV1elxxlCPcfTsDzk
ZtC0O90iiYEZ9J/EpAMw+SbPxGqZXcBZd4ddXu4qVymXXykoHeFpQ1d3FVcC
Bm9EZLAbNO1ew0B+VXEsMVBFoLL7/+iCrvqsGFsRXdnBW6U4QPCSjkwKeSMZ
djoM/y/0YxaAfw3A5wO72Ov75S1mrXdAf4mHVP+vhDEbYHyDx7BEvw/03kFC
M+GZemo0OnNMBevX8+vZoVkGuJ86/Yw67SIl3vUWTke9RXVXqIZzgYRejQi5
HzgdSSgl5fOuqPPg2sRasUac9vb60wHqVQD1FR7VauIDIK27AuFK0Z6W+8Nx
iUuq8//pPM8L4P1duJd5eEu4B4CV7TTCTQsTuEgQvAzc7x0d/dVAVC8Fn4n5
n5ejvjkI+mYHwZuWParOfCV4WfL2DPhOAP9VfrhZ8IeAb20Hyc8BydfwCwKR
+6uurwB41LaHgWltNQ0cJF9mICfIf9ow+DX9WAjUd5ZnYGn+MGizLSD/eUEC
2jPgFwH4L0eEv9X3rU2B5vys5xOo3+Py37/Rj8W25NXa6kxE0NtAx23AWS8A
WdcMlgLZfYlnQDXebzGwsr7elp3KehGQnYZfBuC/6Ib3VX87MLo1dv5VzxeD
ntejerkNr4p+OiL8HaDpVuH8l4C21wxWANl9ITsGlumtBG1fBvKv4VcC+M8D
+DwgwDQwvWUg/+VAff9BP1bZ8Er/L0aEvwvkf0nQ8yb3ogL0vIa/BqjvhYjw
R4DpLQTJ7wW6Xy9V1wD4z4KB54C3eq8TDLxKkHwNvxbAP8/DW9K7G/TefGC4
fYD0NPw6IL3PRIS/B3jfXJD8vqD19R7LegD/6ezgreTPxq1fBVpfM9gAGHwq
IoOjIP8zgfVWg/xr+I2g/M8B+FygvntB73WA0dcfqO839OM6AP9sRPj7QO9N
w/kfALpfM9gEGHwiOwaW900FAqwB3a/33OlaDfZuxccjwh8H+Z8MrLcO5F/D
bwHqe4aHt9R3P8j/BJz/gUCAmsFWwODp7BhYHTge5H8QMAB9AOf6AN7f3Xgq
IvwDoP3GAvcdArpfw28H6nuCnz0W/IPA/saA0TcUJF/D3wDgTwF4pL6HwLpj
FEj+MKC+39GPGwPx+wuvkxHhHwbJb8TqqwfdrxnsAOo7EZHBI6D9RoDpNxx0
vz6WeROAfzwi/KOg/epB/keA/Gv4nbb41cLrozy8pb5HgfcNxfkfCQSoGewC
AnwsIoPH/P2tIWDmNYKepz+FFfwl2RDooxFBPwKyXgdmXjPoeQ2/x4ZXRX8k
O3jL8Wpw1keBrGsG/p+WDcnuYcAgB8jucdB3/YHsRgPZ6c8S9gH4hyLCnwCm
VwVmXgvoeQ2/34ZXqn8wO3jL9PoCz20BPa8rcRCo734wcRD8SdB0vUHyWwP1
pTPgDwH44zy8pb5TwPHKwcAbD6Snf7kFwN8XEf4J0HulIPnjQesr+Cvo8WGg
v3uz42BVoBhUYCLo/zCHWwGHYxE5POkbXyFu/YmB+rotcP1p5m0A/CgATwEJ
PgUaMA9Mvcmg/8Mc7gBCuDs7DpYL5gATnsLpUHO4E3A4EpHD08AHE7gcUzgz
0J91pwGNu3ga1nmjz4ByxMA4nMY5guZwF3FIhyWR5jlYeiQOqbAphr24nauC
hj4C1HhnROiPq/vEeXUBw5Sf8XZOfAl6fDeAvCOraD3IJUL+RRaZUYnTwTW8
hrwngPR3NG4DHyykwKH1p43eb9eQNV6R18qjhoqaFJZCn8b1vT7H4xgQ2mEw
+Zx9P0bhH5VnaMSJw1HRqGDCHHqmXnO4F3C4JSKHJ03PUepPy3NrU5JDTKZ9
GqczjXxfIHF/3XUoIvKpoAImA/JjhBW64n4F2rhW12f8HAfCO8hzsD5cOxlU
QEavKpAPKtDGtbrmcD/gcIDnYIn/cVCBIuJwWlSqZlDok7laaA7B310J9jz2
R+RAa+BEuBYyFyVBOaT4FIGJnBjpbxObP7NjiXFvRBqP2alQ5SgHTTmBMwbN
4WHAYQ/gkATG8KhtDKocvQJJ+OUYzxmDPinuEZuDksRungPYEe9RjkpQjnFc
OTSNR4Eyd0Wk8RAoRxUoRyunTM3hMcDh5ogcHgA+XQ06dCznEvTnnPQfgbL3
UHaCs4qSwCWO43IMAE3awhmFpvE4UOYOMCWToDvuA0ZRBwxzDFcOzeEE4HBj
RA7HgGkPAuVAu6qKgz6X9STgcENEDkfB2BwCajGKcwnN4RSQ5XbAIQFc4h5Q
i3rQnk2cS+hTkZ8AHLbxHMAnVT1k2QA6tJErh6bxJKBxfUQadwXl8F1iJDDM
Rk6WmsNTQBJbInK4E5Sj2V/FjOS8oZAePw2QN/PIljfcjoswGhShgfMGTeMZ
QGMTT8PqiduAVbeAvmzgiqA50N8AtfdZrovI4bBt1aoI40Bf1nNi1F8p+AQQ
48aIHA7hckwANjmMswdN41lA41pAIw7s4RDQ4yS7HJKH+Ryhpz3ob4Q8F3Dw
93DWg8mJeuKAXQ5l1VNAOYZw5dAcPgVkuTYih324HNOAUw7mlKlpfBrQWBOR
xl5Qjg7QoQM5o6DLBuk/qmzv7lzDc7CMYjeYnDOATQ7kXEJzeB7IcjXPweqO
XWByzvJtEn2iGEb+LEBeFRF5J6jAXNCUNZwY9Ze7XrAbQi3jVkbksAOL8Spg
kzWcN2gaLwIxLgc0kDfsAPPyatCX/TlvoGu46T8Kb3NYxnOwGuIGYNULQTmq
uXJoDl+wOShJLI3IYRsuxyJgk+hkizCN00CZSyLSuN5WpirHUtCXVdwRcP09
yS8CDot5DnRUT3vDFmDVK4BH9uW8QXP4ks1BdccifmRZ3bEJl2MVsEl07lGY
xhmgzAURaVwHjOIaUA50+pXioL9q+2XAoTMih2tBOdb5NlkJPgYLI58FyFcD
5BgQ47XAoDeAvqzgBhVdDEx8BYhxfkQO60EFNgKPrOAqoDl8FXCYF5HDWjAs
NwOPLOeUqDm8BDhcFZHDGuDTW0FTlnLGoL+r/jWghzk8B0uJq0EttgGDLOXm
lebwMuAwOyKHldgYbgBNWcKVQ9N4BdCYFZHGClCOm0A5ijhZVtLjV4lDOiyJ
mRE5LANjcxcwyELOIjSHrwNZzlAcUmEO8mYkuQxXYTdozALOHOhScOIbAL0D
fGyCmmIJmJb7fGtEp8OHkV8LkP3dmXYwIxHyImDKB4E15nEa1BxeBxqcFpHD
AlyEQ6AIuZwr6MuBvAFoTOVpWDLsBK5wK3DHHM4VNIdvBq3gr96mROQwHzj0
HaAdU1w5NIdzQIxtETnMA9MyDdoxwcmyih6/CThMjshhLqjFEWCNCc4SNIdv
2a2hlm6TyBLCHMKWMBer8R5QhRhnCf3o8beBGie40ecAP75XQafCyZc3k3iF
WE2I3wGI492Is0CqjyvEZLj15K3bD5CuFyi+a8OpEo9zw83A6X1AISZMo5kG
D4O9DfREfz8kmQmmNpsBTPVh31Tpjfx/4bKdB0BjCSj8oYYP1AHm10OBWGVM
8kbfQlVb6EtfvWMDKXW2EFDmwFKbTce5O85hUWXSInyZgFqC/nMglNEO6GlA
JceywaXLlonvA9xRPXGNWuRfXusxn+7OBldf4PIHALfZgTsZp/rObKD1ZVf/
AsipyQE9CaT6tmxw9aWA/xLgNjpwJ4DZcwvAVW4bSxs0fWnqHwI0urhSIowm
/28CGDAHVGPK9w/eHrUoXWFC/AiUswGjjQPp3OujkaP7jcniTqfH7wLc4Rh3
LFbQzVlD6z8bcQFA12PoFjBEdmSNq//eyl8Rrqm3KuwwG9dIaDQwwu1Z49JX
e8V7wv9/H3coxm3Gqd6SNTR9u1T8GEAP7jlp/M5pApPmuqzB6cuF4icBuL+a
H9QT3JxbJ6+v2MMhN2QNTt9uEz8lcEtkdZT0MLjcZARO+pqsofXfV/0bAF2L
oRtAS6+ynUqNeNYh9d8yvkiQaRFavtRgyHqQ5eXZmDJ9g0H8DEhrgA1pDmsP
Aza5OBtIOnle/C2A7G9DGiUPAYldkA0knbMtfh5A+svuagw5CEyd+dlA3k6Q
fwfkU4UhBwJ7nJMNJJ0H6vHtCdnXhjSfVdWCxM7MBpJORhS/sCFVLfvY+1Tq
5TW4OduzgXyQIP8eyKcSQA4AWZ2aDR6dzyR+CfAy/rgz7fGAYTPZuVxB5vNR
evwPNqgSbOjveZuWlF/gQHmdkLXp0Rkqnj56Sqg8wPUnTF8wYVqzBqVTIcQ/
AdAyAFoJPG9M1qCfpMf/DEBLAWgvnOGmrHHpc1XxgV1ZJaeSANc0qLwIXo8O
HZE1KH1yp68tZIMWB6DyOQVXBsyvPmtQ+mBIX5bGBi0CoKVgrgzOGvQlevxr
UNYCAFoM0luXNSgdZdYX47BB8w1oY/CZcCHWUv8ANxXGNZZkMqiP5OlrT9hw
eQZOBMcxC4ADVmXjgHS8SF/twV5x5wK8PJDTymzw6PiDvsCBLZyUOXK9UxhM
kYvTWZ4NJO0M6+/025BJM1SmqudUV+YA3yvJBo922PRX6O0FScLGU0hJMFQK
s8Gj1bv+1rItmRjAi5uU0pe0TEpzs4H8GUH+Tt2nwpDyZuDiJpMz1a/qLZPZ
wNBqR38dNi8tghWIhDA9Z75aQ+vvbN7/H+n9f28rQ+3+0F8ni5v3RUch9NXc
/mBvTW7iXAD8KvQ4ZrYzl1zo9u9+e/mJy09cfuLyE3+ST4gr/hdX4ucM\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"f113eac7-82de-4937-bb4e-ede331fc3880"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Q3", ":=", 
  RowBox[{"ReflectionTransform", "[", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Q", "[", 
        RowBox[{"vtet", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "-", 
       RowBox[{"vtet", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Q", "[", 
        RowBox[{"vtet", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}], "-", 
       RowBox[{"Q2", "[", 
        RowBox[{"vtet", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"Q", "[", 
     RowBox[{"vtet", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"gphtetQ3", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", 
       RowBox[{"0.2", ",", "Green"}], "]"}], ",", 
      RowBox[{"ConvexHullMesh", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Q3", "[", 
           RowBox[{"Q2", "[", 
            RowBox[{"Q", "[", 
             RowBox[{"vtet", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Boxed", "->", "False"}]}], "]"}]}], "\n", 
 RowBox[{"gphflgQ3", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
     RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"Q3", "[", 
           RowBox[{"Q2", "[", 
            RowBox[{"Q", "[", 
             RowBox[{"flg600", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"VertexColors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Blue", ",", "Green", ",", "Yellow"}], "}"}]}]}],
       "]"}], ",", 
     RowBox[{"Opacity", "[", 
      RowBox[{"1", ",", "Magenta"}], "]"}], ",", 
     RowBox[{"ConvexHullMesh", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Q3", "[", 
         RowBox[{"Q2", "[", 
          RowBox[{"Q", "[", 
           RowBox[{"flg", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{"gphQ3", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Orange", ",", 
     RowBox[{"InfinitePlane", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"Q3", "[", 
          RowBox[{"Q2", "[", 
           RowBox[{"Q", "[", 
            RowBox[{"flg", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.9045849736982193`*^9, 3.904585220194201*^9}, {
   3.904585255511114*^9, 3.9045853337674227`*^9}, {3.904586518075996*^9, 
   3.904586518728587*^9}, {3.90458661786607*^9, 3.904586630736183*^9}, {
   3.904662735969571*^9, 3.904662736148222*^9}, {3.90466302413759*^9, 
   3.904663033830585*^9}, {3.9046630870017147`*^9, 3.9046630913055477`*^9}, {
   3.904741120566801*^9, 3.9047411225846167`*^9}, {3.9047412553771276`*^9, 
   3.904741259334217*^9}, {3.9047412982310762`*^9, 3.904741300773788*^9}, {
   3.904741686556479*^9, 3.9047416981543837`*^9}, 3.904741735325078*^9, 
   3.904741838110504*^9, {3.9047422403156843`*^9, 3.904742240812476*^9}, {
   3.9047424086859283`*^9, 3.904742424917039*^9}, 3.904742594226173*^9, {
   3.904742736561103*^9, 3.904742789363329*^9}, {3.904742928269047*^9, 
   3.9047429530001593`*^9}, {3.904751227596706*^9, 3.904751234991025*^9}, {
   3.904751526542116*^9, 3.904751608009492*^9}, {3.90475166411176*^9, 
   3.904751706320953*^9}, {3.9047517756706038`*^9, 3.9047518016618147`*^9}, {
   3.904770836219287*^9, 3.904770841088682*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"5f5fdb9d-d59d-44bf-b5a6-4dda29759c6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphtetQ2", ",", 
   "gphtetQ3"}], "]"}]], "Input",
 CellChangeTimes->{{3.904751270672969*^9, 3.904751319905691*^9}, {
  3.904751352861665*^9, 3.904751394395887*^9}, {3.9047514297856197`*^9, 
  3.904751505658649*^9}, {3.904751567932004*^9, 3.9047515693529873`*^9}, {
  3.904751726372802*^9, 3.904751731507468*^9}, {3.904751812309333*^9, 
  3.904751818896058*^9}, {3.90477185889574*^9, 
  3.904771869770678*^9}},ExpressionUUID->"3249a698-b5e5-42bf-9e2c-\
e186ab173fae"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1121723022632641598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1254483904289560068}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}},
  Boxed->False,
  ImageSize->{391.0497707581765, 198.40251763220095`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.3104483947322536`, 0.1809080575125436, -2.4655831947038798`},
  
  ViewVertical->{-0.21273316780600024`, 
   0.9310236740777877, -0.2965459789339948}]], "Output",
 CellChangeTimes->{3.9047518560503693`*^9, 3.904771010081504*^9, 
  3.904771569083941*^9},
 CellLabel->"Out[1137]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnXmYVdWZ7rdVdWouaqbmiaqiKIqqoijmsUAZFJBBRVBRcUBRcUBwQDQl
CCISg0wKgiAOcUKDRk0nMRiHJB1CYncSjXYau9tr307bsbuTm3vTndupu9f6
9tp7r6rf3lL4x336eeR5zl6bM9R+3+97v/db65x99pm7bPXVV65ctnrF5ctq
Z65aduPVKy6/uXbGDavcu5JPc5zkAY5z2tZaJ8Xd73GcmE2+43x575f3fnnv
l/f+f7t3qdokdav95KPutse7OUl6m6we6epxQq94JrR/od5NVk8wL3Yyghf6
//T+U6H9C4IX+kfM6vFR2C98MrS/RF5oQc2JeuETof3F8sLu8Atzo174eO8X
FkY981Bo/3w4RIHe6w1GP7M4KlCPhfYXwd8sPNUXFvlgHu/vM4/Ic9SdiaPB
E3vUPV3q3n3yV46e593p3pwUvU2WJ3h/L6XHPJCIonFQ9l+Uv9gVOpqTprfJ
R72D6Gfc5z/P6fZuTkJt0/Xjcnjz7ORe93UZSO59eyqdnuUF+ubK392meIi7
g7/c3QvkCx7tMMgsAdllAKp/t6pNunp1mne01rzKniU149TNDYXapvZsaj+v
5+Upq/zbpinn9ThTXDCC43n3JSboR9XfUPcnDDc/F+5D3kuE008a9c19ptqm
KGaHnRH+TTLS7QfRTsYu2X8ekpETJMN/zdVqk9ZtghLkPRFFu0AxTVJUk9We
+5QP3IdtG0pXnDQ3A8A7qN5fnuM+rTPDjazil3x499nORc5RfXMSapvi09Ti
tZLZ5TP9WohpPlA73w8B6SxNM0oOp9BpVFvJUrKfpaM+q4SvQnW0n1TIsTSV
VKCSI4Q2OldY6XvPKTKyjiF3r3B4zjGZCdKYB1xnqs3nyNXmOlJvU3TyTHK6
lNrUXqqfK3X7JEfnTOlQk9W6LI1hFyhUg/mKYHwWJFkgXLrDXMb0W5IzPCGq
B7q8lGkiSSpbSR4lRcNLmi6xTmUfje7LdOree3V0kLpqvU0Ok3OS7NrTWG61
mB0FZlaWmvqtyAVeltR97lPed0Y67z880rPiTCtLJlOKYmeaOKOiuafRjUBf
ikPsQgs43SBYn4FsFalteb+ldnGIhPvcT51S5y23TSe96Kx3D/zpz0otEjpn
UoQpPb9LE0J7ihypyr5EOk7eMZZb1Lr7UOvVA9L7LcQbPCGqO710OQlNM/HW
uYtDh7NF6jJ09amS5tn/Z090uU9qdDY6a5zxPj8noaqrJ4TkqCGCreCiaLq5
QrdH5oGqpXfrFtStmZ7nqzNSmGs9pqGcOhmaafKn95f6vm8zVFlsznVOrLnU
ed2doRx3+b3njHamfRGjXBRNUoHvPlmRbjapm6JTpwTqZHoKdckdmz/LOfaY
3Ewfd0kd617sHDlzo/OJU+PSWetSVcSc5BPOpZqaZjbr5K3ybGGz//OUJ5N8
yVtCb1O8XDryWF6rm84pL6e4fLYrplPW+0zvN6mTycqnzmx3Li+pU6wVlYec
77u519vkY84s5zOnXmfM0PvMTYBPb95JmuUM4fZVx5erL7NEFNW0N1Sqkw86
Nzt3O9/TNydJb5PdR571U52htyleXLzVRs0HaSoGveibRLdOqVTU33KudZxs
T7kq0S5dTTxD6CsUKrO96R92pNU750cZ6WThe1cUX0+ZHzkVjmKpmSaAb34U
X12wSaaS8/6lx2n/gSacorb32Wl+X63hcoI0q4NrhplBmk+48RCGAU9lQZrn
xSfvs6OE+Q2fo+K+zBuEqvvAh71Sm+y9WO4T0okwaX1rnfK4c6/pNi7vUI4H
CHVlyX6Ks4IUK8LhFCtvMg7sLP8iBtUqwbjki8q+Q2Lj3rccYmPsQIrAF4Qb
E2UAm8Lm5mkhTwJidBAOCGnBCsjKzw1IcjggTpJfFI0SjflftCimglLSraam
36vQM9meXg6wPlQZnkKcfJBHDsgjFA3fAFefvL9XCf2p/a6Mc2Kz7xjT87O/
qX1XH75e9rXjFQTZP+K6W5ivagB+9lOgn62LcrxiYdfxRaW+LCq5qu6PEsW7
oacVBin1e9oAoagom7Q6CehpG4AiTbEyZX/QF5XzTZDe7Bie4eZVFDQvP5W5
kMoENK8tJ2/qKUK1sN/S3RhTqq15vzb8eudQm1QxzEvyghz685JUaFgPnqJr
/0mI5qpNhpBy5xKakMqZsyvIleGkyfd4Pbq1/aIQnz6NaCDMNfKDdPlzjQT4
7p5T8d3fh/g4Kerxj1wfutv5kUvndpWiaXp2sdJRUVc3PX/QGVvgsl6hb06K
2m7T1FMUdSNd9dS7ob2UwFSjIDpzFs2Dnz+j/FRI5Tk+aUVGkXKy9dbNz4OO
YqVuCv1KVYxTnFTNxn10a1B9G8wMa4WjOSg2d0KTKIMmUQjTxFRoEk+Do3xs
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"b5d9f206-31c1-404c-ae93-27221e242f1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphtetQ2", ",", 
   "gphtetQ3", ",", "gphflggsd"}], "]"}]], "Input",
 CellChangeTimes->{{3.904751270672969*^9, 3.904751319905691*^9}, {
  3.904751352861665*^9, 3.904751394395887*^9}, {3.9047514297856197`*^9, 
  3.904751505658649*^9}, {3.904751567932004*^9, 3.9047515693529873`*^9}, {
  3.904751726372802*^9, 3.904751731507468*^9}, {3.904751812309333*^9, 
  3.904751818896058*^9}, {3.904751878526826*^9, 3.904751884772642*^9}},
 CellLabel->
  "In[1138]:=",ExpressionUUID->"640e0ed5-b42e-43f1-99fd-3827f33dc883"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1121723022632641598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1254483904289560068}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{522.7079347700385, 261.898962071649},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.2035230573585416`, 0.5337969310529225, -2.511881162015384},
  ViewVertical->{-0.10739927107925028`, 
   0.9587304602640444, -0.26325140290896704`}]], "Output",
 CellChangeTimes->{3.904751920908325*^9, 3.9047716631133623`*^9},
 CellLabel->"Out[1138]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnXmcVNW177dV1fM80fNAMzRzM4sg0CgyiAhKHHBCQAUFJ0RxQltRFFFx
VpxwwnnEOGNQEXE2idFEk6j35nqT3Az3vtybl3yU7npn7X32dOq3d1XFfN57
f8jncw67a+ha67vX+q119jmneu7i1ctPPHXx6pOXLm6buWrxGctPXnpW24zT
VwUPxfdiLNGHsVhxG0sE4yRj6XYNjH3/1PdPff/U9099/9T3T33/1P/7pz6h
XaI7GHfB53/KH4zTC3YEW5IezOP7OP3clRTvYhPhuz8S7+4y312s363+TYDv
/lC/OynfXSbe3W2+ezx89wfg3ZXi3V3mu8fCd78P3l0FLMfvfk+8e4f57hpg
+Rj47nfBZ9cCy0f73t1tvruO9thU/vJG4Nko+PJ3wG9voD12hb+82f382+DX
NQJQI/8vvbuJ9pgrenkB7RPJ7jAuM38jfw+LJ7vEa/jrEnwvHusOX1fq/rVv
8Pd08/fsYMbvKQS/pxxMMKbykrA2eDPrDjcW61bm5e1hYzu+YSfPl5v8mf5n
MfEa9dHyf6bHrDrjCXrab0rcNIXFaB//K/v0Pj4SzyomwWOL5rHEN9MWzeNz
sEMYEwtRdafJU2zfw2oGnAbl+Q2K/41dv+avbOc9tLEY3+fQMyowuoWxrN6d
Q1uUGZFA4N4lxIf/jW05j2yhjXGrWIIeM6eRvx4ZltCG7WEjByblhNCuyW3Y
LVkbVsT3wWMf3PUNe/MW8QqXVbnYqi7+ebRDUoBV7Rr+oDPScqJBT0azCm5s
rjb2zVuSbNvGJLt8+R521anI5HyPybnCBksmakHaYjW4zO8BCM2aKOs3b6GJ
2baRXvz89d+wl2+mjZWk2rxD2lxIOx6a46BVF6oIcJpRn6EZZcIMwmmawR0t
CZ1PpqaxVTBxmJ6ljMw0TBtoHydTkaUV2lKeyqalFcDSKhCmuFafkrWlLaH+
BFATe9gr14sA3baRDI6RtVUeY/sIY60uphwYi+d+cegqyyan+mt746a9LE7G
1niMbQDGloBGdW9o7JF+Y0HcDnJZyrHSNOy4Q+U9MFzmPmsRH01EVY9cCAzf
Bxo+X4dEjhkStPGSzKNiWDbG1hllyDCU2LB+AkzwWA6ZyK3eFxo2UxuWYawO
A0oQJyuRkQ0eJV0JDZrCH8wxp5i2HUzOMrJpZDY2NXlsOh3aNM4fdjhHxmeo
mH095qyC5gzzmwOyYGKGtvTzFJGzoS39dfx4AnuKV4kHeGrGufBTG/WnZhi1
U9MpbIdHtC6ARlTyB7OM1P29yjnYY8RF0IiCrGNhdjYi4zPoEmhQVrbMzcaW
oR51vixqy9/SR8h82V7rpCAbYi7dGOER3PXRz/9z+s+PRMYh2WjYSI9obIja
8jX/OctAPcwpGQkzecmqsR5jro4a86usg+ToDMVrb48Zm6JmfJy1GYsyNGMf
j4beEDXjvfRhsjSdck3yyOfN0Q90Lkc44/KEdJ8/2aMRt0U/X6xbZBmLy7OR
CZ85d0TNyX7t4rRsbJnqseXuqC0ZrFOsyubDp3n08t7oh29JHxdnZyNQ0z1i
eX/0w7NfgTgnc3Wa5ZGFB6OW+FcYkCXnZygLczxmPBI1I/tlgu4MzZjrMePx
qBkZrAtc5u3s5nk+7anop2VwgH9lOi06xKOF26IfmP1x+gZv97bAk+3PRT/8
Hzru3pRN/vvMeTFqTvZH1jdmY8thHlteidqiD5adH35LNlp0hOfDfxT98OwP
iG/NxpajPLr4WtSWKVnbckeGMrDIk5g7o2b8Q4e/92ZoyWKPJW9FLcn+yHdr
hmYs9ZjxTtQMfdDr/NxH0inViZ4PfD/6gdkf7z6a7vOXeZTyo+jnV2b9+U9m
ow7LPAn606gtaY54cTT+MBtzTvaY80nUnKyi8YUsDzlXeCz5hWHJmtCS4Ada
6hPLkmrlL7K8vlpPpmfJ5pVsVO1Uj52/NOxcDexEi6jZV+btmTeEqzwS/GvD
2LOEsWiputvkuYjvszykeS1DXTrbIxNfGcauAsaikwA/CGeAZZM9b2Vo7BqP
sb8xjD0TGIuu+TjQbyxIsHfTyd55HhP/3TDx9PCjTRPRuappfJa5ZZ5k+jCd
WRd4zPp91Kw616U5wo4MM+ajbCTxAk+1+KNh32kCW7eJDZ0dHcH3WebMx9lY
vNYjSf8ZtbgRzGz/MAJYxsH3WTb2Xeyx7y+GfaeGZphE+ZU8zVnb96tsJP0S
j31/TbVvR4p9NXwuu8WzDEbkV9kYtM5j0N8Ng1YCYGh+C9LbF4m/f8lQBjd4
Csw3qZZ2p1qaMDW7i78oCzu/ztDOjR7R6UljZ6iF8godfslQjPbO6PuDd6Xg
Go8t/Dfulcag4jQGJUuG9UvWLzyAtuCJYB9Ljtm28U/plHlTOsMSaQxLqIvP
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
/X/yFNvr/wAtWIsw\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"5b71bec6-4b82-4362-823b-93eaf6d4542f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"T", ":=", 
  RowBox[{"Composition", "[", 
   RowBox[{
   "R1", ",", "R2", ",", "R3", ",", "R2", ",", "R1", ",", "R2", ",", "R3", 
    ",", "R2", ",", "R3", ",", "R1", ",", "R2", ",", "R3", ",", "R2", ",", 
    "R1", ",", "R2", ",", "R1", ",", "R0"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.904997104103603*^9, 3.9049971287891703`*^9}, {
  3.904997158966357*^9, 3.904997189567123*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ddbc3e1f-1525-45ff-808c-d04cf0ee8544"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphtetQ2", ",", 
   "gphtetQ3", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"T", "[", "v0", "]"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904751270672969*^9, 3.904751319905691*^9}, {
  3.904751352861665*^9, 3.904751394395887*^9}, {3.9047514297856197`*^9, 
  3.904751505658649*^9}, {3.904751567932004*^9, 3.9047515693529873`*^9}, {
  3.904751726372802*^9, 3.904751731507468*^9}, {3.904751812309333*^9, 
  3.904751818896058*^9}, {3.90477185889574*^9, 3.904771862591053*^9}, {
  3.904997200390658*^9, 3.904997222984042*^9}, {3.904997306790851*^9, 
  3.90499733962077*^9}},
 CellLabel->
  "In[1338]:=",ExpressionUUID->"05ab2d47-ebaf-4b8e-9181-41202baa29ac"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1121723022632641598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1254483904289560068}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 0, 0], PointSize[0.03], 
    Point3DBox[{{-0.3875415622553831, -0.0198184282548904, 
     0.041356258987391536`}}]}},
  Background->GrayLevel[1],
  Boxed->False,
  ImageSize->{409.9037809713014, 383.2024767530214},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.666091532484555, 1.85467794477721, -0.949802959340063},
  ViewVertical->{-0.18280888534699719`, 0.9765221770192163, 
   0.11395327651208205`}]], "Output",
 CellChangeTimes->{{3.90499728145995*^9, 3.904997333788363*^9}, 
   3.904997392703601*^9},
 CellLabel->"Out[1338]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
e0f3/n/v9d71P3T3hdQ=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"026bdf22-3a6a-4cc9-8c96-db47aecddf6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphtetQ2", ",", 
   "gphtetQ3", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"Q3", "[", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "]"}], "}"}], "]"}]}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904751270672969*^9, 3.904751319905691*^9}, {
  3.904751352861665*^9, 3.904751394395887*^9}, {3.9047514297856197`*^9, 
  3.904751505658649*^9}, {3.904751567932004*^9, 3.9047515693529873`*^9}, {
  3.904751726372802*^9, 3.904751731507468*^9}, {3.904751812309333*^9, 
  3.904751818896058*^9}, {3.90477185889574*^9, 3.904771862591053*^9}, {
  3.904997200390658*^9, 3.904997222984042*^9}},
 CellLabel->
  "In[1326]:=",ExpressionUUID->"f22343db-d657-49cd-a16c-faeaaff1b87d"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1121723022632641598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1254483904289560068}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[1, 0, 0], PointSize[0.03], 
    Point3DBox[{{-0.37818339475015217`, 0.039252331381632075`, 
     0.04915465990264948}}]}},
  Background->GrayLevel[1],
  Boxed->False,
  ImageSize->{467.6512495527108, 305.30094970998505`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.3182269171464496`, 0.8509022191869668, -2.3133934758273105`},
  
  ViewVertical->{-0.14472808244805718`, 
   0.9733401350235881, -0.1779403374818984}]], "Output",
 CellChangeTimes->{3.9047719158307467`*^9, 3.904997106339369*^9},
 CellLabel->"Out[1326]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"a5fa8e8f-7da4-4978-bfa7-bb0d2030acd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphtetQ2", ",", 
   "gphtetQ3", ",", "gphflggsd", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"Q3", "[", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "]"}], "}"}], "]"}]}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904751270672969*^9, 3.904751319905691*^9}, {
   3.904751352861665*^9, 3.904751394395887*^9}, {3.9047514297856197`*^9, 
   3.904751505658649*^9}, {3.904751567932004*^9, 3.9047515693529873`*^9}, {
   3.904751726372802*^9, 3.904751731507468*^9}, {3.904751812309333*^9, 
   3.904751818896058*^9}, {3.904751878526826*^9, 3.904751884772642*^9}, 
   3.9047719496352663`*^9, {3.9061261526481237`*^9, 3.906126153609232*^9}, {
   3.906126216862195*^9, 
   3.906126217244207*^9}},ExpressionUUID->"1d804386-a505-4a6d-89cc-\
9fd743b6a772"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1121723022632641598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1254483904289560068}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}, 
   {RGBColor[1, 0, 0], PointSize[0.03], 
    Point3DBox[{{-0.37818339475015217`, 0.039252331381632075`, 
     0.04915465990264948}}]}},
  Boxed->False,
  ImageSize->{359.80407981993085`, 152.98962974518284`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.974445985258706, 0.4009475665964824, -2.7186033362990165`},
  ViewVertical->{-0.12982095676472805`, 
   0.9543884904477405, -0.2688663766363764}]], "Output",
 CellChangeTimes->{3.904771995171421*^9},
 CellLabel->
  "Out[1145]=",ExpressionUUID->"53f3ef13-b3f2-4333-80a2-e0aa97e9a743"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphflg600", ",", "gphtetQ", ",", "gphtetQ2", ",", 
   "gphtetQ3", ",", "gphflggsd", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Magenta", ",", 
      RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"Q3", "[", 
         RowBox[{"vtet", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "]"}], "}"}], "]"}]}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904751270672969*^9, 3.904751319905691*^9}, {
   3.904751352861665*^9, 3.904751394395887*^9}, {3.9047514297856197`*^9, 
   3.904751505658649*^9}, {3.904751567932004*^9, 3.9047515693529873`*^9}, {
   3.904751726372802*^9, 3.904751731507468*^9}, {3.904751812309333*^9, 
   3.904751818896058*^9}, {3.904751878526826*^9, 3.904751884772642*^9}, 
   3.9047719496352663`*^9, {3.9061261526481237`*^9, 3.906126153609232*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"8d125d10-0e36-4819-88f8-d9dc4792f767"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.3], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {
         Polygon[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 4704790931950657127}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.10017008225846251`}, {0., 
        0., -0.22398711324166787`}, {-0.061908515491602666`, 
        0.19053481893946467`, -0.10017008225846251`}}, {{}, 
         TagBox[Polygon3DBox[{{1, 4, 2}, {3, 1, 2}, {4, 3, 2}, {3, 4, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TagBox[
      DynamicModuleBox[{Typeset`mesh = HoldComplete[
        BoundaryMeshRegion[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {
          Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
         Method -> {
          "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
           Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
           Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
           Automatic, "CheckIntersections" -> Automatic, 
           "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
           "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
           Automatic, "Hash" -> 2868091132615443023}, {PlotTheme -> None}]]}, 
       
       TagBox[
        GraphicsComplex3DBox[{{-0.20034016451692505`, 
         0., -0.10017008225846251`}, {-0.10017008225846252`, 
         0., -0.1620785977500652}, {-0.066780054838975, 
         0., -0.10805239850004346`}, {-0.06556217000213192, 
         0.04763370473486617, -0.10608181943964823`}}, {{}, 
          TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
           Annotation[#, "Geometry"]& ]}],
        MouseAppearanceTag["LinkHand"]],
       AllowKernelInitialization->False],
      "BoundaryMeshRegion"]}}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {
         Polygon[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 3129101583756325072}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{0., 0., 0.}, {-0.20034016451692505`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489636`, 0.10017008225846251`}, {-0.06190851549160265, 
        0.19053481893946467`, -0.10017008225846252`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 1, 2}, {1, 3, 2}, {3, 4, 2}, {4, 3, 1}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {
         Polygon[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1121723022632641598}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897499}, {-0.20034016451692507`, 
        0., -0.1001700822584625}, {-0.16207859775006517`, 
        0.11775699414489638`, 0.10017008225846251`}, {-0.06190851549160267, 
        0.19053481893946472`, -0.10017008225846254`}}, {{}, 
         TagBox[Polygon3DBox[{{4, 2, 1}, {3, 4, 1}, {2, 3, 1}, {3, 2, 4}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {RGBColor[0, 1, 0], Opacity[0.2], 
    TagBox[
     DynamicModuleBox[{Typeset`mesh = HoldComplete[
       BoundaryMeshRegion[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {
         Polygon[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}]}, 
        Method -> {
         "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
          Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
          Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
          Automatic, "CheckIntersections" -> Automatic, 
          "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
          "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
          Automatic, "Hash" -> 1254483904289560068}, {PlotTheme -> None}]]}, 
      TagBox[
       GraphicsComplex3DBox[{{-0.282884851839062, 
        0.20552787538957407`, -0.06678005483897502}, {-0.20034016451692505`, 
        0., -0.10017008225846254`}, {-0.16207859775006517`, 
        0.11775699414489642`, 0.10017008225846251`}, {-0.37818339475015217`, 
        0.0392523313816321, 0.04915465990264947}}, {{}, 
         TagBox[Polygon3DBox[{{3, 1, 4}, {2, 3, 4}, {1, 2, 4}, {2, 1, 3}}],
          Annotation[#, "Geometry"]& ]}],
       MouseAppearanceTag["LinkHand"]],
      AllowKernelInitialization->False],
     "BoundaryMeshRegion"]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]]}}, 
   {RGBColor[1, 0, 1], PointSize[0.03], 
    Point3DBox[{{-0.37818339475015217`, 0.039252331381632075`, 
     0.04915465990264948}}]}},
  Boxed->False,
  ImageSize->{378.12384108909885`, 165.25417587819788`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.275977250479964, 0.07665287046445803, -2.5028088006771956`},
  ViewVertical->{-0.16279482681601629`, 
   0.9337029586495674, -0.3188990896364986}]], "Output",
 CellChangeTimes->{3.906126232277197*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"7275d2ff-d23b-44b0-9a9d-c76d74476332"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Other figures", "Section",
 CellChangeTimes->{{3.903361772116263*^9, 3.9033617747051163`*^9}, {
  3.903362034802033*^9, 3.903362035157548*^9}, {3.9047442017769203`*^9, 
  3.90474420216603*^9}},ExpressionUUID->"97ed3a10-60d9-4b2d-aa28-\
68daed04c079"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphflggsd", ",", "gphflg600", ",", " ", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903289466762038*^9, 3.903289481174362*^9}, {
  3.9032910736258793`*^9, 3.903291091447505*^9}, {3.9033016171156673`*^9, 
  3.903301624190607*^9}},
 CellLabel->
  "In[1456]:=",ExpressionUUID->"1bc627fd-1675-4ce9-b3bc-71110b685afe"],

Cell[BoxData[
 Graphics3DBox[{
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}},
  Boxed->False,
  ImageSize->{379.5754654102781, 298.90327660485957`},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.4031401980902811`, 1.7668042011309666`, -2.5218248351876342`},
  
  ViewVertical->{0.09762268901350818, 0.9946281580504781, 
   0.03441856770531078}]], "Output",
 CellChangeTimes->{{3.903289473991682*^9, 3.90328948190486*^9}, 
   3.903290127694427*^9, 3.903290554743887*^9, 3.9032906198307753`*^9, {
   3.903291076047242*^9, 3.9032910927564287`*^9}, 3.903299976339682*^9, 
   3.903300011623564*^9, 3.903300165289497*^9, 3.903300322038344*^9, {
   3.903301618651209*^9, 3.903301644873363*^9}, 3.903304174663947*^9, 
   3.903304293257536*^9, 3.903304324032597*^9, 3.903304405637615*^9, 
   3.903305005964686*^9, 3.903305360277775*^9, 3.9033055664333353`*^9, 
   3.903360432652959*^9, {3.9033619043379374`*^9, 3.903361925873322*^9}, 
   3.903364227676243*^9, 3.903366047092042*^9, 3.9033664523032703`*^9},
 CellLabel->
  "Out[1456]=",ExpressionUUID->"ffa6ebda-e860-42c9-b84b-853c92825394"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphico", ",", "gphflggsd", ",", "gphflg600"}], "]"}]], "Input",
 CellChangeTimes->{{3.903289466762038*^9, 3.903289481174362*^9}, {
  3.90329056932561*^9, 3.9032905699090157`*^9}},
 CellLabel->
  "In[1457]:=",ExpressionUUID->"efafdd8c-d9e5-44c2-b423-496d6cc2f72d"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Opacity[0.5], 
    PolyhedronBox[{{0., 0., -0.22398711324166784`}, {0., 0., 
     0.22398711324166784`}, {-0.20034016451692505`, 
     0., -0.10017008225846251`}, {0.20034016451692505`, 0., 
     0.10017008225846251`}, {
     0.16207859775006517`, -0.11775699414489635`, -0.10017008225846251`}, {
     0.16207859775006517`, 
     0.11775699414489635`, -0.10017008225846251`}, {-0.16207859775006517`, \
-0.11775699414489635`, 0.10017008225846251`}, {-0.16207859775006517`, 
     0.11775699414489635`, 
     0.10017008225846251`}, {-0.06190851549160266, -0.19053481893946467`, \
-0.10017008225846251`}, {-0.06190851549160266, 
     0.19053481893946467`, -0.10017008225846251`}, {
     0.06190851549160266, -0.19053481893946467`, 0.10017008225846251`}, {
     0.06190851549160266, 0.19053481893946467`, 0.10017008225846251`}}, {{2, 
     12, 8}, {2, 8, 7}, {2, 7, 11}, {2, 11, 4}, {2, 4, 12}, {5, 9, 1}, {6, 5, 
     1}, {10, 6, 1}, {3, 10, 1}, {9, 3, 1}, {12, 10, 8}, {8, 3, 7}, {7, 9, 
     11}, {11, 5, 4}, {4, 6, 12}, {5, 11, 9}, {6, 4, 5}, {10, 12, 6}, {3, 8, 
     10}, {9, 7, 3}}]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}},
  Boxed->False]], "Output",
 CellChangeTimes->{
  3.903290570951619*^9, 3.903290622037744*^9, 3.903299977186849*^9, 
   3.9033000121087847`*^9, 3.90330016616259*^9, 3.903300322558922*^9, 
   3.903304175584824*^9, 3.903304294426816*^9, 3.903304324736462*^9, 
   3.903304406254924*^9, 3.903305360808608*^9, 3.9033055668876743`*^9, 
   3.903360433111704*^9, {3.903361904885145*^9, 3.903361926524293*^9}, 
   3.9033642282211733`*^9, 3.9033660475956297`*^9, 3.903366452838319*^9},
 CellLabel->
  "Out[1457]=",ExpressionUUID->"09dc735b-e4ec-4245-bb2f-7df834913870"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", ",", "gphR0", ",", "gphflg600"}], "]"}]], "Input",
 CellChangeTimes->{{3.9033022343322573`*^9, 3.9033022538091*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"10fbb1b6-27b4-4329-9de7-2f3f0c7657a4"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}],
     "InfinitePlane"]}, 
   {PointSize[0.04], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}},
  Boxed->False,
  ImageSize->{283.0133047549427, 321.40010692979524`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.09506941397996216, 1.2653589104119254`, -3.136850113468392},
  ViewVertical->{-0.07001262184599867, 
   0.9741235823733141, -0.21489876464612476`}]], "Output",
 CellChangeTimes->{
  3.903302254758902*^9, {3.903302288080551*^9, 3.9033023023100967`*^9}, 
   3.9033028476048737`*^9, 3.903304176407176*^9, 3.903304295084846*^9, 
   3.9033043254611053`*^9, 3.903304406971438*^9, 3.9033053613169107`*^9, 
   3.903305567502131*^9, 3.9033604338494864`*^9, {3.9033619056085052`*^9, 
   3.9033619272174273`*^9}, 3.9033642287356377`*^9, 3.90336604812431*^9, 
   3.9033664534435263`*^9, {3.904572149705901*^9, 3.9045721630870953`*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"b57509f0-743c-44af-b08d-634c4824a5e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", ",", "gphR1", ",", "gphflg600"}], "]"}]], "Input",
 CellChangeTimes->{{3.9033022343322573`*^9, 3.9033022538091*^9}, {
  3.903303989733777*^9, 3.9033039901612797`*^9}},
 CellLabel->
  "In[1459]:=",ExpressionUUID->"12aec030-7058-4074-939a-3039c4a864ff"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}},
  Boxed->False,
  ImageSize->{301.79033633527314`, 283.27538613412753`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.9704225429084854`, 1.3594650535408945`, -0.8822951234038117},
  
  ViewVertical->{-0.4151060797922036, 0.8372490368868072, 
   0.3559508291206281}]], "Output",
 CellChangeTimes->{
  3.9033039908575277`*^9, 3.903304177189947*^9, 3.903304295580971*^9, 
   3.903304326512986*^9, 3.903304407507819*^9, 3.903305361897567*^9, 
   3.903305568268581*^9, 3.90336043443486*^9, {3.903361906260674*^9, 
   3.9033619278693657`*^9}, 3.903364229267208*^9, 3.903366048868846*^9, 
   3.9033664541665792`*^9},
 CellLabel->
  "Out[1459]=",ExpressionUUID->"459209dd-804d-403d-b9da-9ffbb1554d6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", ",", "gphR2", ",", "gphflg600"}], "]"}]], "Input",
 CellChangeTimes->{{3.9033022343322573`*^9, 3.9033022538091*^9}, {
  3.903303989733777*^9, 3.9033040095034533`*^9}},
 CellLabel->
  "In[1460]:=",ExpressionUUID->"0c1b2ba8-10e6-412e-bb9d-404c9ad34d72"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}},
  Boxed->False,
  ImageSize->{316.4779067573851, 310.0797998021218},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.5955294321122355, 0.35780813260285016`, -3.3116941337827903`},
  
  ViewVertical->{0.2795591707180073, 
   0.8696533575354014, -0.4068780011193319}]], "Output",
 CellChangeTimes->{
  3.903304010242103*^9, 3.903304177980101*^9, 3.903304296127695*^9, 
   3.903304327096696*^9, 3.903304408264824*^9, 3.9033053625805817`*^9, 
   3.903305568816394*^9, 3.903360435094344*^9, {3.903361907203442*^9, 
   3.903361929075019*^9}, 3.9033642297583303`*^9, 3.9033660497029133`*^9, 
   3.903366454902775*^9},
 CellLabel->
  "Out[1460]=",ExpressionUUID->"fd38f539-04ec-4fda-85a0-37ead8134930"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gsd", ",", "gphR2", ",", "gphflg600", ",", "gphflggsd", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", "\[IndentingNewLine]", 
      RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
      RowBox[{"Point", "[", "lst", "]"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903302669329208*^9, 3.903302673362742*^9}, {
  3.903302745225997*^9, 3.9033027454457283`*^9}, {3.903302778104871*^9, 
  3.903302781574362*^9}, {3.903302935230699*^9, 3.90330294525492*^9}, {
  3.903303000441811*^9, 3.903303050853368*^9}},
 CellLabel->
  "In[1462]:=",ExpressionUUID->"aecc12e4-ba4f-4d4a-860d-045def14a9ae"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}, 
   {RGBColor[0, 1, 1], PointSize[0.05], 
    Point3DBox[{{-0.5257311121191336, 0., 0.10040570794311364`}, {
     0.32491969623290634`, 0., -0.42532540417602}, {-0.10040570794311365`, 
     0.30901699437494745`, 
     0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}, {0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}}]}},
  Boxed->False,
  ImageSize->{251.547637734887, 250.3830985145564},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.2044666410673253`, 2.433486957709703, 2.019257620318114},
  ViewVertical->{0.45342203402697123`, -0.12129965951312635`, 
   0.8830033135050194}]], "Output",
 CellChangeTimes->{{3.903303019709495*^9, 3.903303051587298*^9}, 
   3.9033031718644457`*^9, 3.903304179550953*^9, 3.90330429813371*^9, 
   3.903304328864542*^9, 3.903304409919155*^9, 3.903305364864963*^9, 
   3.903305570277136*^9, 3.903360436548829*^9, {3.903361909803097*^9, 
   3.903361931341921*^9}, 3.903364231061849*^9, 3.903366052166541*^9, 
   3.903366457124753*^9},
 CellLabel->
  "Out[1462]=",ExpressionUUID->"46e00e65-a1c7-4389-b0fd-562eb7c319da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gsd", ",", "gphR3", ",", "gphflg600", ",", "gphflggsd"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9033030437257643`*^9, 3.903303046855474*^9}, {
  3.9033030826785183`*^9, 3.9033030906780024`*^9}},
 CellLabel->
  "In[1463]:=",ExpressionUUID->"a75da07b-6a6b-42dd-91f6-46f31776732a"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}},
  Boxed->False,
  ImageSize->{365.14642530243333`, 362.45589708429475`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-3.1700083292161088`, -0.31970318324424163`, 
   1.1396653312810696`},
  ViewVertical->{-0.43636144210499295`, 0.6126425034014548, 
   0.6589824389693928}]], "Output",
 CellChangeTimes->{{3.903303084378296*^9, 3.90330309796869*^9}, 
   3.90330418028267*^9, 3.9033042989260483`*^9, 3.903304329755116*^9, 
   3.903304410537615*^9, 3.903304791424801*^9, 3.903305366037155*^9, 
   3.9033055709235077`*^9, 3.903360437219164*^9, {3.903361885666946*^9, 
   3.9033619324185534`*^9}, 3.903364231698938*^9, 3.903366053669973*^9, 
   3.903366457975431*^9},
 CellLabel->
  "Out[1463]=",ExpressionUUID->"51c50405-da26-4f7f-8ce8-be74c471c781"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphtet", ",", "gphgsd", ",", "gphR3", ",", "gphflg600", ",", "gphflggsd"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9033030437257643`*^9, 3.903303046855474*^9}, {
  3.9033030826785183`*^9, 3.9033030906780024`*^9}, {3.904572850352846*^9, 
  3.904572850585288*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"4f0428cc-e900-440e-ae0c-3ef81bb33038"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}, {-0.5257311121191336, 
        0, 0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311364`}, {-0.10040570794311364`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417601994`}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417601994`}, {-0.16245984811645317`, \
-0.5, 0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311364`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311364`}, {-0.42532540417601994`, \
-0.30901699437494745`, -0.10040570794311364`}, {-0.42532540417601994`, 
       0.30901699437494745`, -0.10040570794311364`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417601994`}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417601994`}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}}],
     "InfinitePlane"]}, 
   {PointSize[0.04], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}},
  Boxed->False,
  ImageSize->{478.2373703203898, 490.},
  ViewPoint->{0.2336645397166367, 0.7376850683195064, -3.2941192484270294`},
  ViewVertical->{-0.5115873573047887, 
   0.6461453600477411, -0.5663696227153056}]], "Output",
 CellChangeTimes->{{3.903303108162331*^9, 3.90330311791352*^9}, 
   3.903304181071575*^9, 3.903304299718136*^9, 3.90330433041696*^9, 
   3.903304411198571*^9, 3.903305366878895*^9, 3.903305571513522*^9, 
   3.903360438258132*^9, {3.903361886641467*^9, 3.90336193331676*^9}, 
   3.903364232303206*^9, 3.9033660548533707`*^9, 3.90336645901607*^9, {
   3.904572844341217*^9, 3.904572852026166*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"e7541b75-65a1-4f30-99ba-4dd83ce94b9b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"fgsd", ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Cyan", ",", "Thick", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lst", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lst", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lst", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lst", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lst", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.903303266124275*^9, 3.903303336766081*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"221120d0-fafb-4e05-80e9-10220c42fe28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "0", "]"}], ",", "Yellow", ",", 
        RowBox[{
        "UniformPolyhedron", "[", "\"\<GreatStellatedDodecahedron\>\"", 
         "]"}]}], "}"}], "]"}]}], "*)"}], ",", "gphR2", ",", "gphflg600", ",",
    "gphflggsd", ",", "fgsd"}], "]"}]], "Input",
 CellChangeTimes->{{3.903302669329208*^9, 3.903302673362742*^9}, {
  3.903302745225997*^9, 3.9033027454457283`*^9}, {3.903302778104871*^9, 
  3.903302781574362*^9}, {3.903302935230699*^9, 3.90330294525492*^9}, {
  3.903303000441811*^9, 3.903303050853368*^9}, {3.9033033433355293`*^9, 
  3.90330340880462*^9}, {3.903303457780527*^9, 3.903303519990889*^9}},
 CellLabel->
  "In[1466]:=",ExpressionUUID->"42a150af-1698-487c-998b-3ea36852c2ca"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}, 
   {RGBColor[0, 1, 1], Thickness[Large], 
    Line3DBox[{{-0.5257311121191336, 0., 0.10040570794311364`}, {
     0.32491969623290634`, 0., -0.42532540417602}}], 
    Line3DBox[{{0.32491969623290634`, 
     0., -0.42532540417602}, {-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}}], 
    Line3DBox[{{-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}}], 
    Line3DBox[{{-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}, {0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}}], 
    Line3DBox[{{0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}, {-0.5257311121191336, 0., 
     0.10040570794311364`}}]}},
  Boxed->False,
  ImageSize->{585.6073042770715, 444.94054412014873`},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.299381860736582, -0.2002095658342633, -3.117935680821078},
  ViewVertical->{0.02093598658796698, 
   0.8804003373523128, -0.47376885762523707`}]], "Output",
 CellChangeTimes->{{3.903303351353689*^9, 3.903303409923181*^9}, {
   3.903303473200302*^9, 3.903303521367077*^9}, 3.903303573520739*^9, 
   3.903303610003784*^9, 3.90330418184002*^9, 3.9033043009493732`*^9, 
   3.903304331048024*^9, {3.903304397809165*^9, 3.9033044118829193`*^9}, 
   3.9033047046387873`*^9, 3.903304754177162*^9, 3.9033053678298607`*^9, 
   3.9033055722527657`*^9, 3.9033604393243513`*^9, 3.903360515599696*^9, {
   3.9033618875609417`*^9, 3.9033619341074963`*^9}, 3.9033642332040977`*^9, 
   3.9033660557854843`*^9, 3.90336645996874*^9},
 CellLabel->
  "Out[1466]=",ExpressionUUID->"d979a984-c3eb-4c07-bbd1-f2ddb76ed974"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", ".2", "]"}], ",", "Yellow", ",", 
      RowBox[{
      "UniformPolyhedron", "[", "\"\<GreatStellatedDodecahedron\>\"", "]"}]}],
      "}"}], "]"}], ",", "gphR3", ",", "gphflg600", ",", "gphflggsd", ",", 
   "fgsd", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903302669329208*^9, 3.903302673362742*^9}, {
  3.903302745225997*^9, 3.9033027454457283`*^9}, {3.903302778104871*^9, 
  3.903302781574362*^9}, {3.903302935230699*^9, 3.90330294525492*^9}, {
  3.903303000441811*^9, 3.903303050853368*^9}, {3.9033033433355293`*^9, 
  3.90330340880462*^9}, {3.903303457780527*^9, 3.903303519990889*^9}, {
  3.903303704361038*^9, 3.903303764042056*^9}, {3.90330392634802*^9, 
  3.903303929242529*^9}, {3.9033604636912193`*^9, 3.903360481277272*^9}, {
  3.903360530663965*^9, 3.903360558564394*^9}, {3.90336058997405*^9, 
  3.903360642824317*^9}},
 CellLabel->
  "In[1467]:=",ExpressionUUID->"337a91d5-7310-45b8-8b54-6c245ce35705"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}}],
     "InfinitePlane"]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}, 
   {RGBColor[0, 1, 1], Thickness[Large], 
    Line3DBox[{{-0.5257311121191336, 0., 0.10040570794311364`}, {
     0.32491969623290634`, 0., -0.42532540417602}}], 
    Line3DBox[{{0.32491969623290634`, 
     0., -0.42532540417602}, {-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}}], 
    Line3DBox[{{-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}}], 
    Line3DBox[{{-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}, {0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}}], 
    Line3DBox[{{0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}, {-0.5257311121191336, 0., 
     0.10040570794311364`}}]}},
  Boxed->False,
  ImageSize->{486.86848485235714`, 488.0799754166616},
  ImageSizeRaw->Automatic,
  PlotRange->All,
  ViewPoint->{-3.1226997974939237`, 0.7889615713362883, -1.037441860388328},
  ViewVertical->{-0.3321115870933592, 
   0.926388375062481, -0.17750062610432202`}]], "Output",
 CellChangeTimes->{{3.903303738188319*^9, 3.903303765409237*^9}, 
   3.903303930735785*^9, 3.9033041825786667`*^9, {3.9033043018537073`*^9, 
   3.9033043317883*^9}, 3.90330441272752*^9, 3.903305369161088*^9, 
   3.903305572880495*^9, 3.903344781469049*^9, {3.903360440202484*^9, 
   3.9033604841887407`*^9}, {3.903360519116467*^9, 3.9033605324074697`*^9}, {
   3.9033605939890127`*^9, 3.903360643760244*^9}, {3.903361888671694*^9, 
   3.903361935090027*^9}, 3.9033642341285543`*^9, 3.903366056553356*^9, 
   3.9033664610036182`*^9},
 CellLabel->
  "Out[1467]=",ExpressionUUID->"9c8e7272-f795-48b6-8e9a-b02426dbb79a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", ".2", "]"}], ",", "Yellow", ",", 
      RowBox[{
      "UniformPolyhedron", "[", "\"\<GreatStellatedDodecahedron\>\"", "]"}]}],
      "}"}], "]"}], ",", "gphflggsd", ",", "fgsd", ",", 
   RowBox[{"Boxed", "->", "False"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903345493335685*^9, 3.9033455222075357`*^9}, {
  3.903360442832624*^9, 3.9033604535050793`*^9}},
 CellLabel->
  "In[1468]:=",ExpressionUUID->"142e137f-5031-4ae6-b3e9-9be4912a3a26"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}, 
   {RGBColor[0, 1, 1], Thickness[Large], 
    Line3DBox[{{-0.5257311121191336, 0., 0.10040570794311364`}, {
     0.32491969623290634`, 0., -0.42532540417602}}], 
    Line3DBox[{{0.32491969623290634`, 
     0., -0.42532540417602}, {-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}}], 
    Line3DBox[{{-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}}], 
    Line3DBox[{{-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}, {0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}}], 
    Line3DBox[{{0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}, {-0.5257311121191336, 0., 
     0.10040570794311364`}}]}},
  Boxed->False,
  ImageSize->{355.273824971844, 358.758778868132},
  ImageSizeRaw->Automatic,
  PlotRange->All,
  ViewPoint->{-1.0402070737520361`, 0.7058115905177457, 3.1416236633955767`},
  ViewVertical->{0.4063085895589759, -0.2074952104089428, 
   0.8898646344854615}]], "Output",
 CellChangeTimes->{{3.903345511075194*^9, 3.903345522828225*^9}, {
   3.903360440414322*^9, 3.903360454072734*^9}, 3.903360521595825*^9, {
   3.903361888914572*^9, 3.903361935249654*^9}, 3.903364234586286*^9, 
   3.9033660568036346`*^9, 3.903366461311191*^9},
 CellLabel->
  "Out[1468]=",ExpressionUUID->"9b948b79-1803-4a5b-a4f5-1b85150e5440"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphtet", ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", ".2", "]"}], ",", "Yellow", ",", 
      RowBox[{
      "UniformPolyhedron", "[", "\"\<GreatStellatedDodecahedron\>\"", "]"}]}],
      "}"}], "]"}], ",", "gphflggsd", ",", "gphflg600", ",", "fgsd", ",", 
   RowBox[{"Boxed", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.903345493335685*^9, 3.9033455222075357`*^9}, {
  3.903345699350501*^9, 3.903345712553939*^9}},
 CellLabel->
  "In[1469]:=",ExpressionUUID->"4c708642-a3e8-4758-940e-5afb24ed3f37"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], Opacity[0.5], 
    TetrahedronBox[{{0, 0, 0}, {-0.20034016451692505`, 
      0., -0.10017008225846251`}, {0., 
      0., -0.22398711324166787`}, {-0.061908515491602666`, 
      0.19053481893946467`, -0.10017008225846251`}}]}, 
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417602}, {-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311365`}, {-0.10040570794311365`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311365`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417602}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417602}, {-0.16245984811645317`, -0.5,
        0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311365`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311365`}, {-0.42532540417602, \
-0.30901699437494745`, -0.10040570794311365`}, {-0.42532540417602, 
       0.30901699437494745`, -0.10040570794311365`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417602}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417602}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.5257311121191336, 0., 
      0.10040570794311364`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.027751455142577555`, 
      0.08541019662496847, -0.04490279765795855}, {0, 0, 0}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[{{-0.5257311121191336, 0., 
       0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795855}, {0, 0, 0}}]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {RGBColor[0, 1, 1], Thickness[Large], 
    Line3DBox[{{-0.5257311121191336, 0., 0.10040570794311364`}, {
     0.32491969623290634`, 0., -0.42532540417602}}], 
    Line3DBox[{{0.32491969623290634`, 
     0., -0.42532540417602}, {-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}}], 
    Line3DBox[{{-0.10040570794311365`, 0.30901699437494745`, 
     0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}}], 
    Line3DBox[{{-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417602}, {0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}}], 
    Line3DBox[{{0.42532540417601994`, 0.30901699437494745`, 
     0.10040570794311364`}, {-0.5257311121191336, 0., 
     0.10040570794311364`}}]}},
  Boxed->False,
  ImageSize->{361.1018884627864, 363.65754730201104`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-0.3033679533162358, 3.367080618997283, -0.1439999655333042},
  ViewVertical->{-0.3456159861934755, 0.5429596360728165, 
   0.7653394173065869}]], "Output",
 CellChangeTimes->{
  3.903345713636972*^9, 3.903360441143177*^9, 3.903360524514513*^9, {
   3.903361889664586*^9, 3.9033619359400463`*^9}, 3.9033642355294857`*^9, 
   3.9033660573877487`*^9, 3.903366462054261*^9},
 CellLabel->
  "Out[1469]=",ExpressionUUID->"01e40a30-5263-46d2-8560-8c2852900800"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gphgsd", ",", "gphflggsdMagenta", ",", "gphflg600", ",", "fgsd"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904486513428355*^9, 3.904486513616644*^9}, {
  3.904487386367255*^9, 3.904487388722486*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"67cedf29-e829-48b6-aba1-0718c9c9a844"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}, {-0.5257311121191336, 
        0, 0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311364`}, {-0.10040570794311364`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417601994`}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417601994`}, {-0.16245984811645317`, \
-0.5, 0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311364`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311364`}, {-0.42532540417601994`, \
-0.30901699437494745`, -0.10040570794311364`}, {-0.42532540417601994`, 
       0.30901699437494745`, -0.10040570794311364`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417601994`}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417601994`}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 1], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {RGBColor[0, 1, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}}, {{
       0.32491969623290634`, 
        0, -0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}}, {{-0.10040570794311364`, 
      0.30901699437494745`, 
      0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417601994`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 
         0]}}, {{-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417601994`}, {0.42532540417601994`, 0.30901699437494745`, 
      0.10040570794311364`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{0.42532540417601994`, 
       0.30901699437494745`, 
       0.10040570794311364`}, {-0.5257311121191336, 0, 
        0.10040570794311364`}}]]}},
  Boxed->False,
  ImageSize->{358.6935237510795, 354.9428777666961},
  ImageSizeRaw->Automatic,
  ViewPoint->{-2.8793722143124985`, 0.9609781192267117, -1.4952380097538431`},
  
  ViewVertical->{-0.27224552780718186`, 
   0.9386690229826539, -0.21161955930815812`}]], "Output",
 CellChangeTimes->{{3.903364275105927*^9, 3.903364299638874*^9}, 
   3.903364359824855*^9, 3.9033660580241957`*^9, 3.9033664630354643`*^9, 
   3.9033665352073107`*^9, 3.904486478172022*^9, 3.904486515275593*^9, 
   3.9044873898900537`*^9, 3.904487429803001*^9, 3.9044874767240047`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"5c6ddcaf-2bc6-4070-a879-5f3f0c431245"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "gphgsd", ",", "gphflggsd", ",", "gphflg600", ",", "gphP1", ",", "fgsd"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904486468064814*^9, 3.9044864699325027`*^9}, {
  3.904486517969984*^9, 3.90448651814475*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2d1526d9-94d0-402d-8d9b-13ad3513d130"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 1, 0], Opacity[0.2], 
    PolyhedronBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 2, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[-1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 40 #^2 + 80 #^4& , 3, 0], Rational[1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{-0.32491969623290634`, 0, 
        0.42532540417601994`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}, {-0.5257311121191336, 
        0, 0.10040570794311364`}, {
       0.5257311121191336, 
        0, -0.10040570794311364`}, {-0.10040570794311364`, \
-0.30901699437494745`, 0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}, {
       0.10040570794311364`, -0.30901699437494745`, -0.42532540417601994`}, {
       0.10040570794311364`, 
       0.30901699437494745`, -0.42532540417601994`}, {-0.16245984811645317`, \
-0.5, 0.10040570794311364`}, {-0.16245984811645317`, 0.5, 
       0.10040570794311364`}, {
       0.16245984811645317`, -0.5, -0.10040570794311364`}, {
       0.16245984811645317`, 
       0.5, -0.10040570794311364`}, {-0.42532540417601994`, \
-0.30901699437494745`, -0.10040570794311364`}, {-0.42532540417601994`, 
       0.30901699437494745`, -0.10040570794311364`}, {-0.2628655560595668, 
       0.19098300562505255`, -0.42532540417601994`}, {-0.2628655560595668, \
-0.19098300562505255`, -0.42532540417601994`}, {0.2628655560595668, 
       0.19098300562505255`, 0.42532540417601994`}, {
       0.2628655560595668, -0.19098300562505255`, 0.42532540417601994`}, {
       0.42532540417601994`, -0.30901699437494745`, 0.10040570794311364`}, {
       0.42532540417601994`, 0.30901699437494745`, 0.10040570794311364`}}], {{
     13, 4, 1, 7, 17}, {18, 8, 1, 4, 14}, {10, 7, 1, 8, 9}, {19, 3, 2, 5, 
     15}, {16, 6, 2, 3, 20}, {12, 5, 2, 6, 11}, {9, 20, 3, 19, 10}, {11, 14, 
     4, 13, 12}, {17, 15, 5, 12, 13}, {14, 11, 6, 16, 18}, {15, 17, 7, 10, 
     19}, {20, 9, 8, 18, 16}}]}, 
   {PointSize[0.03], 
    Point3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {
       Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
         Root[1 - 5 #^2 + 5 #^4& , 2, 0] + Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
        Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
         Rational[1, 2] (-1 + 5^Rational[1, 2])), 
        Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
         2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
         Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
       0}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {-0.10017008225846252`, 
       0., -0.1620785977500652}, {-0.027751455142577555`, 
       0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}],
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[0, 1, 1], Opacity[0.8], 
     TetrahedronBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.10017008225846252`, 
        0., -0.1620785977500652}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]]}}, 
   {PointSize[0.03], 
    Point3DBox[{{-0.20034016451692505`, 
     0., -0.10017008225846251`}, {-0.10017008225846252`, 
     0., -0.1620785977500652}, {-0.066780054838975, 
     0., -0.10805239850004346`}, {-0.06556217000213192, 
     0.04763370473486617, -0.10608181943964823`}},
     VertexColors->{
       RGBColor[1, 0, 0], 
       RGBColor[0, 0, 1], 
       RGBColor[0, 1, 0], 
       RGBColor[1, 1, 0]}], 
    {RGBColor[1, 0, 1], Opacity[1], 
     TetrahedronBox[{{-0.20034016451692505`, 
      0., -0.10017008225846251`}, {-0.10017008225846252`, 
      0., -0.1620785977500652}, {-0.066780054838975, 
      0., -0.10805239850004346`}, {-0.06556217000213192, 
      0.04763370473486617, -0.10608181943964823`}}]}}, 
   {RGBColor[1, 0.5, 0], Opacity[0.2], 
    TagBox[
     ConicHullRegion3DBox[
      NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
         1 - 100 #^2 + 80 #^4& , 3, 0]}, {
        Rational[1, 5] (Root[1 - 10 #^2 + 5 #^4& , 3, 0] + 
          Root[1 - 5 #^2 + 5 #^4& , 2, 0] + 
          Root[1 - 100 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 2, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0]), 
         Rational[1, 5] (Rational[1, 4] (-3 + 5^Rational[1, 2]) + 
          Rational[1, 2] (-1 + 5^Rational[1, 2])), 
         Rational[1, 5] (2 Root[1 - 100 #^2 + 80 #^4& , 3, 0] + 
          2 Root[1 - 20 #^2 + 80 #^4& , 1, 0] + 
          Root[1 - 20 #^2 + 80 #^4& , 4, 0])}, {0, 0, 
        0}}, {{-0.5257311121191336, 0, 
         0.10040570794311364`}, {-0.027751455142577555`, 
        0.08541019662496847, -0.04490279765795853}, {0, 0, 0}}]],
     "InfinitePlane"]}, 
   {RGBColor[0, 1, 1], Thickness[Large], 
    Line3DBox[
     NCache[{{Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}}, {{-0.5257311121191336, 0, 
        0.10040570794311364`}, {
       0.32491969623290634`, 0, -0.42532540417601994`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 10 #^2 + 5 #^4& , 3, 0], 0, Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}}, {{
       0.32491969623290634`, 
        0, -0.42532540417601994`}, {-0.10040570794311364`, 
       0.30901699437494745`, 0.42532540417601994`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 100 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 4, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}}, {{-0.10040570794311364`, 
      0.30901699437494745`, 
      0.42532540417601994`}, {-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417601994`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 
         0]}}, {{-0.2628655560595668, -0.19098300562505255`, \
-0.42532540417601994`}, {0.42532540417601994`, 0.30901699437494745`, 
      0.10040570794311364`}}]], 
    Line3DBox[
     NCache[{{Root[1 - 20 #^2 + 80 #^4& , 4, 0], 
        Rational[1, 4] (-1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 2, 0], 0, Root[
        1 - 100 #^2 + 80 #^4& , 3, 0]}}, {{0.42532540417601994`, 
       0.30901699437494745`, 
       0.10040570794311364`}, {-0.5257311121191336, 0, 
        0.10040570794311364`}}]]}},
  Boxed->False,
  ImageSize->{352.17410242416787`, 356.46095494571904`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-3.331328781442199, 0.5268507161645535, -0.27327069512067625`},
  ViewVertical->{-0.4786178204492479, 0.7516258715026015, 
   0.45385408584297926`}]], "Output",
 CellChangeTimes->{
  3.904486473072481*^9, {3.90448650785993*^9, 3.9044865195475073`*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"e5385f11-7f9a-41e0-90a5-beed8dd896bd"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Mac OS X x86 (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"95ae7a1a-35c0-42c4-a91c-9505ab9c208e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 451, 7, 98, "Title",ExpressionUUID->"9c6152ea-e5e2-484b-adc8-55b1b1d273eb"],
Cell[1034, 31, 590, 10, 35, "Text",ExpressionUUID->"b6d23247-be9d-4139-a587-458f1e5c4a9c"],
Cell[CellGroupData[{
Cell[1649, 45, 223, 4, 67, "Section",ExpressionUUID->"33345e20-1bcf-4b96-8862-77edd796f7ef"],
Cell[1875, 51, 608, 17, 35, "Text",ExpressionUUID->"3e8172c5-78cb-4f70-9c97-0875744945f3"],
Cell[CellGroupData[{
Cell[2508, 72, 1111, 26, 91, "Code",ExpressionUUID->"260cd45e-0980-493d-814d-0143b927d7e7"],
Cell[3622, 100, 5458, 102, 380, "Output",ExpressionUUID->"80616452-6adf-4b07-b887-1d5115d98104"]
}, Open  ]],
Cell[9095, 205, 247, 4, 35, "Text",ExpressionUUID->"55aa263b-60e7-4600-b1b0-54779aa96d17"],
Cell[CellGroupData[{
Cell[9367, 213, 2820, 76, 157, "Input",ExpressionUUID->"a83b8941-762d-4b5a-9a6a-aa1c6cb5e1ff"],
Cell[12190, 291, 68925, 1154, 380, 5995, 123, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"28ca19d6-76c3-4611-8c9e-3c722b834b12"]
}, Open  ]],
Cell[81130, 1448, 1259, 35, 52, "Code",ExpressionUUID->"48b1a36d-3d81-444b-91bd-c2426ba1fbe5"],
Cell[82392, 1485, 988, 19, 52, "Code",ExpressionUUID->"67ac7865-c412-40c6-b252-c0fab114c83b"],
Cell[83383, 1506, 381, 8, 52, "Code",ExpressionUUID->"bd6df76f-e2ab-459e-aedf-3a2829dc6303"],
Cell[83767, 1516, 905, 13, 52, "Code",ExpressionUUID->"a00fb5c4-9ac7-417f-a0e8-fe855a08b8e1"],
Cell[84675, 1531, 914, 19, 52, "Code",ExpressionUUID->"5af828b4-52d2-433d-ab0a-af2a27a6dc5a"],
Cell[CellGroupData[{
Cell[85614, 1554, 478, 9, 52, "Code",ExpressionUUID->"45dbbcb3-fd67-46b4-8b54-4d60b2965224"],
Cell[86095, 1565, 569, 10, 70, "Output",ExpressionUUID->"5f55fa75-7578-4a50-85fa-5e42981ab6b4"]
}, Open  ]],
Cell[86679, 1578, 628, 13, 30, "Input",ExpressionUUID->"aeaf4846-226d-46dd-852a-ca6d821d5a3d"],
Cell[CellGroupData[{
Cell[87332, 1595, 406, 8, 30, "Input",ExpressionUUID->"ef04ee90-a4c3-432a-aeb1-3d80950a589f"],
Cell[87741, 1605, 5994, 115, 380, "Output",ExpressionUUID->"17e1819a-1786-4f4c-ab7d-ef2d57fa9c36"]
}, Open  ]],
Cell[93750, 1723, 1477, 29, 72, "Code",ExpressionUUID->"11f01768-91ba-4e8f-9361-103c87aa5dba"],
Cell[CellGroupData[{
Cell[95252, 1756, 415, 8, 30, "Input",ExpressionUUID->"5d1679ce-b41f-4e58-b630-98c997b4956a"],
Cell[95670, 1766, 59396, 987, 377, 5555, 106, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"972d2255-2d1e-43cc-9495-d6ed408bf495"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[155115, 2759, 154, 3, 53, "Section",ExpressionUUID->"53baa5fc-4ff5-46c9-9bb2-7cd13b4952e1"],
Cell[155272, 2764, 436, 6, 35, "Text",ExpressionUUID->"1392a223-6aa5-4bc8-8a1a-a50646501697"],
Cell[155711, 2772, 972, 21, 52, "Code",ExpressionUUID->"6e86e284-141b-47ee-8554-35f570675476"],
Cell[156686, 2795, 177, 3, 35, "Text",ExpressionUUID->"98b66e26-00e9-4a7b-918c-7b857e5cecc4"],
Cell[156866, 2800, 3242, 76, 224, "Code",ExpressionUUID->"1eb6859c-4258-4b79-890f-2c5977166084"],
Cell[CellGroupData[{
Cell[160133, 2880, 387, 6, 30, "Input",ExpressionUUID->"1fe564a2-c4fe-43e1-b7c5-b3b3486e1acc"],
Cell[160523, 2888, 17684, 301, 349, 3692, 73, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"344f820a-ea42-4e93-b94a-b4e83dab8ba3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178244, 3194, 346, 7, 30, "Input",ExpressionUUID->"bf148575-56d3-43e2-ad86-ff406fcb6799"],
Cell[178593, 3203, 33642, 560, 377, 2136, 43, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"62e017e3-b168-4eba-997d-5454d118e363"]
}, Open  ]],
Cell[212250, 3766, 561, 13, 30, "Input",ExpressionUUID->"a8028e95-e97d-41e3-89a2-72b09b31d468"],
Cell[212814, 3781, 76202, 1272, 459, 6345, 126, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"3efb0345-e472-4486-abe2-aad87b63b9bc"],
Cell[289019, 5055, 224, 5, 35, "Text",ExpressionUUID->"a0f58270-9a77-4df3-bacf-f238b3916848"],
Cell[289246, 5062, 2262, 61, 148, "Code",ExpressionUUID->"c02f386f-500a-4c2d-a847-c70a35aba8d5"],
Cell[291511, 5125, 1352, 25, 91, "Code",ExpressionUUID->"4c660879-9e61-44b3-941d-e7151220cebd"],
Cell[CellGroupData[{
Cell[292888, 5154, 454, 7, 30, "Input",ExpressionUUID->"cbbb27b8-a853-4e8d-9061-1baf76cce40f"],
Cell[293345, 5163, 5955, 121, 276, "Output",ExpressionUUID->"1b561f61-5fa1-4e87-8f4d-a3eb2b8696b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299337, 5289, 621, 9, 30, "Input",ExpressionUUID->"5ff6dc68-626a-477d-8c57-31e29058a1bb"],
Cell[299961, 5300, 91681, 1526, 518, 6516, 130, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5f729e1a-ec1f-40c3-ba37-cffdbb1de49f"]
}, Open  ]],
Cell[391657, 6829, 830, 15, 30, "Input",ExpressionUUID->"f330b6e8-e63b-4aca-9d33-f7a8fdecd1d5"],
Cell[392490, 6846, 84208, 1407, 462, 7622, 150, "CachedBoxData", "BoxData", "Input",ExpressionUUID->"249b1537-4bae-48c1-b8f8-0179d5d77311"],
Cell[CellGroupData[{
Cell[476723, 8257, 321, 6, 30, "Input",ExpressionUUID->"f046be75-ac77-4959-982e-f2c1855857b0"],
Cell[477047, 8265, 79731, 1351, 380, 10532, 216, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5ab9d405-8a3c-4de5-b527-db7642fae1ea"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[556827, 9622, 609, 17, 54, "Section",ExpressionUUID->"a6c4f5ea-3d9d-466c-877c-b79e904f4829"],
Cell[557439, 9641, 1354, 30, 110, "Code",ExpressionUUID->"effa1ae3-3a7f-405f-bd4e-183cfcb9685e"],
Cell[558796, 9673, 1808, 46, 110, "Code",ExpressionUUID->"20020b11-5b1e-4ee2-a5c3-2d3652c9f213"],
Cell[560607, 9721, 4371, 114, 167, "Code",ExpressionUUID->"059a0b5f-600c-4f78-837a-f09ec4fc89c1"],
Cell[CellGroupData[{
Cell[565003, 9839, 290, 6, 30, "Input",ExpressionUUID->"f3145191-e9be-458c-bd87-c475b3179563"],
Cell[565296, 9847, 3152, 69, 208, "Output",ExpressionUUID->"39f7ec37-4327-44e2-b8a5-6aff44836a16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568485, 9921, 413, 7, 30, "Input",ExpressionUUID->"04158868-9b2e-4809-9aaa-542f0bb79366"],
Cell[568901, 9930, 16255, 285, 179, 3368, 74, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"f4a9dc0d-7576-4dd0-8bc3-4eeac51f419a"]
}, Open  ]],
Cell[585171, 10218, 301, 6, 30, "Input",ExpressionUUID->"01444660-7c35-47da-9ad0-18b4235805b8"],
Cell[585475, 10226, 3486, 76, 135, "Input",ExpressionUUID->"9c3caec7-613c-4c4f-a4a7-58d985ca9a7a"],
Cell[CellGroupData[{
Cell[588986, 10306, 302, 6, 30, "Input",ExpressionUUID->"9751a2e0-c215-4360-9767-f79be6c3d8c4"],
Cell[589291, 10314, 16385, 289, 201, 3359, 74, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6b8ed0e5-5454-44d1-bd0e-1562ec762294"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605713, 10608, 402, 8, 30, "Input",ExpressionUUID->"41177f33-a358-4455-9bfa-7b7b9d074bde"],
Cell[606118, 10618, 18466, 326, 227, 3994, 87, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d3a638fe-8723-492a-91bd-a22a50458120"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624621, 10949, 1270, 32, 30, "Input",ExpressionUUID->"311d9d59-233d-4669-97fe-c8966a15c7d9"],
Cell[625894, 10983, 35579, 612, 303, 9641, 189, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b7c84e5d-8603-471b-b63b-16e9d6de8191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661510, 11600, 1264, 32, 30, "Input",ExpressionUUID->"a0d4ce15-b724-4546-984b-c0bba6337617"],
Cell[662777, 11634, 35988, 614, 349, 7594, 147, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a1877639-da80-414f-9a5c-b4447836fdeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698802, 12253, 1266, 32, 30, "Input",ExpressionUUID->"e194f051-d884-4f6d-b969-b0ecf19ec3f5"],
Cell[700071, 12287, 27926, 482, 328, 7268, 143, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0d53f724-72c5-4818-ab54-4716071a44c4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[728046, 12775, 309, 9, 54, "Section",ExpressionUUID->"3ef7bcf9-0e09-4e8d-a42c-ac89db0a08b8"],
Cell[728358, 12786, 4021, 103, 110, "Code",ExpressionUUID->"ec4a6293-ace8-40a3-9307-f0de87ca3135"],
Cell[CellGroupData[{
Cell[732404, 12893, 979, 22, 52, "Input",ExpressionUUID->"b87ba1a7-8aa2-460c-b773-2b9b6a0fb6d4"],
Cell[733386, 12917, 19072, 331, 260, 6913, 131, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"f113eac7-82de-4937-bb4e-ede331fc3880"]
}, Open  ]],
Cell[752473, 13251, 4321, 109, 110, "Code",ExpressionUUID->"5f5fdb9d-d59d-44bf-b5a6-4dda29759c6b"],
Cell[CellGroupData[{
Cell[756819, 13364, 567, 11, 30, "Input",ExpressionUUID->"3249a698-b5e5-42bf-9e2c-e186ab173fae"],
Cell[757389, 13377, 22594, 390, 215, 8376, 156, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b5d9f206-31c1-404c-ae93-27221e242f1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780020, 13772, 610, 11, 30, "Input",ExpressionUUID->"640e0ed5-b42e-43f1-99fd-3827f33dc883"],
Cell[780633, 13785, 33410, 575, 279, 10408, 197, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5b71bec6-4b82-4362-823b-93eaf6d4542f"]
}, Open  ]],
Cell[814058, 14363, 488, 9, 52, "Code",ExpressionUUID->"ddbc3e1f-1525-45ff-808c-d04cf0ee8544"],
Cell[CellGroupData[{
Cell[814571, 14376, 944, 21, 30, "Input",ExpressionUUID->"05ab2d47-ebaf-4b8e-9181-41202baa29ac"],
Cell[815518, 14399, 23507, 406, 400, 8528, 159, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"026bdf22-3a6a-4cc9-8c96-db47aecddf6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[839062, 14810, 967, 22, 30, "Input",ExpressionUUID->"f22343db-d657-49cd-a16c-faeaaff1b87d"],
Cell[840032, 14834, 26202, 450, 322, 8540, 160, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a5fa8e8f-7da4-4978-bfa7-bb0d2030acd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[866271, 15289, 1044, 23, 30, "Input",ExpressionUUID->"1d804386-a505-4a6d-89cc-9fd743b6a772"],
Cell[867318, 15314, 10673, 203, 170, "Output",ExpressionUUID->"53f3ef13-b3f2-4333-80a2-e0aa97e9a743"]
}, Open  ]],
Cell[CellGroupData[{
Cell[878028, 15522, 1016, 21, 30, "Input",ExpressionUUID->"8d125d10-0e36-4819-88f8-d9dc4792f767"],
Cell[879047, 15545, 10669, 202, 182, "Output",ExpressionUUID->"7275d2ff-d23b-44b0-9a9d-c76d74476332"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[889765, 15753, 256, 4, 53, "Section",ExpressionUUID->"97ed3a10-60d9-4b2d-aa28-68daed04c079"],
Cell[CellGroupData[{
Cell[890046, 15761, 396, 8, 30, "Input",ExpressionUUID->"1bc627fd-1675-4ce9-b3bc-71110b685afe"],
Cell[890445, 15771, 2392, 51, 316, "Output",ExpressionUUID->"ffa6ebda-e860-42c9-b84b-853c92825394"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892874, 15827, 311, 6, 30, "Input",ExpressionUUID->"efafdd8c-d9e5-44c2-b423-496d6cc2f72d"],
Cell[893188, 15835, 3062, 62, 321, "Output",ExpressionUUID->"09dc735b-e4ec-4245-bb2f-7df834913870"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896287, 15902, 256, 5, 30, "Input",ExpressionUUID->"10fbb1b6-27b4-4329-9de7-2f3f0c7657a4"],
Cell[896546, 15909, 2118, 45, 338, "Output",ExpressionUUID->"b57509f0-743c-44af-b08d-634c4824a5e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898701, 15959, 308, 6, 30, "Input",ExpressionUUID->"12aec030-7058-4074-939a-3039c4a864ff"],
Cell[899012, 15967, 1992, 45, 300, "Output",ExpressionUUID->"459209dd-804d-403d-b9da-9ffbb1554d6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901041, 16017, 308, 6, 30, "Input",ExpressionUUID->"0c1b2ba8-10e6-412e-bb9d-404c9ad34d72"],
Cell[901352, 16025, 1990, 45, 327, "Output",ExpressionUUID->"fd38f539-04ec-4fda-85a0-37ead8134930"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903379, 16075, 700, 14, 52, "Input",ExpressionUUID->"aecc12e4-ba4f-4d4a-860d-045def14a9ae"],
Cell[904082, 16091, 7203, 147, 267, "Output",ExpressionUUID->"46e00e65-a1c7-4389-b0fd-562eb7c319da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[911322, 16243, 348, 8, 30, "Input",ExpressionUUID->"a75da07b-6a6b-42dd-91f6-46f31776732a"],
Cell[911673, 16253, 6816, 141, 379, "Output",ExpressionUUID->"51c50405-da26-4f7f-8ce8-be74c471c781"]
}, Open  ]],
Cell[CellGroupData[{
Cell[918526, 16399, 399, 9, 30, "Input",ExpressionUUID->"4f0428cc-e900-440e-ae0c-3ef81bb33038"],
Cell[918928, 16410, 8202, 166, 507, "Output",ExpressionUUID->"e7541b75-65a1-4f30-99ba-4dd83ce94b9b"]
}, Open  ]],
Cell[927145, 16579, 1507, 44, 91, "Code",ExpressionUUID->"221120d0-fafb-4e05-80e9-10220c42fe28"],
Cell[CellGroupData[{
Cell[928677, 16627, 885, 19, 30, "Input",ExpressionUUID->"42a150af-1698-487c-998b-3ea36852c2ca"],
Cell[929565, 16648, 3626, 76, 462, "Output",ExpressionUUID->"d979a984-c3eb-4c07-bbd1-f2ddb76ed974"]
}, Open  ]],
Cell[CellGroupData[{
Cell[933228, 16729, 1116, 22, 30, "Input",ExpressionUUID->"337a91d5-7310-45b8-8b54-6c245ce35705"],
Cell[934347, 16753, 7754, 158, 505, "Output",ExpressionUUID->"9c8e7272-f795-48b6-8e9a-b02426dbb79a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[942138, 16916, 629, 15, 30, "Input",ExpressionUUID->"142e137f-5031-4ae6-b3e9-9be4912a3a26"],
Cell[942770, 16933, 6225, 125, 376, "Output",ExpressionUUID->"9b948b79-1803-4a5b-a4f5-1b85150e5440"]
}, Open  ]],
Cell[CellGroupData[{
Cell[949032, 17063, 615, 14, 30, "Input",ExpressionUUID->"4c708642-a3e8-4758-940e-5afb24ed3f37"],
Cell[949650, 17079, 7137, 146, 381, "Output",ExpressionUUID->"01e40a30-5263-46d2-8560-8c2852900800"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956824, 17230, 328, 6, 30, "Input",ExpressionUUID->"67cedf29-e829-48b6-aba1-0718c9c9a844"],
Cell[957155, 17238, 9688, 199, 372, "Output",ExpressionUUID->"5c6ddcaf-2bc6-4070-a879-5f3f0c431245"]
}, Open  ]],
Cell[CellGroupData[{
Cell[966880, 17442, 339, 7, 30, "Input",ExpressionUUID->"2d1526d9-94d0-402d-8d9b-13ad3513d130"],
Cell[967222, 17451, 10394, 215, 373, "Output",ExpressionUUID->"e5385f11-7f9a-41e0-90a5-beed8dd896bd"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

